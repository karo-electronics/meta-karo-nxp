Index: u-boot-tx93-mb7/arch/arm/dts/Makefile
===================================================================
--- u-boot-tx93-mb7.orig/arch/arm/dts/Makefile
+++ u-boot-tx93-mb7/arch/arm/dts/Makefile
@@ -1009,7 +1009,11 @@ dtb-$(CONFIG_ARCH_IMX9) += \
 	imx93-11x11-evk.dtb \
 	imx93-14x14-evk.dtb \
 	imx93-9x9-qsb.dtb \
-	imx93-9x9-qsb-ontat-wvga-panel.dts
+	imx93-9x9-qsb-ontat-wvga-panel.dtb \
+	imx93-qs93-5210.dtb \
+	imx93-qs93-5210-qsbase93.dtb \
+	imx93-tx93-5210-lvds-mb.dtb \
+	imx93-tx93-5210-mb7.dtb
 
 dtb-$(CONFIG_ARCH_IMXRT) += imxrt1050-evk.dtb \
 	imxrt1020-evk.dtb
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-karo.dtsi
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-karo.dtsi
@@ -0,0 +1,367 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+/dts-v1/;
+
+#include "imx93.dtsi"
+
+/ {
+	aliases {
+		ethernet0 = &eqos;
+		ethernet1 = &fec;
+		mmc0 = &usdhc1;
+		mmc1 = &usdhc2;
+		serial1 = &lpuart3;
+		serial2 = &lpuart5;
+		serial3 = &lpuart4;
+		serial4 = &lpuart2;
+		usb-host = &usbotg2;
+		usbotg = &usbotg1;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	reg_vref_1v8: regulator-adc-vref {
+		compatible = "regulator-fixed";
+		regulator-name = "vref_1v8";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		vin-supply = <&buck5>;
+	};
+
+	reg_vdd_3v3: regulator-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd_3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		vin-supply = <&buck4>;
+	};
+};
+
+&lpi2c1 {
+	clock-frequency = <400000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_lpi2c1>;
+	pinctrl-1 = <&pinctrl_lpi2c1_gpio>;
+	scl-gpios = <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+
+	pmic: pmic@25 {
+		compatible = "nxp,pca9451a";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_pmic>;
+		reg = <0x25>;
+
+		regulators {
+			buck1: BUCK1 {
+				regulator-name = "BUCK1";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <2187500>;
+				regulator-boot-on;
+				regulator-always-on;
+				regulator-ramp-delay = <3125>;
+			};
+
+			buck2: BUCK2 {
+				regulator-name = "BUCK2";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <2187500>;
+				regulator-ramp-delay = <3125>;
+			};
+
+			buck4: BUCK4 {
+				regulator-name = "BUCK4";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			buck5: BUCK5 {
+				regulator-name = "BUCK5";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			buck6: BUCK6 {
+				regulator-name = "BUCK6";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo1: LDO1 {
+				regulator-name = "LDO1";
+				regulator-min-microvolt = <1600000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo2: LDO2 {
+				regulator-name = "LDO2";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <1150000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo3: LDO3 {
+				regulator-name = "LDO3";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo4: LDO4 {
+				regulator-name = "LDO4";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo5: LDO5 {
+				regulator-name = "LDO5";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+		};
+	};
+};
+
+&lpi2c2 {
+	clock-frequency = <400000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_lpi2c2>;
+	pinctrl-1 = <&pinctrl_lpi2c2_gpio>;
+	scl-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio1 3 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+};
+
+&lpuart1 { /* console */
+	pinctrl-names = "default";
+	clocks = <&clk IMX93_CLK_LPUART1_GATE>, <&clk IMX93_CLK_LPUART1_GATE>;
+	clock-names = "ipg", "per";
+	status = "okay";
+};
+
+&lpuart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+	status = "okay";
+};
+
+&lpuart5 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart5 &pinctrl_uart5_rtscts>;
+	uart-has-rtscts;
+};
+
+&usbotg1 {
+	dr_mode = "peripheral";
+	hnp-disable;
+	srp-disable;
+	adp-disable;
+	disable-over-current;
+	samsung,picophy-pre-emp-curr-control = <3>;
+	samsung,picophy-dc-vol-level-adjust = <7>;
+	status = "okay";
+};
+
+&usbotg2 {
+	dr_mode = "host";
+	hnp-disable;
+	srp-disable;
+	adp-disable;
+	disable-over-current;
+	samsung,picophy-pre-emp-curr-control = <3>;
+	samsung,picophy-dc-vol-level-adjust = <7>;
+	status = "okay";
+};
+
+&usdhc1 { /* eMMC */
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc1>;
+	vmmc-supply = <&buck4>;
+	vqmmc-supply = <&buck4>;
+	bus-width = <8>;
+	no-1-8-v;
+	non-removable;
+	status = "okay";
+};
+
+&usdhc2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc2>;
+	vmmc-supply = <&buck4>;
+	vqmmc-supply = <&buck4>;
+	bus-width = <4>;
+	no-1-8-v;
+	no-sdio;
+	no-mmc;
+	status = "okay";
+};
+
+&wdog3 {
+	status = "okay";
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	status = "okay";
+
+	pinctrl_eqos_rmii: eqos-rmiigrp {
+		fsl,pins = <
+			MX93_PAD_ENET1_MDC__ENET_QOS_MDC			0x57e
+			MX93_PAD_ENET1_MDIO__ENET_QOS_MDIO			0x17e
+			MX93_PAD_ENET1_TD2__CCM_ENET_QOS_CLOCK_GENERATE_REF_CLK	0x4000017e
+			/* SMSC LAN8710 Strap pins: MODE0 */
+			MX93_PAD_ENET1_RD0__ENET_QOS_RGMII_RD0			0x37e
+			/* MODE1 */
+			MX93_PAD_ENET1_RD1__ENET_QOS_RGMII_RD1			0x37e
+			/* MODE2 (external Pullup) */
+			MX93_PAD_ENET1_RX_CTL__ENET_QOS_RGMII_RX_CTL		0x37e
+			/* PHYAD0 */
+			MX93_PAD_ENET1_RXC__ENET_QOS_RX_ER			0x57e
+
+			MX93_PAD_ENET1_TD0__ENET_QOS_RGMII_TD0			0x57e
+			MX93_PAD_ENET1_TD1__ENET_QOS_RGMII_TD1			0x57e
+			MX93_PAD_ENET1_TX_CTL__ENET_QOS_RGMII_TX_CTL		0x57e
+		>;
+	};
+
+	pinctrl_ethphy0_rst: ethphy0-rstgrp {
+		fsl,pins = <
+			MX93_PAD_ENET1_RD3__GPIO4_IO13				0x4000017e
+		>;
+	};
+
+	pinctrl_fec_rgmii: fec-rgmiigrp {
+		fsl,pins = <
+			MX93_PAD_ENET2_MDC__ENET1_MDC				0x57e
+			MX93_PAD_ENET2_MDIO__ENET1_MDIO				0x17e
+			/* KSZ9031 Strap pins: MODE0 */
+			MX93_PAD_ENET2_RD0__ENET1_RGMII_RD0			0x37e
+			/* MODE1 */
+			MX93_PAD_ENET2_RD1__ENET1_RGMII_RD1			0x37e
+			/* MODE2 */
+			MX93_PAD_ENET2_RD2__ENET1_RGMII_RD2			0x37e
+			/* MODE3 */
+			MX93_PAD_ENET2_RD3__ENET1_RGMII_RD3			0x37e
+			/* CLK125_EN */
+			MX93_PAD_ENET2_RX_CTL__ENET1_RGMII_RX_CTL		0x57e
+
+			MX93_PAD_ENET2_RXC__ENET1_RGMII_RXC			0x5fe
+			MX93_PAD_ENET2_TD0__ENET1_RGMII_TD0			0x57e
+			MX93_PAD_ENET2_TD1__ENET1_RGMII_TD1			0x57e
+			MX93_PAD_ENET2_TD2__ENET1_RGMII_TD2			0x57e
+			MX93_PAD_ENET2_TD3__ENET1_RGMII_TD3			0x57e
+			MX93_PAD_ENET2_TXC__ENET1_RGMII_TXC			0x5fe
+			MX93_PAD_ENET2_TX_CTL__ENET1_RGMII_TX_CTL		0x57e
+		>;
+	};
+
+	pinctrl_flexcan2: flexcan2grp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO25__CAN2_TX				0x139e
+			MX93_PAD_GPIO_IO27__CAN2_RX				0x139e
+		>;
+	};
+
+	pinctrl_lpi2c1: lpi2c1grp {
+		fsl,pins = <
+			MX93_PAD_I2C1_SCL__LPI2C1_SCL				0x40001a1e
+			MX93_PAD_I2C1_SDA__LPI2C1_SDA				0x40001a1e
+		>;
+	};
+
+	pinctrl_lpi2c1_gpio: lpi2c1-gpiogrp {
+		fsl,pins = <
+			MX93_PAD_I2C1_SCL__GPIO1_IO00				0x40001a1e
+			MX93_PAD_I2C1_SDA__GPIO1_IO01				0x40001a1e
+		>;
+	};
+
+	pinctrl_lpi2c2: lpi2c2grp {
+		fsl,pins = <
+			MX93_PAD_I2C2_SCL__LPI2C2_SCL				0x40001a1e
+			MX93_PAD_I2C2_SDA__LPI2C2_SDA				0x40001a1e
+		>;
+	};
+
+	pinctrl_lpi2c2_gpio: lpi2c2-gpiogrp {
+		fsl,pins = <
+			MX93_PAD_I2C2_SCL__GPIO1_IO02				0x40001a1e
+			MX93_PAD_I2C2_SDA__GPIO1_IO03				0x40001a1e
+		>;
+	};
+
+	pinctrl_uart1: uart1grp {
+		fsl,pins = <
+			MX93_PAD_UART1_TXD__LPUART1_TX				0x31e
+			MX93_PAD_UART1_RXD__LPUART1_RX				0x31e
+		>;
+	};
+
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO14__LPUART3_TX				0x31e
+			MX93_PAD_GPIO_IO15__LPUART3_RX				0x31e
+		>;
+	};
+
+	pinctrl_uart5: uart5grp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO00__LPUART5_TX				0x31e
+			MX93_PAD_GPIO_IO01__LPUART5_RX				0x31e
+		>;
+	};
+
+	pinctrl_uart5_rtscts: uart5-rtsctsgrp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO02__LPUART5_CTS_B			0x31e
+			MX93_PAD_GPIO_IO03__LPUART5_RTS_B			0x31e
+		>;
+	};
+
+	pinctrl_usdhc1: usdhc1grp {
+		fsl,pins = <
+			MX93_PAD_SD1_CLK__USDHC1_CLK				0x17fe
+			MX93_PAD_SD1_CMD__USDHC1_CMD				0x13fe
+			MX93_PAD_SD1_DATA0__USDHC1_DATA0			0x13fe
+			MX93_PAD_SD1_DATA1__USDHC1_DATA1			0x13fe
+			MX93_PAD_SD1_DATA2__USDHC1_DATA2			0x13fe
+			MX93_PAD_SD1_DATA3__USDHC1_DATA3			0x13fe
+			MX93_PAD_SD1_DATA4__USDHC1_DATA4			0x13fe
+			MX93_PAD_SD1_DATA5__USDHC1_DATA5			0x13fe
+			MX93_PAD_SD1_DATA6__USDHC1_DATA6			0x13fe
+			MX93_PAD_SD1_DATA7__USDHC1_DATA7			0x13fe
+			MX93_PAD_SD1_STROBE__USDHC1_STROBE			0x17fe
+		>;
+	};
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+			MX93_PAD_SD2_CLK__USDHC2_CLK				0x17fe
+			MX93_PAD_SD2_CMD__USDHC2_CMD				0x13fe
+			MX93_PAD_SD2_DATA0__USDHC2_DATA0			0x13fe
+			MX93_PAD_SD2_DATA1__USDHC2_DATA1			0x13fe
+			MX93_PAD_SD2_DATA2__USDHC2_DATA2			0x13fe
+			MX93_PAD_SD2_DATA3__USDHC2_DATA3			0x13fe
+			MX93_PAD_SD2_VSELECT__USDHC2_VSELECT			0x51e
+		>;
+	};
+};
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210-qsbase93-u-boot.dtsi
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210-qsbase93-u-boot.dtsi
@@ -0,0 +1,6 @@
+// SPDX-License-Identifier: (GPL-2.0 or MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#include "imx93-qs93-5210-u-boot.dtsi"
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210-qsbase93.dts
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210-qsbase93.dts
@@ -0,0 +1,119 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+/dts-v1/;
+
+#include "imx93-qs93-5210.dts"
+
+/{
+	model = "Ka-Ro electronics GmbH QS93-5210 (NXP i.MX93) solder-in module on QSBASE93 baseboard";
+};
+
+&eqos {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_eqos_rmii &pinctrl_ethphy0_rst>;
+	assigned-clock-rates = <0 50000000>;
+	phy-mode = "rmii";
+	phy-handle = <&ethphy0>;
+	phy-supply = <&buck4>;
+	phy-reset-gpios = <&gpio3 4 GPIO_ACTIVE_LOW>;
+	phy-reset-duration = <25000>; /* ¬µs */
+	phy-reset-post-delay = <100>; /* ¬µs */
+	status = "okay";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clock-frequency = <2500000>;
+
+		ethphy0: ethernet-phy@0 {
+			reg = <0>;
+			clocks = <&clk IMX93_CLK_ENET>;
+			smsc,disable-energy-detect;
+		};
+	};
+};
+
+&fec {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_fec_rmii &pinctrl_ethphy1_rst>;
+	assigned-clock-rates = <100000000>, <50000000>, <50000000>;
+	phy-mode = "rmii";
+	phy-handle = <&ethphy1>;
+	phy-supply = <&buck4>;
+	phy-reset-gpios = <&gpio4 13 GPIO_ACTIVE_LOW>;
+	phy-reset-duration = <25>; /* ms */
+	phy-reset-post-delay = <1>; /* ms */
+	status = "okay";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clock-frequency = <2500000>;
+
+		ethphy1: ethernet-phy@1 {
+			reg = <1>;
+			clocks = <&clk IMX93_CLK_ENET>;
+			smsc,disable-energy-detect;
+		};
+	};
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	status = "okay";
+
+	pinctrl_eqos_rmii: eqos-rmiigrp {
+		fsl,pins = <
+			MX93_PAD_ENET1_MDC__ENET_QOS_MDC			0x57e
+			MX93_PAD_ENET1_MDIO__ENET_QOS_MDIO			0x17e
+			MX93_PAD_ENET1_TD2__CCM_ENET_QOS_CLOCK_GENERATE_REF_CLK	0x4000017e
+			/* SMSC LAN8710 Strap pins: MODE0 */
+			MX93_PAD_ENET1_RD0__ENET_QOS_RGMII_RD0			0x37e
+			/* MODE1 */
+			MX93_PAD_ENET1_RD1__ENET_QOS_RGMII_RD1			0x37e
+			/* MODE2 (external Pullup) */
+			MX93_PAD_ENET1_RX_CTL__ENET_QOS_RGMII_RX_CTL		0x37e
+			/* PHYAD0 */
+			MX93_PAD_ENET1_RXC__ENET_QOS_RX_ER			0x57e
+
+			MX93_PAD_ENET1_TD0__ENET_QOS_RGMII_TD0			0x57e
+			MX93_PAD_ENET1_TD1__ENET_QOS_RGMII_TD1			0x57e
+			MX93_PAD_ENET1_TX_CTL__ENET_QOS_RGMII_TX_CTL		0x57e
+		>;
+	};
+
+	pinctrl_ethphy0_rst: ethphy0-rstgrp {
+		fsl,pins = <
+			MX93_PAD_SD2_DATA1__GPIO3_IO04				0x4000017e
+		>;
+	};
+
+	pinctrl_ethphy1_rst: ethphy1-rstgrp {
+		fsl,pins = <
+			MX93_PAD_ENET1_RD3__GPIO4_IO13				0x4000017e
+		>;
+	};
+
+	pinctrl_fec_rmii: fec-rmiigrp {
+		fsl,pins = <
+			MX93_PAD_ENET2_MDC__ENET1_MDC				0x57e
+			MX93_PAD_ENET2_MDIO__ENET1_MDIO				0x17e
+			MX93_PAD_ENET2_TD2__ENET1_TX_CLK			0x4000017e
+			/* SMSC LAN8710 Strap pins: MODE0 */
+			MX93_PAD_ENET2_RD0__ENET1_RGMII_RD0			0x37e
+			/* MODE1 */
+			MX93_PAD_ENET2_RD1__ENET1_RGMII_RD1			0x37e
+			/* MODE2 (external Pullup) */
+			MX93_PAD_ENET2_RX_CTL__ENET1_RGMII_RX_CTL		0x37e
+			/* PHYAD0 */
+			MX93_PAD_ENET2_RXC__ENET1_RX_ER				0x3fe
+
+			MX93_PAD_ENET2_TD0__ENET1_RGMII_TD0			0x57e
+			MX93_PAD_ENET2_TD1__ENET1_RGMII_TD1			0x57e
+			MX93_PAD_ENET2_TX_CTL__ENET1_RGMII_TX_CTL		0x57e
+		>;
+	};
+};
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210-u-boot.dtsi
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210-u-boot.dtsi
@@ -0,0 +1,317 @@
+// SPDX-License-Identifier: (GPL-2.0 or MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+/ {
+	aliases {
+		usbgadget0 = &usbg1;
+		usbgadget1 = &usbg2;
+	};
+
+#ifdef CONFIG_BINMAN
+	binman: binman {
+		multiple-images;
+	};
+#endif
+	chosen {
+		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
+	};
+
+	usbg1: usbg1 {
+		compatible = "fsl,imx27-usb-gadget";
+		dr_mode = "peripheral";
+		chipidea,usb = <&usbotg1>;
+		status = "okay";
+	};
+
+	usbg2: usbg2 {
+		compatible = "fsl,imx27-usb-gadget";
+		dr_mode = "peripheral";
+		chipidea,usb = <&usbotg2>;
+		status = "okay";
+	};
+
+	wdt-reboot {
+		compatible = "wdt-reboot";
+		wdt = <&wdog3>;
+		u-boot,dm-spl;
+	};
+};
+
+&{/soc@0} {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+};
+
+&aips1 {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+};
+
+&aips2 {
+	u-boot,dm-spl;
+};
+
+&aips3 {
+	u-boot,dm-spl;
+};
+
+#ifdef CONFIG_BINMAN
+&binman {
+	u-boot-spl-ddr {
+		align = <4>;
+		align-size = <4>;
+		filename = "u-boot-spl-ddr.bin";
+		pad-byte = <0xff>;
+
+		u-boot-spl {
+			align-end = <4>;
+			filename = "spl/u-boot-spl.bin";
+			type = "blob-ext";
+		};
+
+		ddr-1d-imem-fw {
+			filename = "lpddr4_imem_1d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+
+		ddr-1d-dmem-fw {
+			filename = "lpddr4_dmem_1d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+
+		ddr-2d-imem-fw {
+			filename = "lpddr4_imem_2d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+
+		ddr-2d-dmem-fw {
+			filename = "lpddr4_dmem_2d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+	};
+
+	spl {
+		filename = "spl.bin";
+
+		mkimage {
+			args = "-n spl/u-boot-spl.cfgout -T imx8image -e 0x2049a000";
+
+			blob {
+				filename = "u-boot-spl-ddr.bin";
+			};
+		};
+	};
+
+	itb {
+		filename = "u-boot.itb";
+
+		fit {
+			description = "Configuration to load ATF before U-Boot";
+			fit,external-offset = <CONFIG_FIT_EXTERNAL_OFFSET>;
+			fit,fdt-list = "of-list";
+			#address-cells = <1>;
+
+			images {
+				uboot {
+					arch = "arm64";
+					compression = "none";
+					description = "U-Boot (64-bit)";
+					load = <CONFIG_SYS_TEXT_BASE>;
+					type = "standalone";
+
+					uboot-blob {
+						filename = "u-boot-nodtb.bin";
+						type = "blob-ext";
+					};
+				};
+
+				atf {
+					arch = "arm64";
+					compression = "none";
+					description = "ARM Trusted Firmware";
+					entry = <0x204e0000>;
+					load = <0x204e0000>;
+					type = "firmware";
+
+					atf-blob {
+						filename = "bl31.bin";
+						type = "atf-bl31";
+					};
+				};
+
+				seco {
+					arch = "arm64";
+					compression = "none";
+					description = "Seco Firmware";
+					type = "firmware";
+
+					seco_blob {
+						filename = "mx93a0-ahab-container.img";
+						type = "blob-ext";
+					};
+				};
+
+				@fdt-SEQ {
+					compression = "none";
+					description = "NAME";
+					type = "flat_dt";
+
+					uboot-fdt-blob {
+						filename = "u-boot.dtb";
+						type = "blob-ext";
+					};
+				};
+			};
+
+			configurations {
+				default = "@config-DEFAULT-SEQ";
+
+				binman_configuration: @config-SEQ {
+					description = "NAME";
+					fdt = "fdt-SEQ";
+					firmware = "uboot";
+					loadables = "atf";
+				};
+			};
+		};
+	};
+
+	imx-boot {
+		filename = "flash.bin";
+		pad-byte = <0x00>;
+
+		spl {
+			filename = "spl.bin";
+			offset = <0x0>;
+			type = "blob-ext";
+		};
+	};
+};
+#endif
+
+&clk {
+	u-boot,dm-spl;
+};
+
+&clk_ext1 {
+	u-boot,dm-spl;
+};
+
+&eqos {
+	compatible = "fsl,imx-eqos";
+};
+
+&gpio1 {
+	u-boot,dm-spl;
+};
+
+&gpio2 {
+	u-boot,dm-spl;
+};
+
+&gpio3 {
+	u-boot,dm-spl;
+};
+
+&gpio4 {
+	u-boot,dm-spl;
+};
+
+&iomuxc {
+	u-boot,dm-spl;
+};
+
+&lpuart1 {
+	u-boot,dm-spl;
+};
+
+&lpi2c1 {
+	u-boot,dm-spl;
+};
+
+&osc_32k {
+	u-boot,dm-spl;
+};
+
+&osc_24m {
+	u-boot,dm-spl;
+};
+
+&pinctrl_lpi2c1 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_uart1 {
+	u-boot,dm-spl;
+//	u-boot,dm-pre-reloc;
+};
+
+&pinctrl_usdhc1 {
+	u-boot,dm-spl;
+//	u-boot,dm-pre-reloc;
+};
+
+&pmic {
+	u-boot,dm-spl;
+
+	regulators {
+		u-boot,dm-spl;
+
+		BUCK1 {
+			u-boot,dm-spl;
+		};
+
+		BUCK2 {
+			u-boot,dm-spl;
+		};
+
+		BUCK4 {
+			u-boot,dm-spl;
+		};
+
+		BUCK5 {
+			u-boot,dm-spl;
+		};
+
+		BUCK6 {
+			u-boot,dm-spl;
+		};
+
+		LDO1 {
+			u-boot,dm-spl;
+		};
+
+		LDO2 {
+			u-boot,dm-spl;
+		};
+
+		LDO3 {
+			u-boot,dm-spl;
+		};
+
+		LDO4 {
+			u-boot,dm-spl;
+		};
+
+		LDO5 {
+			u-boot,dm-spl;
+		};
+	};
+};
+
+&s4muap {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&usdhc1 {
+	u-boot,dm-spl;
+//	u-boot,dm-pre-reloc;
+};
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210.dts
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-qs93-5210.dts
@@ -0,0 +1,107 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+/dts-v1/;
+
+#include "imx93-karo.dtsi"
+
+/{
+	model = "Ka-Ro electronics GmbH QS93-5210 (NXP i.MX93) solder-in module";
+	compatible = "karo,qs93-5210", "fsl,imx93";
+};
+
+&gpio3 {
+	clko1 {
+		/* pin 20 */
+		gpio-hog;
+		gpios = <26 GPIO_ACTIVE_HIGH>;
+		input;
+	};
+
+	clko2 {
+		/* NC */
+		gpio-hog;
+		gpios = <27 GPIO_ACTIVE_HIGH>;
+		input;
+	};
+};
+
+&gpio4 {
+	clko3 {
+		/* NC */
+		gpio-hog;
+		gpios = <28 GPIO_ACTIVE_HIGH>;
+		input;
+	};
+
+	clko4 {
+		/* NC */
+		gpio-hog;
+		gpios = <29 GPIO_ACTIVE_HIGH>;
+		input;
+	};
+};
+
+&lpi2c2 {
+	clock-frequency = <400000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_lpi2c2>;
+	pinctrl-1 = <&pinctrl_lpi2c2_gpio>;
+	scl-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio1 3 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+};
+
+&lpi2c3 {
+	clock-frequency = <400000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_lpi2c3>;
+	pinctrl-1 = <&pinctrl_lpi2c3_gpio>;
+	scl-gpios = <&gpio2 29 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	sda-gpios = <&gpio2 28 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
+	status = "okay";
+};
+
+&lpuart1 { /* console */
+	pinctrl-0 = <&pinctrl_uart1>;
+};
+
+&lpuart5 {
+	status = "okay";
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_hog>;
+
+	pinctrl_hog: hoggrp {
+		fsl,pins = <
+			MX93_PAD_CCM_CLKO1__GPIO3_IO26				0x400
+			MX93_PAD_CCM_CLKO2__GPIO3_IO27				0x400
+			MX93_PAD_CCM_CLKO3__GPIO4_IO28				0x400
+			MX93_PAD_CCM_CLKO4__GPIO4_IO29				0x400
+		>;
+	};
+
+	pinctrl_lpi2c3: lpi2c3grp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO29__LPI2C3_SCL				0x40001b9e
+			MX93_PAD_GPIO_IO28__LPI2C3_SDA				0x40001b9e
+		>;
+	};
+
+	pinctrl_lpi2c3_gpio: lpi2c3-gpiogrp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO29__GPIO2_IO29				0x40001b9e
+			MX93_PAD_GPIO_IO28__GPIO2_IO28				0x40001b9e
+		>;
+	};
+
+	pinctrl_pmic: pmic-intgrp {
+		fsl,pins = <
+			MX93_PAD_PDM_BIT_STREAM1__GPIO1_IO10			0x31e
+		>;
+	};
+};
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-mb7-u-boot.dtsi
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-mb7-u-boot.dtsi
@@ -0,0 +1,6 @@
+// SPDX-License-Identifier: (GPL-2.0 or MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#include "imx93-tx93-5210-u-boot.dtsi"
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-mb7.dts
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-mb7.dts
@@ -0,0 +1,19 @@
+// SPDX-License-Identifier: (GPL-2.0 or MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#include "imx93-tx93-5210.dts"
+
+&usdhc2 {
+	pinctrl-0 = <&pinctrl_usdhc2 &pinctrl_usdhc2_cd>;
+	cd-gpios = <&gpio3 0 GPIO_ACTIVE_LOW>;
+};
+
+&iomuxc {
+	pinctrl_usdhc2_cd: usdhc2-cdgrp {
+		fsl,pins = <
+			MX93_PAD_SD2_CD_B__GPIO3_IO00				0x31e
+		>;
+	};
+};
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-u-boot.dtsi
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-u-boot.dtsi
@@ -0,0 +1,317 @@
+// SPDX-License-Identifier: (GPL-2.0 or MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+/ {
+	aliases {
+		usbgadget0 = &usbg1;
+		usbgadget1 = &usbg2;
+	};
+
+#ifdef CONFIG_BINMAN
+	binman: binman {
+		multiple-images;
+	};
+#endif
+	chosen {
+		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
+	};
+
+	usbg1: usbg1 {
+		compatible = "fsl,imx27-usb-gadget";
+		dr_mode = "peripheral";
+		chipidea,usb = <&usbotg1>;
+		status = "okay";
+	};
+
+	usbg2: usbg2 {
+		compatible = "fsl,imx27-usb-gadget";
+		dr_mode = "peripheral";
+		chipidea,usb = <&usbotg2>;
+		status = "okay";
+	};
+
+	wdt-reboot {
+		compatible = "wdt-reboot";
+		wdt = <&wdog3>;
+		u-boot,dm-spl;
+	};
+};
+
+&{/soc@0} {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+};
+
+&aips1 {
+	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
+};
+
+&aips2 {
+	u-boot,dm-spl;
+};
+
+&aips3 {
+	u-boot,dm-spl;
+};
+
+#ifdef CONFIG_BINMAN
+&binman {
+	u-boot-spl-ddr {
+		align = <4>;
+		align-size = <4>;
+		filename = "u-boot-spl-ddr.bin";
+		pad-byte = <0xff>;
+
+		u-boot-spl {
+			align-end = <4>;
+			filename = "spl/u-boot-spl.bin";
+			type = "blob-ext";
+		};
+
+		ddr-1d-imem-fw {
+			filename = "lpddr4_imem_1d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+
+		ddr-1d-dmem-fw {
+			filename = "lpddr4_dmem_1d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+
+		ddr-2d-imem-fw {
+			filename = "lpddr4_imem_2d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+
+		ddr-2d-dmem-fw {
+			filename = "lpddr4_dmem_2d_v202201.bin";
+			align-end = <4>;
+			type = "blob-ext";
+		};
+	};
+
+	spl {
+		filename = "spl.bin";
+
+		mkimage {
+			args = "-n spl/u-boot-spl.cfgout -T imx8image -e 0x2049a000";
+
+			blob {
+				filename = "u-boot-spl-ddr.bin";
+			};
+		};
+	};
+
+	itb {
+		filename = "u-boot.itb";
+
+		fit {
+			description = "Configuration to load ATF before U-Boot";
+			fit,external-offset = <CONFIG_FIT_EXTERNAL_OFFSET>;
+			fit,fdt-list = "of-list";
+			#address-cells = <1>;
+
+			images {
+				uboot {
+					arch = "arm64";
+					compression = "none";
+					description = "U-Boot (64-bit)";
+					load = <CONFIG_SYS_TEXT_BASE>;
+					type = "standalone";
+
+					uboot-blob {
+						filename = "u-boot-nodtb.bin";
+						type = "blob-ext";
+					};
+				};
+
+				atf {
+					arch = "arm64";
+					compression = "none";
+					description = "ARM Trusted Firmware";
+					entry = <0x204e0000>;
+					load = <0x204e0000>;
+					type = "firmware";
+
+					atf-blob {
+						filename = "bl31.bin";
+						type = "atf-bl31";
+					};
+				};
+
+				seco {
+					arch = "arm64";
+					compression = "none";
+					description = "Seco Firmware";
+					type = "firmware";
+
+					seco_blob {
+						filename = "mx93a0-ahab-container.img";
+						type = "blob-ext";
+					};
+				};
+
+				@fdt-SEQ {
+					compression = "none";
+					description = "NAME";
+					type = "flat_dt";
+
+					uboot-fdt-blob {
+						filename = "u-boot.dtb";
+						type = "blob-ext";
+					};
+				};
+			};
+
+			configurations {
+				default = "@config-DEFAULT-SEQ";
+
+				binman_configuration: @config-SEQ {
+					description = "NAME";
+					fdt = "fdt-SEQ";
+					firmware = "uboot";
+					loadables = "atf";
+				};
+			};
+		};
+	};
+
+	imx-boot {
+		filename = "flash.bin";
+		pad-byte = <0x00>;
+
+		spl {
+			filename = "spl.bin";
+			offset = <0x0>;
+			type = "blob-ext";
+		};
+	};
+};
+#endif
+
+&clk {
+	u-boot,dm-spl;
+};
+
+&clk_ext1 {
+	u-boot,dm-spl;
+};
+
+&eqos {
+	compatible = "fsl,imx-eqos";
+};
+
+&gpio1 {
+	u-boot,dm-spl;
+};
+
+&gpio2 {
+	u-boot,dm-spl;
+};
+
+&gpio3 {
+	u-boot,dm-spl;
+};
+
+&gpio4 {
+	u-boot,dm-spl;
+};
+
+&iomuxc {
+	u-boot,dm-spl;
+};
+
+&lpuart1 {
+	u-boot,dm-spl;
+};
+
+&lpi2c1 {
+	u-boot,dm-spl;
+};
+
+&osc_32k {
+	u-boot,dm-spl;
+};
+
+&osc_24m {
+	u-boot,dm-spl;
+};
+
+&pinctrl_lpi2c1 {
+	u-boot,dm-spl;
+};
+
+&pinctrl_uart1 {
+	u-boot,dm-spl;
+//	u-boot,dm-pre-reloc;
+};
+
+&pinctrl_usdhc1 {
+	u-boot,dm-spl;
+//	u-boot,dm-pre-reloc;
+};
+
+&pmic {
+	u-boot,dm-spl;
+
+	regulators {
+		u-boot,dm-spl;
+
+		BUCK1 {
+			u-boot,dm-spl;
+		};
+
+		BUCK2 {
+			u-boot,dm-spl;
+		};
+
+		BUCK4 {
+			u-boot,dm-spl;
+		};
+
+		BUCK5 {
+			u-boot,dm-spl;
+		};
+
+		BUCK6 {
+			u-boot,dm-spl;
+		};
+
+		LDO1 {
+			u-boot,dm-spl;
+		};
+
+		LDO2 {
+			u-boot,dm-spl;
+		};
+
+		LDO3 {
+			u-boot,dm-spl;
+		};
+
+		LDO4 {
+			u-boot,dm-spl;
+		};
+
+		LDO5 {
+			u-boot,dm-spl;
+		};
+	};
+};
+
+&s4muap {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&usdhc1 {
+	u-boot,dm-spl;
+//	u-boot,dm-pre-reloc;
+};
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210.dts
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210.dts
@@ -0,0 +1,211 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+/dts-v1/;
+
+#include "imx93-karo.dtsi"
+
+/ {
+	model = "Ka-Ro electronics GmbH TX93-5210 (NXP i.MX93) module";
+	compatible = "karo,tx93-5210", "fsl,imx93";
+};
+
+&eqos {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_eqos_rmii &pinctrl_ethphy0_rst>;
+	assigned-clock-rates = <0 50000000>;
+	phy-mode = "rmii";
+	phy-handle = <&ethphy0>;
+	phy-supply = <&buck4>;
+	phy-reset-gpios = <&gpio4 13 GPIO_ACTIVE_LOW>;
+	phy-reset-duration = <25000>; /* ¬µs */
+	phy-reset-post-delay = <10>; /* ¬µs */
+	status = "okay";
+
+	mdio {
+		compatible = "snps,dwmac-mdio";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clock-frequency = <2500000>;
+
+		ethphy0: ethernet-phy@0 {
+			reg = <0>;
+			clocks = <&clk IMX93_CLK_ENET>;
+			smsc,disable-energy-detect;
+		};
+	};
+};
+
+&fec {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_fec_rgmii>;
+	phy-supply = <&buck4>;
+	status = "disabled";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clock-frequency = <2500000>;
+	};
+};
+
+&flexspi {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_flexspi>;
+	status = "okay";
+
+	flash0: flash@0 {
+		reg = <0>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "jedec,spi-nor";
+		spi-max-frequency = <80000000>;
+		spi-tx-bus-width = <1>;
+		spi-rx-bus-width = <1>;
+	};
+};
+
+&lpspi3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_lpspi3 &pinctrl_lpspi3_cs>;
+	spi-max-frequency = <25000000>;
+};
+
+&lpuart1 { /* console */
+	pinctrl-0 = <&pinctrl_uart1 &pinctrl_uart1_rtscts>;
+	uart-has-rtscts;
+};
+
+&lpuart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart2>;
+	status = "disabled";
+};
+
+&lpuart3 {
+	pinctrl-0 = <&pinctrl_uart3 &pinctrl_uart3_rtscts>;
+	uart-has-rtscts;
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	status = "okay";
+
+	pinctrl_eqos_rmii: eqos-rmiigrp {
+		fsl,pins = <
+			MX93_PAD_ENET1_MDC__ENET_QOS_MDC			0x57e
+			MX93_PAD_ENET1_MDIO__ENET_QOS_MDIO			0x17e
+			MX93_PAD_ENET1_TD2__CCM_ENET_QOS_CLOCK_GENERATE_REF_CLK	0x4000017e
+			/* SMSC LAN8710 Strap pins: MODE0 */
+			MX93_PAD_ENET1_RD0__ENET_QOS_RGMII_RD0			0x37e
+			/* MODE1 */
+			MX93_PAD_ENET1_RD1__ENET_QOS_RGMII_RD1			0x37e
+			/* MODE2 (external Pullup) */
+			MX93_PAD_ENET1_RX_CTL__ENET_QOS_RGMII_RX_CTL		0x37e
+			/* PHYAD0 */
+			MX93_PAD_ENET1_RXC__ENET_QOS_RX_ER			0x57e
+
+			MX93_PAD_ENET1_TD0__ENET_QOS_RGMII_TD0			0x57e
+			MX93_PAD_ENET1_TD1__ENET_QOS_RGMII_TD1			0x57e
+			MX93_PAD_ENET1_TX_CTL__ENET_QOS_RGMII_TX_CTL		0x57e
+		>;
+	};
+
+	pinctrl_ethphy0_rst: ethphy0-rstgrp {
+		fsl,pins = <
+			MX93_PAD_ENET1_RD3__GPIO4_IO13				0x4000017e
+		>;
+	};
+
+	pinctrl_fec_rgmii: fec-rgmiigrp {
+		fsl,pins = <
+			MX93_PAD_ENET2_MDC__ENET1_MDC				0x57e
+			MX93_PAD_ENET2_MDIO__ENET1_MDIO				0x17e
+			/* KSZ9031 Strap pins: MODE0 */
+			MX93_PAD_ENET2_RD0__ENET1_RGMII_RD0			0x37e
+			/* MODE1 */
+			MX93_PAD_ENET2_RD1__ENET1_RGMII_RD1			0x37e
+			/* MODE2 */
+			MX93_PAD_ENET2_RD2__ENET1_RGMII_RD2			0x37e
+			/* MODE3 */
+			MX93_PAD_ENET2_RD3__ENET1_RGMII_RD3			0x37e
+			/* CLK125_EN */
+			MX93_PAD_ENET2_RX_CTL__ENET1_RGMII_RX_CTL		0x57e
+
+			MX93_PAD_ENET2_RXC__ENET1_RGMII_RXC			0x5fe
+			MX93_PAD_ENET2_TD0__ENET1_RGMII_TD0			0x57e
+			MX93_PAD_ENET2_TD1__ENET1_RGMII_TD1			0x57e
+			MX93_PAD_ENET2_TD2__ENET1_RGMII_TD2			0x57e
+			MX93_PAD_ENET2_TD3__ENET1_RGMII_TD3			0x57e
+			MX93_PAD_ENET2_TXC__ENET1_RGMII_TXC			0x5fe
+			MX93_PAD_ENET2_TX_CTL__ENET1_RGMII_TX_CTL		0x57e
+		>;
+	};
+
+	pinctrl_flexcan2: flexcan2grp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO25__CAN2_TX				0x139e
+			MX93_PAD_GPIO_IO27__CAN2_RX				0x139e
+		>;
+	};
+
+	pinctrl_flexspi: flexspigrp {
+		fsl,pins = <
+			MX93_PAD_SD3_CMD__FLEXSPI1_A_SS0_B			0x3fe
+			MX93_PAD_SD1_DATA3__FLEXSPI1_A_SS1_B			0x3fe
+			MX93_PAD_SD3_CLK__FLEXSPI1_A_SCLK			0x3fe
+			MX93_PAD_SD1_STROBE__FLEXSPI1_A_DQS			0x3fe
+			MX93_PAD_SD3_DATA0__FLEXSPI1_A_DATA00			0x3fe
+			MX93_PAD_SD3_DATA1__FLEXSPI1_A_DATA01			0x3fe
+			MX93_PAD_SD3_DATA2__FLEXSPI1_A_DATA02			0x3fe
+			MX93_PAD_SD3_DATA3__FLEXSPI1_A_DATA03			0x3fe
+			MX93_PAD_SD1_DATA4__FLEXSPI1_A_DATA04			0x3fe
+			MX93_PAD_SD1_DATA5__FLEXSPI1_A_DATA05			0x3fe
+			MX93_PAD_SD1_DATA6__FLEXSPI1_A_DATA06			0x3fe
+			MX93_PAD_SD1_DATA7__FLEXSPI1_A_DATA07			0x3fe
+		>;
+	};
+
+	pinctrl_lpspi3: lpspi3-grp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO09__LPSPI3_SIN				0x131e
+			MX93_PAD_GPIO_IO10__LPSPI3_SOUT				0x011e
+			MX93_PAD_GPIO_IO11__LPSPI3_SCK				0x011e
+		>;
+	};
+
+	pinctrl_lpspi3_cs: lpspi3-csgrp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO08__GPIO2_IO08				0x4000121e
+		>;
+	};
+
+	pinctrl_pmic: pmicgrp {
+		fsl,pins = <
+			MX93_PAD_WDOG_ANY__GPIO1_IO15				0x31e
+		>;
+	};
+
+	pinctrl_uart1_rtscts: uart1-rtsctsgrp {
+		fsl,pins = <
+			MX93_PAD_UART2_RXD__LPUART1_CTS_B			0x31e
+			MX93_PAD_UART2_TXD__LPUART1_RTS_B			0x31e
+		>;
+	};
+
+	pinctrl_uart2: uart2grp {
+		fsl,pins = <
+			MX93_PAD_UART2_TXD__LPUART2_TX				0x31e
+			MX93_PAD_UART2_RXD__LPUART2_RX				0x31e
+		>;
+	};
+
+	pinctrl_uart3_rtscts: uart3-rtsctsgrp {
+		fsl,pins = <
+			MX93_PAD_GPIO_IO16__LPUART3_CTS_B			0x31e
+			MX93_PAD_GPIO_IO17__LPUART3_RTS_B			0x31e
+		>;
+	};
+};
Index: u-boot-tx93-mb7/arch/arm/mach-imx/imx9/Kconfig
===================================================================
--- u-boot-tx93-mb7.orig/arch/arm/mach-imx/imx9/Kconfig
+++ u-boot-tx93-mb7/arch/arm/mach-imx/imx9/Kconfig
@@ -42,10 +42,15 @@ config TARGET_IMX93_9X9_QSB
 	select IMX93
 	select IMX9_LPDDR4X
 
+config TARGET_TX93
+	bool "Ka-Ro electronics i.MX93 module family"
+	select IMX93
+
 endchoice
 
 source "board/freescale/imx93_evk/Kconfig"
 source "board/freescale/imx93_qsb/Kconfig"
+source "board/karo/imx93/Kconfig"
 
 endif
 
Index: u-boot-tx93-mb7/board/karo/common/Makefile
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/common/Makefile
@@ -0,0 +1,13 @@
+subdir-ccflags-y += -DDEBUG
+# SPDX-License-Identifier: GPL-2.0
+#
+# Copyright 2019 Lothar Wa√ümann <LW@KARO-electronics.de>
+#
+#
+
+ifndef CONFIG_SPL_BUILD
+obj-y += env.o fdt.o
+obj-$(CONFIG_LED) += led.o
+else
+obj- := __dummy__.o
+endif
Index: u-boot-tx93-mb7/board/karo/common/env.c
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/common/env.c
@@ -0,0 +1,143 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * (C) Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ *
+ */
+
+#include <common.h>
+#include <env.h>
+#include <env_internal.h>
+#include <malloc.h>
+#include <part.h>
+#include <asm/bootm.h>
+#include <asm/global_data.h>
+#include <asm/setup.h>
+#include "karo.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+#if defined(CONFIG_KARO_TX93_5210)
+#define KARO_BOARD_NAME		"tx93-5210"
+#elif defined(CONFIG_KARO_QS93_5210)
+#define KARO_BOARD_NAME		"qs93-5210"
+#else
+#error Unsupported module variant
+#endif
+
+static void karo_env_set_uboot_vars(void)
+{
+	env_set("board_name", KARO_BOARD_NAME);
+
+	if (IS_ENABLED(CONFIG_KARO_UBOOT_MFG))
+		env_set("board_rev", "mfg");
+	else if (IS_ENABLED(CONFIG_UBOOT_IGNORE_ENV))
+		env_set("board_rev", "noenv");
+	else
+		env_set("board_rev", "default");
+
+	if (!env_get("serial#")) {
+		struct tag_serialnr serno;
+		char serno_str[sizeof(serno) * 2 + 1];
+
+		get_board_serial(&serno);
+		snprintf(serno_str, sizeof(serno_str), "%08x%08x",
+			 serno.high, serno.low);
+		env_set("serial#", serno_str);
+	}
+}
+#else
+static inline void karo_env_set_uboot_vars(void)
+{
+}
+#endif /* CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG */
+
+#ifdef CONFIG_UBOOT_IGNORE_ENV
+void karo_env_cleanup(void)
+{
+	printf("Using default environment\n");
+	env_set_default(NULL, 0);
+	karo_env_set_uboot_vars();
+}
+#else
+static const char * const cleanup_vars[] = {
+#ifdef CONFIG_KARO_UBOOT_MFG
+	"bootdelay",
+#endif
+	"bootargs",
+	"fileaddr",
+	"filesize",
+	"safeboot",
+	"wdreset",
+};
+
+#if !defined(CONFIG_KARO_UBOOT_MFG)
+static void karo_set_part_uuids(void)
+{
+	int ret;
+	struct blk_desc *dev_desc;
+	struct disk_partition info;
+	int partno;
+	char dev_part_str[16];
+	char part_uuid_name[PART_NAME_LEN + 5]; /* "uuid_${part_name}" */
+	const char *mmcdev = env_get("mmcdev");
+	const char *cur_uuid;
+
+	if (!mmcdev)
+		mmcdev = "0";
+
+	ret = blk_get_device_by_str("mmc", mmcdev, &dev_desc);
+	if (ret < 0)
+		return;
+
+	for (partno = 1; partno < MAX_SEARCH_PARTITIONS; partno++) {
+		ret = snprintf(dev_part_str, sizeof(dev_part_str), "%s:%u",
+			       mmcdev, partno);
+		if (ret >= sizeof(dev_part_str)) {
+			printf("Invalid mmcdev '%s'\n", env_get("mmcdev"));
+			break;
+		}
+		ret = part_get_info(dev_desc, partno, &info);
+		if (ret != 0)
+			continue;
+
+		ret = snprintf(part_uuid_name, sizeof(part_uuid_name),
+			       "uuid_%s", info.name);
+		if (ret >= sizeof(part_uuid_name)) {
+			printf("buffer overflow for variable name 'uuid_%s'; need %u characters, got only %zu\n",
+			       info.name, ret, sizeof(part_uuid_name));
+			continue;
+		}
+		cur_uuid = env_get(part_uuid_name);
+		if (cur_uuid && strcmp(cur_uuid, info.uuid) == 0) {
+			debug("${%s} matches the %s partition UUID: %s\n",
+			      part_uuid_name, info.name, info.uuid);
+			continue;
+		}
+		if (!cur_uuid)
+			debug("Setting %s='%s'\n", part_uuid_name, info.uuid);
+		else
+			debug("Changing '%s' from\n%s to\n%s\n",
+			      part_uuid_name, cur_uuid, info.uuid);
+		env_set(part_uuid_name, info.uuid);
+	}
+}
+#else
+static inline void karo_set_part_uuids(void)
+{
+}
+#endif
+
+void karo_env_cleanup(void)
+{
+	size_t i;
+
+	debug("%s@%d: Cleaning up environment\n", __func__, __LINE__);
+	for (i = 0; i < ARRAY_SIZE(cleanup_vars); i++) {
+		if (!env_get(cleanup_vars[i]))
+			env_set(cleanup_vars[i], NULL);
+	}
+	karo_set_part_uuids();
+	karo_env_set_uboot_vars();
+}
+#endif
Index: u-boot-tx93-mb7/board/karo/common/fdt.c
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/common/fdt.c
@@ -0,0 +1,332 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * (C) Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ *
+ */
+
+#include <common.h>
+#include <env.h>
+#include <fdtdec.h>
+#include <fdt_support.h>
+#include <fs.h>
+#include <mmc.h>
+#include <mtd_node.h>
+#include <malloc.h>
+#include <asm/bootm.h>
+#include <asm/cache.h>
+#include <asm/setup.h>
+#include "karo.h"
+
+static void karo_set_fdtsize(void *fdt)
+{
+	size_t fdtsize = env_get_hex("fdt_size", 0);
+
+	if (fdtsize == fdt_totalsize(fdt))
+		return;
+
+	debug("FDT size changed from %zu to %u\n",
+	      fdtsize, fdt_totalsize(fdt));
+	env_set_hex("fdt_size", fdt_totalsize(fdt));
+}
+
+#ifdef CONFIG_TX93_UBOOT
+static char *karo_fdt_overlay_filename(const char *prefix,
+				       const char *overlay)
+{
+	size_t malloc_size = strlen(prefix) + strlen(overlay) + 6;
+	char *fdtfile = malloc(malloc_size);
+	const char *pfx_end;
+	size_t pos;
+
+	if (!fdtfile)
+		return NULL;
+
+	strcpy(fdtfile, prefix);
+	pfx_end = strchrnul(fdtfile, '-');
+	pos = pfx_end - fdtfile;
+	snprintf(&fdtfile[pos], malloc_size - pos, "%s%s.dtb",
+		 *pfx_end == '-' ? "" : "-", overlay);
+
+	return fdtfile;
+}
+
+static bool fdt_overlay_debug = IS_ENABLED(CONFIG_DEBUG);
+
+int karo_load_fdt_overlay(void *fdt, const char *dev_type, const char *dev_part,
+			  const char *overlay)
+{
+	int ret;
+	loff_t size;
+	void *fdto;
+	const char *soc_prefix = env_get("soc_prefix");
+	const char *soc_family = env_get("soc_family");
+	char *filename = karo_fdt_overlay_filename(soc_family, overlay);
+
+	if (!filename)
+		return -ENOMEM;
+
+	if (!file_exists(dev_type, dev_part, filename, FS_TYPE_ANY)) {
+		free(filename);
+		filename = karo_fdt_overlay_filename(soc_prefix, overlay);
+		if (!filename)
+			return -ENOMEM;
+	}
+	if (fdt_overlay_debug)
+		printf("loading FDT overlay for '%s' from %s %s '%s'\n",
+		       overlay, dev_type, dev_part, filename);
+
+	if (!file_exists(dev_type, dev_part, filename, FS_TYPE_ANY)) {
+		printf("'%s' does not exist\n", filename);
+		ret = -ENOENT;
+		goto free_fn;
+	}
+
+	if (fs_set_blk_dev(dev_type, dev_part, FS_TYPE_ANY)) {
+		ret = -ENOENT;
+		goto free_fn;
+	}
+
+	ret = fs_size(filename, &size);
+	if (ret) {
+		printf("Failed to get size of '%s': %d\n", filename, errno);
+		goto free_fn;
+	}
+
+	fdto = memalign(ARCH_DMA_MINALIGN, size);
+	if (!fdto) {
+		printf("%s@%d: failed to allocate %llu bytes for '%s'\n",
+		       __func__, __LINE__, size, filename);
+		ret = -ENOMEM;
+		goto free_fn;
+	}
+
+	debug("%s@%d: reading %llu bytes from '%s'\n", __func__, __LINE__,
+	      size, filename);
+
+	if (fs_set_blk_dev(dev_type, dev_part, FS_TYPE_ANY)) {
+		ret = -ENOENT;
+		goto free_buf;
+	}
+
+	ret = fs_read(filename, (ulong)fdto, 0, 0, &size);
+	if (ret)
+		goto free_buf;
+
+	debug("Read %llu byte from '%s'\n", size, filename);
+	fdt_shrink_to_minimum(fdt, size);
+	ret = fdt_overlay_apply_verbose(fdt, fdto);
+	if (ret) {
+		printf("Failed to load FDT overlay from '%s': %s\n",
+		       filename, fdt_strerror(ret));
+		memset(fdt, 0, sizeof(struct fdt_header));
+		ret = -EINVAL;
+	}
+
+ free_buf:
+	free(fdto);
+
+ free_fn:
+	free((void *)filename);
+	return ret;
+}
+
+int karo_fdt_get_overlays(const char *baseboard, char **overlays)
+{
+	int ret;
+
+	if (baseboard) {
+		const char *prefix = "overlays_";
+		size_t malloc_size = strlen(prefix) + strlen(baseboard) + 1;
+		char *overlay_var = malloc(malloc_size);
+
+		if (!overlay_var)
+			return -ENOMEM;
+		ret = snprintf(overlay_var, malloc_size, "%s%s",
+			       prefix, baseboard);
+		if (ret < 0 || ret >= malloc_size) {
+			free(overlay_var);
+			return ret < 0 ? ret : -ENOMEM;
+		}
+		*overlays = env_get(overlay_var);
+		free(overlay_var);
+		if (strstr(*overlays, "setenv overlays"))
+			*overlays += strlen("setenv overlays ");
+	} else {
+		*overlays = env_get("overlays");
+	}
+	return 0;
+}
+
+void karo_fdt_apply_overlays(unsigned long fdt_addr)
+{
+	int ret;
+	const char *baseboard = env_get("baseboard");
+	const char *dev_type = "mmc";
+	const char *dev_part = "0:1";
+	char *overlays;
+
+	fdt_overlay_debug |= env_get_yesno("debug_overlays") == 1;
+
+	ret = karo_fdt_get_overlays(baseboard, &overlays);
+	if (ret == 0 && overlays) {
+		char *overlay_list = strdup(overlays);
+		const char *overlay_listp = overlay_list;
+		char *overlay;
+
+		debug("loading FDT overlays for '%s': %s\n",
+		      baseboard, overlays);
+		while ((overlay = strsep(&overlay_list, ", "))) {
+			if (!strlen(overlay))
+				continue;
+			ret = karo_load_fdt_overlay((void *)fdt_addr, dev_type,
+						    dev_part, overlay);
+			if (ret) {
+				printf("Failed to load FDT overlay '%s': %d\n",
+				       overlay, ret);
+				break;
+			}
+		}
+		free((void *)overlay_listp);
+	} else if (ret) {
+		printf("Failed to load FDT overlays: %d\n", ret);
+	} else {
+		printf("No FDT overlays to be loaded\n");
+	}
+	if (ret)
+		memset((void *)fdt_addr, 0, sizeof(fdt_addr));
+}
+#else
+static inline void karo_fdt_apply_overlays(unsigned long fdt_addr)
+{
+}
+#endif
+
+int karo_load_fdt(const char *fdt_file)
+{
+	int ret;
+	const char *dev_type = "mmc";
+	const char *envstr = env_get("mmcdev");
+	char *eos;
+	int mmcdev = 0;
+	int mmcpart = 1;
+	char dev_part[8];
+	ulong fdt_addr = env_get_hex("fdt_addr", CONFIG_FDTADDR);
+	loff_t size;
+	void *fdt;
+
+	if (envstr) {
+		mmcdev = simple_strtoul(envstr, &eos, 10);
+		if (*eos != '\0' || mmcdev > 9) {
+			printf("Invalid mmcdev: '%s'\n", envstr);
+			return -EINVAL;
+		}
+	}
+
+	envstr = env_get("mmcpart");
+	if (envstr) {
+		mmcpart = simple_strtoul(envstr, &eos, 10);
+		if (*eos != '\0' || mmcpart < 1 || mmcpart > 32) {
+			printf("Invalid mmcpart: '%s'\n", envstr);
+			return -EINVAL;
+		}
+	}
+	snprintf(dev_part, sizeof(dev_part), "%u:%u", mmcdev, mmcpart);
+
+	printf("loading FDT from %s %s '%s'\n", dev_type, dev_part, fdt_file);
+
+	if (!file_exists(dev_type, dev_part, fdt_file, FS_TYPE_ANY)) {
+		printf("'%s' does not exist\n", fdt_file);
+		return -ENOENT;
+	}
+	if (fs_set_blk_dev(dev_type, dev_part, FS_TYPE_ANY))
+		return -ENOENT;
+
+	debug("Loading %s to %08lx\n", fdt_file, fdt_addr);
+	ret = fs_read(fdt_file, fdt_addr, 0, 0, &size);
+	if (ret)
+		return ret;
+	debug("Read %llu byte from '%s'\n", size, fdt_file);
+	fdt = (void *)fdt_addr;
+	debug("Checking FDT header @ %p\n", fdt);
+	if (fdt_check_header(fdt)) {
+		printf("ERROR: No valid DTB found at %p\n", fdt);
+		return -EINVAL;
+	}
+	karo_fdt_apply_overlays(fdt_addr);
+	fdt_shrink_to_minimum(fdt, 4096);
+	karo_set_fdtsize(fdt);
+	set_working_fdt_addr(fdt_addr);
+	debug("fdt_addr set to %08lx\n", fdt_addr);
+	return 0;
+}
+
+#if IS_ENABLED(CONFIG_FDT_FIXUP_PARTITIONS) && !IS_ENABLED(CONFIG_SPL_BUILD)
+void karo_fixup_mtdparts(void *blob, struct node_info *info, size_t count)
+{
+	int root = fdt_path_offset(blob, "/soc");
+
+	if (root < 0)
+		return;
+
+	for (size_t i = 0; i < count; i++) {
+		int node = fdt_node_offset_by_compatible(blob, root,
+							 info[i].compat);
+
+		if (!fdtdec_get_is_enabled(blob, node))
+			continue;
+		fdt_fixup_mtdparts(blob, &info[i], 1);
+	}
+}
+#endif
+
+#ifdef CONFIG_OF_BOARD_SETUP
+static int karo_fdt_set_dr_mode(void *blob, int node, const char *mode)
+{
+	if (!fdtdec_get_is_enabled(blob, node)) {
+		printf("usbotg interface is disabled\n");
+		return 0;
+	}
+
+	printf("switching usbotg interface to %s mode\n", mode);
+	return fdt_setprop_string(blob, node, "dr_mode", mode);
+}
+
+int ft_karo_common_setup(void *blob, struct bd_info *bd)
+{
+	int node;
+	const char *serno_str;
+
+	serno_str = env_get("serial#");
+	if (serno_str) {
+		printf("serial-number: %s\n", serno_str);
+		fdt_increase_size(blob, 512);
+		fdt_setprop(blob, 0, "serial-number", serno_str,
+			    strlen(serno_str));
+	}
+
+	fdt_fixup_ethernet(blob);
+
+	node = fdt_path_offset(blob, "usbotg");
+	if (node > 0) {
+		const char *otg_mode = env_get("otg_mode");
+
+		if (strcmp(otg_mode, "peripheral") == 0 ||
+		    strcmp(otg_mode, "device") == 0 ||
+		    strcmp(otg_mode, "host") == 0) {
+			karo_fdt_set_dr_mode(blob, node, otg_mode);
+		} else if (!otg_mode || strcmp(otg_mode, "none") == 0) {
+			printf("disabling usbotg interface\n");
+			fdt_status_disabled(blob, node);
+		} else if (otg_mode) {
+			printf("Invalid otg_mode: '%s'\n", otg_mode);
+		}
+	}
+
+	return 0;
+}
+
+__weak int ft_board_setup(void *blob, struct bd_info *bd)
+{
+	return ft_karo_common_setup(blob, bd);
+}
+#endif /* OF_BOARD_SETUP */
Index: u-boot-tx93-mb7/board/karo/common/karo.h
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/common/karo.h
@@ -0,0 +1,21 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ *
+ */
+
+void karo_env_cleanup(void);
+
+int karo_load_fdt(const char *fdt_file);
+int karo_load_fdt_overlay(void *fdt, const char *dev_type, const char *dev_part,
+			  const char *overlay);
+#ifdef CONFIG_LED
+void tx93_led_init(void);
+#else
+static inline void tx93_led_init(void)
+{
+}
+#endif
+
+struct bd_info;
+int ft_karo_common_setup(void *blob, struct bd_info *bd);
Index: u-boot-tx93-mb7/board/karo/imx93/Kconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/Kconfig
@@ -0,0 +1,60 @@
+if TARGET_TX93
+
+config SYS_BOARD
+	default "imx93"
+
+config SYS_CONFIG_NAME
+	default "tx93"
+
+config SYS_VENDOR
+	default "karo"
+
+config KARO_IMX93
+	bool
+#	select BINMAN
+	imply BOARD_LATE_INIT
+	imply DM_ETH
+	imply DM_PMIC
+	imply FEC_MXC
+	imply IMX9_LPDDR4X
+	imply MII
+	imply MXC_UART
+	imply PHYLIB
+	imply POWER
+	imply SPL_DM_PMIC
+	imply SPL_DM_PMIC_PCA9450
+	imply SPL_POWER
+	imply SPL_SERIAL
+
+choice
+	prompt "Ka-Ro IMX93 module variant"
+	default KARO_TX93_5210
+
+config KARO_TX93_5210
+	bool "Ka-Ro TX93-5210 module"
+	select KARO_IMX93
+
+config KARO_QS93_5210
+	bool "Ka-Ro QS93-5210 module"
+	select KARO_IMX93
+
+endchoice
+
+choice
+        prompt "U-Boot image variant"
+	default TX93_UBOOT
+
+config TX93_UBOOT
+        bool "Standard U-Boot image"
+
+config KARO_UBOOT_MFG
+        bool "U-Boot image for use with Freescale's MfGTool"
+        select UBOOT_IGNORE_ENV
+
+config KARO_UBOOT_NOENV
+        bool "U-Boot using only built-in environment"
+        select UBOOT_IGNORE_ENV
+
+endchoice
+
+endif
Index: u-boot-tx93-mb7/board/karo/imx93/Makefile
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/Makefile
@@ -0,0 +1,13 @@
+# SPDX-License-Identifier:      GPL-2.0+
+#
+# Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+#
+#
+
+obj-y += tx93.o
+
+ifdef CONFIG_SPL_BUILD
+obj-y += spl.o
+obj-$(CONFIG_KARO_TX93_5210) += lpddr4_timing_tx93.o
+obj-$(CONFIG_KARO_QS93_5210) += lpddr4_timing_qs93.o
+endif
Index: u-boot-tx93-mb7/board/karo/imx93/lpddr4_timing_qs93.c
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/lpddr4_timing_qs93.c
@@ -0,0 +1,1536 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2023 NXP
+ *
+ * Code generated with DDR Tool v1.0.0.
+ */
+
+#include <linux/kernel.h>
+#include <asm/arch/ddr.h>
+
+struct dram_cfg_param ddr_ddrc_cfg[] = {
+	/** Initialize DDRC registers **/
+	{ 0x4e300110, 0x44100001, },
+	{ 0x4e300000, 0x8000bf, },
+	{ 0x4e300008, 0x0, },
+	{ 0x4e300080, 0x80000412, },
+	{ 0x4e300084, 0x0, },
+	{ 0x4e300114, 0x1002, },
+	{ 0x4e300260, 0x4080, },
+	{ 0x4e300f04, 0x80, },
+	{ 0x4e300800, 0x43b30002, },
+	{ 0x4e300804, 0x1f1f1f1f, },
+	{ 0x4e301000, 0x0, },
+	{ 0x4e301240, 0x0, },
+	{ 0x4e301244, 0x0, },
+	{ 0x4e301248, 0x0, },
+	{ 0x4e30124c, 0x0, },
+	{ 0x4e301250, 0x0, },
+	{ 0x4e301254, 0x0, },
+	{ 0x4e301258, 0x0, },
+	{ 0x4e30125c, 0x0, },
+};
+
+/* dram fsp cfg */
+static struct dram_fsp_cfg ddr_dram_fsp_cfg[] = {
+	{
+		{
+			{ 0x4e300100, 0x24A0421B, },
+			{ 0x4e300104, 0xF8EE001B, },
+			{ 0x4e300108, 0x2F263233, },
+			{ 0x4e30010C, 0x0005E18B, },
+			{ 0x4e300124, 0x1C770000, },
+			{ 0x4e300160, 0x00009102, },
+			{ 0x4e30016C, 0x35F00000, },
+			{ 0x4e300170, 0x8B0B0608, },
+			{ 0x4e300250, 0x00000028, },
+			{ 0x4e300254, 0x00000000, },
+			{ 0x4e300258, 0x00000008, },
+			{ 0x4e30025C, 0x00000400, },
+			{ 0x4e300300, 0x224F2215, },
+			{ 0x4e300304, 0x00FE2213, },
+			{ 0x4e300308, 0x0A3C0E3C, },
+		},
+		{
+			{ 0x01, 0xE4, },
+			{ 0x02, 0x36, },
+			{ 0x03, 0xF3, },
+			{ 0x0b, 0x54, },
+			{ 0x0c, 0x12, },
+			{ 0x0e, 0x27, },
+			{ 0x16, 0x04, },
+		},
+		0,
+	},
+};
+
+/* PHY Initialize Configuration */
+struct dram_cfg_param ddr_ddrphy_cfg[] = {
+	{ 0x100a0, 0x1, },
+	{ 0x100a1, 0x0, },
+	{ 0x100a2, 0x3, },
+	{ 0x100a3, 0x2, },
+	{ 0x100a4, 0x6, },
+	{ 0x100a5, 0x7, },
+	{ 0x100a6, 0x5, },
+	{ 0x100a7, 0x4, },
+	{ 0x110a0, 0x1, },
+	{ 0x110a1, 0x2, },
+	{ 0x110a2, 0x5, },
+	{ 0x110a3, 0x6, },
+	{ 0x110a4, 0x7, },
+	{ 0x110a5, 0x4, },
+	{ 0x110a6, 0x3, },
+	{ 0x110a7, 0x0, },
+	{ 0x1005f, 0x1ff, },
+	{ 0x1015f, 0x1ff, },
+	{ 0x1105f, 0x1ff, },
+	{ 0x1115f, 0x1ff, },
+	{ 0x55, 0x1ff, },
+	{ 0x1055, 0x1ff, },
+	{ 0x2055, 0x1ff, },
+	{ 0x200c5, 0x19, },
+	{ 0x2002e, 0x2, },
+	{ 0x90204, 0x0, },
+	{ 0x20024, 0x1e3, },
+	{ 0x2003a, 0x2, },
+	{ 0x2007d, 0x212, },
+	{ 0x2007c, 0x61, },
+	{ 0x20056, 0x3, },
+	{ 0x1004d, 0x600, },
+	{ 0x1014d, 0x600, },
+	{ 0x1104d, 0x600, },
+	{ 0x1114d, 0x600, },
+	{ 0x10049, 0xe3f, },
+	{ 0x10149, 0xe3f, },
+	{ 0x11049, 0xe3f, },
+	{ 0x11149, 0xe3f, },
+	{ 0x43, 0x7f, },
+	{ 0x1043, 0x7f, },
+	{ 0x2043, 0x7f, },
+	{ 0x20018, 0x1, },
+	{ 0x20075, 0x4, },
+	{ 0x20050, 0x11, },
+	{ 0x2009b, 0x2, },
+	{ 0x20008, 0x3a5, },
+	{ 0x20088, 0x9, },
+	{ 0x200b2, 0x104, },
+	{ 0x10043, 0x5a1, },
+	{ 0x10143, 0x5a1, },
+	{ 0x11043, 0x5a1, },
+	{ 0x11143, 0x5a1, },
+	{ 0x200fa, 0x2, },
+	{ 0x20019, 0x1, },
+	{ 0x200f0, 0x600, },
+	{ 0x200f1, 0x0, },
+	{ 0x200f2, 0x4444, },
+	{ 0x200f3, 0x8888, },
+	{ 0x200f4, 0x5655, },
+	{ 0x200f5, 0x0, },
+	{ 0x200f6, 0x0, },
+	{ 0x200f7, 0xf000, },
+	{ 0x20025, 0x0, },
+	{ 0x2002d, 0x1, },
+	{ 0x2002c, 0x0, },
+	{ 0x20021, 0x0, },
+	{ 0x200c7, 0x21, },
+	{ 0x1200c7, 0x21, },
+	{ 0x200ca, 0x24, },
+	{ 0x1200ca, 0x24, },
+};
+
+/* ddr phy trained csr */
+struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
+	{ 0x1005f, 0x0, },
+	{ 0x1015f, 0x0, },
+	{ 0x1105f, 0x0, },
+	{ 0x1115f, 0x0, },
+	{ 0x55, 0x0, },
+	{ 0x1055, 0x0, },
+	{ 0x2055, 0x0, },
+	{ 0x200c5, 0x0, },
+	{ 0x2002e, 0x0, },
+	{ 0x90204, 0x0, },
+	{ 0x20024, 0x0, },
+	{ 0x2003a, 0x0, },
+	{ 0x2007d, 0x0, },
+	{ 0x2007c, 0x0, },
+	{ 0x20056, 0x0, },
+	{ 0x1004d, 0x0, },
+	{ 0x1014d, 0x0, },
+	{ 0x1104d, 0x0, },
+	{ 0x1114d, 0x0, },
+	{ 0x10049, 0x0, },
+	{ 0x10149, 0x0, },
+	{ 0x11049, 0x0, },
+	{ 0x11149, 0x0, },
+	{ 0x43, 0x0, },
+	{ 0x1043, 0x0, },
+	{ 0x2043, 0x0, },
+	{ 0x20018, 0x0, },
+	{ 0x20075, 0x0, },
+	{ 0x20050, 0x0, },
+	{ 0x2009b, 0x0, },
+	{ 0x20008, 0x0, },
+	{ 0x20088, 0x0, },
+	{ 0x200b2, 0x0, },
+	{ 0x10043, 0x0, },
+	{ 0x10143, 0x0, },
+	{ 0x11043, 0x0, },
+	{ 0x11143, 0x0, },
+	{ 0x200fa, 0x0, },
+	{ 0x20019, 0x0, },
+	{ 0x200f0, 0x0, },
+	{ 0x200f1, 0x0, },
+	{ 0x200f2, 0x0, },
+	{ 0x200f3, 0x0, },
+	{ 0x200f4, 0x0, },
+	{ 0x200f5, 0x0, },
+	{ 0x200f6, 0x0, },
+	{ 0x200f7, 0x0, },
+	{ 0x20025, 0x0, },
+	{ 0x2002d, 0x0, },
+	{ 0x2002c, 0x0, },
+	{ 0xd0000, 0x0, },
+	{ 0x90000, 0x0, },
+	{ 0x90001, 0x0, },
+	{ 0x90002, 0x0, },
+	{ 0x90003, 0x0, },
+	{ 0x90004, 0x0, },
+	{ 0x90005, 0x0, },
+	{ 0x90029, 0x0, },
+	{ 0x9002a, 0x0, },
+	{ 0x9002b, 0x0, },
+	{ 0x9002c, 0x0, },
+	{ 0x9002d, 0x0, },
+	{ 0x9002e, 0x0, },
+	{ 0x9002f, 0x0, },
+	{ 0x90030, 0x0, },
+	{ 0x90031, 0x0, },
+	{ 0x90032, 0x0, },
+	{ 0x90033, 0x0, },
+	{ 0x90034, 0x0, },
+	{ 0x90035, 0x0, },
+	{ 0x90036, 0x0, },
+	{ 0x90037, 0x0, },
+	{ 0x90038, 0x0, },
+	{ 0x90039, 0x0, },
+	{ 0x9003a, 0x0, },
+	{ 0x9003b, 0x0, },
+	{ 0x9003c, 0x0, },
+	{ 0x9003d, 0x0, },
+	{ 0x9003e, 0x0, },
+	{ 0x9003f, 0x0, },
+	{ 0x90040, 0x0, },
+	{ 0x90041, 0x0, },
+	{ 0x90042, 0x0, },
+	{ 0x90043, 0x0, },
+	{ 0x90044, 0x0, },
+	{ 0x90045, 0x0, },
+	{ 0x90046, 0x0, },
+	{ 0x90047, 0x0, },
+	{ 0x90048, 0x0, },
+	{ 0x90049, 0x0, },
+	{ 0x9004a, 0x0, },
+	{ 0x9004b, 0x0, },
+	{ 0x9004c, 0x0, },
+	{ 0x9004d, 0x0, },
+	{ 0x9004e, 0x0, },
+	{ 0x9004f, 0x0, },
+	{ 0x90050, 0x0, },
+	{ 0x90051, 0x0, },
+	{ 0x90052, 0x0, },
+	{ 0x90053, 0x0, },
+	{ 0x90054, 0x0, },
+	{ 0x90055, 0x0, },
+	{ 0x90056, 0x0, },
+	{ 0x90057, 0x0, },
+	{ 0x90058, 0x0, },
+	{ 0x90059, 0x0, },
+	{ 0x9005a, 0x0, },
+	{ 0x9005b, 0x0, },
+	{ 0x9005c, 0x0, },
+	{ 0x9005d, 0x0, },
+	{ 0x9005e, 0x0, },
+	{ 0x9005f, 0x0, },
+	{ 0x90060, 0x0, },
+	{ 0x90061, 0x0, },
+	{ 0x90062, 0x0, },
+	{ 0x90063, 0x0, },
+	{ 0x90064, 0x0, },
+	{ 0x90065, 0x0, },
+	{ 0x90066, 0x0, },
+	{ 0x90067, 0x0, },
+	{ 0x90068, 0x0, },
+	{ 0x90069, 0x0, },
+	{ 0x9006a, 0x0, },
+	{ 0x9006b, 0x0, },
+	{ 0x9006c, 0x0, },
+	{ 0x9006d, 0x0, },
+	{ 0x9006e, 0x0, },
+	{ 0x9006f, 0x0, },
+	{ 0x90070, 0x0, },
+	{ 0x90071, 0x0, },
+	{ 0x90072, 0x0, },
+	{ 0x90073, 0x0, },
+	{ 0x90074, 0x0, },
+	{ 0x90075, 0x0, },
+	{ 0x90076, 0x0, },
+	{ 0x90077, 0x0, },
+	{ 0x90078, 0x0, },
+	{ 0x90079, 0x0, },
+	{ 0x9007a, 0x0, },
+	{ 0x9007b, 0x0, },
+	{ 0x9007c, 0x0, },
+	{ 0x9007d, 0x0, },
+	{ 0x9007e, 0x0, },
+	{ 0x9007f, 0x0, },
+	{ 0x90080, 0x0, },
+	{ 0x90081, 0x0, },
+	{ 0x90082, 0x0, },
+	{ 0x90083, 0x0, },
+	{ 0x90084, 0x0, },
+	{ 0x90085, 0x0, },
+	{ 0x90086, 0x0, },
+	{ 0x90087, 0x0, },
+	{ 0x90088, 0x0, },
+	{ 0x90089, 0x0, },
+	{ 0x9008a, 0x0, },
+	{ 0x9008b, 0x0, },
+	{ 0x9008c, 0x0, },
+	{ 0x9008d, 0x0, },
+	{ 0x9008e, 0x0, },
+	{ 0x9008f, 0x0, },
+	{ 0x90090, 0x0, },
+	{ 0x90091, 0x0, },
+	{ 0x90092, 0x0, },
+	{ 0x90093, 0x0, },
+	{ 0x90094, 0x0, },
+	{ 0x90095, 0x0, },
+	{ 0x90096, 0x0, },
+	{ 0x90097, 0x0, },
+	{ 0x90098, 0x0, },
+	{ 0x90099, 0x0, },
+	{ 0x9009a, 0x0, },
+	{ 0x9009b, 0x0, },
+	{ 0x9009c, 0x0, },
+	{ 0x9009d, 0x0, },
+	{ 0x9009e, 0x0, },
+	{ 0x9009f, 0x0, },
+	{ 0x900a0, 0x0, },
+	{ 0x900a1, 0x0, },
+	{ 0x900a2, 0x0, },
+	{ 0x900a3, 0x0, },
+	{ 0x900a4, 0x0, },
+	{ 0x900a5, 0x0, },
+	{ 0x900a6, 0x0, },
+	{ 0x900a7, 0x0, },
+	{ 0x900a8, 0x0, },
+	{ 0x900a9, 0x0, },
+	{ 0x40000, 0x0, },
+	{ 0x40020, 0x0, },
+	{ 0x40040, 0x0, },
+	{ 0x40060, 0x0, },
+	{ 0x40001, 0x0, },
+	{ 0x40021, 0x0, },
+	{ 0x40041, 0x0, },
+	{ 0x40061, 0x0, },
+	{ 0x40002, 0x0, },
+	{ 0x40022, 0x0, },
+	{ 0x40042, 0x0, },
+	{ 0x40062, 0x0, },
+	{ 0x40003, 0x0, },
+	{ 0x40023, 0x0, },
+	{ 0x40043, 0x0, },
+	{ 0x40063, 0x0, },
+	{ 0x40004, 0x0, },
+	{ 0x40024, 0x0, },
+	{ 0x40044, 0x0, },
+	{ 0x40064, 0x0, },
+	{ 0x40005, 0x0, },
+	{ 0x40025, 0x0, },
+	{ 0x40045, 0x0, },
+	{ 0x40065, 0x0, },
+	{ 0x40006, 0x0, },
+	{ 0x40026, 0x0, },
+	{ 0x40046, 0x0, },
+	{ 0x40066, 0x0, },
+	{ 0x40007, 0x0, },
+	{ 0x40027, 0x0, },
+	{ 0x40047, 0x0, },
+	{ 0x40067, 0x0, },
+	{ 0x40008, 0x0, },
+	{ 0x40028, 0x0, },
+	{ 0x40048, 0x0, },
+	{ 0x40068, 0x0, },
+	{ 0x40009, 0x0, },
+	{ 0x40029, 0x0, },
+	{ 0x40049, 0x0, },
+	{ 0x40069, 0x0, },
+	{ 0x4000a, 0x0, },
+	{ 0x4002a, 0x0, },
+	{ 0x4004a, 0x0, },
+	{ 0x4006a, 0x0, },
+	{ 0x4000b, 0x0, },
+	{ 0x4002b, 0x0, },
+	{ 0x4004b, 0x0, },
+	{ 0x4006b, 0x0, },
+	{ 0x4000c, 0x0, },
+	{ 0x4002c, 0x0, },
+	{ 0x4004c, 0x0, },
+	{ 0x4006c, 0x0, },
+	{ 0x4000d, 0x0, },
+	{ 0x4002d, 0x0, },
+	{ 0x4004d, 0x0, },
+	{ 0x4006d, 0x0, },
+	{ 0x4000e, 0x0, },
+	{ 0x4002e, 0x0, },
+	{ 0x4004e, 0x0, },
+	{ 0x4006e, 0x0, },
+	{ 0x4000f, 0x0, },
+	{ 0x4002f, 0x0, },
+	{ 0x4004f, 0x0, },
+	{ 0x4006f, 0x0, },
+	{ 0x40010, 0x0, },
+	{ 0x40030, 0x0, },
+	{ 0x40050, 0x0, },
+	{ 0x40070, 0x0, },
+	{ 0x40011, 0x0, },
+	{ 0x40031, 0x0, },
+	{ 0x40051, 0x0, },
+	{ 0x40071, 0x0, },
+	{ 0x40012, 0x0, },
+	{ 0x40032, 0x0, },
+	{ 0x40052, 0x0, },
+	{ 0x40072, 0x0, },
+	{ 0x40013, 0x0, },
+	{ 0x40033, 0x0, },
+	{ 0x40053, 0x0, },
+	{ 0x40073, 0x0, },
+	{ 0x40014, 0x0, },
+	{ 0x40034, 0x0, },
+	{ 0x40054, 0x0, },
+	{ 0x40074, 0x0, },
+	{ 0x40015, 0x0, },
+	{ 0x40035, 0x0, },
+	{ 0x40055, 0x0, },
+	{ 0x40075, 0x0, },
+	{ 0x40016, 0x0, },
+	{ 0x40036, 0x0, },
+	{ 0x40056, 0x0, },
+	{ 0x40076, 0x0, },
+	{ 0x40017, 0x0, },
+	{ 0x40037, 0x0, },
+	{ 0x40057, 0x0, },
+	{ 0x40077, 0x0, },
+	{ 0x40018, 0x0, },
+	{ 0x40038, 0x0, },
+	{ 0x40058, 0x0, },
+	{ 0x40078, 0x0, },
+	{ 0x40019, 0x0, },
+	{ 0x40039, 0x0, },
+	{ 0x40059, 0x0, },
+	{ 0x40079, 0x0, },
+	{ 0x4001a, 0x0, },
+	{ 0x4003a, 0x0, },
+	{ 0x4005a, 0x0, },
+	{ 0x4007a, 0x0, },
+	{ 0x900aa, 0x0, },
+	{ 0x900ab, 0x0, },
+	{ 0x900ac, 0x0, },
+	{ 0x900ad, 0x0, },
+	{ 0x900ae, 0x0, },
+	{ 0x900af, 0x0, },
+	{ 0x900b0, 0x0, },
+	{ 0x900b1, 0x0, },
+	{ 0x900b2, 0x0, },
+	{ 0x900b3, 0x0, },
+	{ 0x900b4, 0x0, },
+	{ 0x900b5, 0x0, },
+	{ 0x900b6, 0x0, },
+	{ 0x900b7, 0x0, },
+	{ 0x900b8, 0x0, },
+	{ 0x900b9, 0x0, },
+	{ 0x900ba, 0x0, },
+	{ 0x900bb, 0x0, },
+	{ 0x900bc, 0x0, },
+	{ 0x900bd, 0x0, },
+	{ 0x900be, 0x0, },
+	{ 0x900bf, 0x0, },
+	{ 0x900c0, 0x0, },
+	{ 0x900c1, 0x0, },
+	{ 0x900c2, 0x0, },
+	{ 0x900c3, 0x0, },
+	{ 0x900c4, 0x0, },
+	{ 0x900c5, 0x0, },
+	{ 0x900c6, 0x0, },
+	{ 0x900c7, 0x0, },
+	{ 0x900c8, 0x0, },
+	{ 0x900c9, 0x0, },
+	{ 0x900ca, 0x0, },
+	{ 0x900cb, 0x0, },
+	{ 0x900cc, 0x0, },
+	{ 0x900cd, 0x0, },
+	{ 0x900ce, 0x0, },
+	{ 0x900cf, 0x0, },
+	{ 0x900d0, 0x0, },
+	{ 0x900d1, 0x0, },
+	{ 0x900d2, 0x0, },
+	{ 0x900d3, 0x0, },
+	{ 0x900d4, 0x0, },
+	{ 0x900d5, 0x0, },
+	{ 0x900d6, 0x0, },
+	{ 0x900d7, 0x0, },
+	{ 0x900d8, 0x0, },
+	{ 0x900d9, 0x0, },
+	{ 0x900da, 0x0, },
+	{ 0x900db, 0x0, },
+	{ 0x900dc, 0x0, },
+	{ 0x900dd, 0x0, },
+	{ 0x900de, 0x0, },
+	{ 0x900df, 0x0, },
+	{ 0x900e0, 0x0, },
+	{ 0x900e1, 0x0, },
+	{ 0x900e2, 0x0, },
+	{ 0x900e3, 0x0, },
+	{ 0x900e4, 0x0, },
+	{ 0x900e5, 0x0, },
+	{ 0x900e6, 0x0, },
+	{ 0x900e7, 0x0, },
+	{ 0x900e8, 0x0, },
+	{ 0x900e9, 0x0, },
+	{ 0x900ea, 0x0, },
+	{ 0x900eb, 0x0, },
+	{ 0x900ec, 0x0, },
+	{ 0x900ed, 0x0, },
+	{ 0x900ee, 0x0, },
+	{ 0x900ef, 0x0, },
+	{ 0x900f0, 0x0, },
+	{ 0x900f1, 0x0, },
+	{ 0x900f2, 0x0, },
+	{ 0x900f3, 0x0, },
+	{ 0x900f4, 0x0, },
+	{ 0x900f5, 0x0, },
+	{ 0x900f6, 0x0, },
+	{ 0x900f7, 0x0, },
+	{ 0x900f8, 0x0, },
+	{ 0x900f9, 0x0, },
+	{ 0x900fa, 0x0, },
+	{ 0x900fb, 0x0, },
+	{ 0x900fc, 0x0, },
+	{ 0x900fd, 0x0, },
+	{ 0x900fe, 0x0, },
+	{ 0x900ff, 0x0, },
+	{ 0x90100, 0x0, },
+	{ 0x90101, 0x0, },
+	{ 0x90102, 0x0, },
+	{ 0x90103, 0x0, },
+	{ 0x90104, 0x0, },
+	{ 0x90105, 0x0, },
+	{ 0x90106, 0x0, },
+	{ 0x90107, 0x0, },
+	{ 0x90108, 0x0, },
+	{ 0x90109, 0x0, },
+	{ 0x9010a, 0x0, },
+	{ 0x9010b, 0x0, },
+	{ 0x9010c, 0x0, },
+	{ 0x9010d, 0x0, },
+	{ 0x9010e, 0x0, },
+	{ 0x9010f, 0x0, },
+	{ 0x90110, 0x0, },
+	{ 0x90111, 0x0, },
+	{ 0x90112, 0x0, },
+	{ 0x90113, 0x0, },
+	{ 0x90114, 0x0, },
+	{ 0x90115, 0x0, },
+	{ 0x90116, 0x0, },
+	{ 0x90117, 0x0, },
+	{ 0x90118, 0x0, },
+	{ 0x90119, 0x0, },
+	{ 0x9011a, 0x0, },
+	{ 0x9011b, 0x0, },
+	{ 0x9011c, 0x0, },
+	{ 0x9011d, 0x0, },
+	{ 0x9011e, 0x0, },
+	{ 0x9011f, 0x0, },
+	{ 0x90120, 0x0, },
+	{ 0x90121, 0x0, },
+	{ 0x90122, 0x0, },
+	{ 0x90123, 0x0, },
+	{ 0x90124, 0x0, },
+	{ 0x90125, 0x0, },
+	{ 0x90126, 0x0, },
+	{ 0x90127, 0x0, },
+	{ 0x90128, 0x0, },
+	{ 0x90129, 0x0, },
+	{ 0x9012a, 0x0, },
+	{ 0x9012b, 0x0, },
+	{ 0x9012c, 0x0, },
+	{ 0x9012d, 0x0, },
+	{ 0x9012e, 0x0, },
+	{ 0x9012f, 0x0, },
+	{ 0x90130, 0x0, },
+	{ 0x90131, 0x0, },
+	{ 0x90132, 0x0, },
+	{ 0x90133, 0x0, },
+	{ 0x90134, 0x0, },
+	{ 0x90135, 0x0, },
+	{ 0x90136, 0x0, },
+	{ 0x90137, 0x0, },
+	{ 0x90138, 0x0, },
+	{ 0x90139, 0x0, },
+	{ 0x9013a, 0x0, },
+	{ 0x9013b, 0x0, },
+	{ 0x9013c, 0x0, },
+	{ 0x9013d, 0x0, },
+	{ 0x9013e, 0x0, },
+	{ 0x9013f, 0x0, },
+	{ 0x90140, 0x0, },
+	{ 0x90141, 0x0, },
+	{ 0x90142, 0x0, },
+	{ 0x90143, 0x0, },
+	{ 0x90144, 0x0, },
+	{ 0x90145, 0x0, },
+	{ 0x90146, 0x0, },
+	{ 0x90147, 0x0, },
+	{ 0x90148, 0x0, },
+	{ 0x90149, 0x0, },
+	{ 0x9014a, 0x0, },
+	{ 0x9014b, 0x0, },
+	{ 0x9014c, 0x0, },
+	{ 0x9014d, 0x0, },
+	{ 0x9014e, 0x0, },
+	{ 0x9014f, 0x0, },
+	{ 0x90150, 0x0, },
+	{ 0x90151, 0x0, },
+	{ 0x90152, 0x0, },
+	{ 0x90153, 0x0, },
+	{ 0x90154, 0x0, },
+	{ 0x90155, 0x0, },
+	{ 0x90156, 0x0, },
+	{ 0x90157, 0x0, },
+	{ 0x90158, 0x0, },
+	{ 0x90159, 0x0, },
+	{ 0x9015a, 0x0, },
+	{ 0x9015b, 0x0, },
+	{ 0x9015c, 0x0, },
+	{ 0x9015d, 0x0, },
+	{ 0x9015e, 0x0, },
+	{ 0x9015f, 0x0, },
+	{ 0x90160, 0x0, },
+	{ 0x90161, 0x0, },
+	{ 0x90162, 0x0, },
+	{ 0x90163, 0x0, },
+	{ 0x90164, 0x0, },
+	{ 0x90165, 0x0, },
+	{ 0x90166, 0x0, },
+	{ 0x90167, 0x0, },
+	{ 0x90168, 0x0, },
+	{ 0x90169, 0x0, },
+	{ 0x9016a, 0x0, },
+	{ 0x9016b, 0x0, },
+	{ 0x9016c, 0x0, },
+	{ 0x9016d, 0x0, },
+	{ 0x9016e, 0x0, },
+	{ 0x9016f, 0x0, },
+	{ 0x90170, 0x0, },
+	{ 0x90171, 0x0, },
+	{ 0x90172, 0x0, },
+	{ 0x90173, 0x0, },
+	{ 0x90174, 0x0, },
+	{ 0x90175, 0x0, },
+	{ 0x90176, 0x0, },
+	{ 0x90177, 0x0, },
+	{ 0x90178, 0x0, },
+	{ 0x90179, 0x0, },
+	{ 0x9017a, 0x0, },
+	{ 0x9017b, 0x0, },
+	{ 0x9017c, 0x0, },
+	{ 0x9017d, 0x0, },
+	{ 0x9017e, 0x0, },
+	{ 0x9017f, 0x0, },
+	{ 0x90180, 0x0, },
+	{ 0x90181, 0x0, },
+	{ 0x90182, 0x0, },
+	{ 0x90183, 0x0, },
+	{ 0x90184, 0x0, },
+	{ 0x90006, 0x0, },
+	{ 0x90007, 0x0, },
+	{ 0x90008, 0x0, },
+	{ 0x90009, 0x0, },
+	{ 0x9000a, 0x0, },
+	{ 0x9000b, 0x0, },
+	{ 0xd00e7, 0x0, },
+	{ 0x90017, 0x0, },
+	{ 0x9001f, 0x0, },
+	{ 0x90026, 0x0, },
+	{ 0x400d0, 0x0, },
+	{ 0x400d1, 0x0, },
+	{ 0x400d2, 0x0, },
+	{ 0x400d3, 0x0, },
+	{ 0x400d4, 0x0, },
+	{ 0x400d5, 0x0, },
+	{ 0x400d6, 0x0, },
+	{ 0x400d7, 0x0, },
+	{ 0x200be, 0x0, },
+	{ 0x2000b, 0x0, },
+	{ 0x2000c, 0x0, },
+	{ 0x2000d, 0x0, },
+	{ 0x2000e, 0x0, },
+	{ 0x9000c, 0x0, },
+	{ 0x9000d, 0x0, },
+	{ 0x9000e, 0x0, },
+	{ 0x9000f, 0x0, },
+	{ 0x90010, 0x0, },
+	{ 0x90011, 0x0, },
+	{ 0x90012, 0x0, },
+	{ 0x90013, 0x0, },
+	{ 0x20010, 0x0, },
+	{ 0x20011, 0x0, },
+	{ 0x40080, 0x0, },
+	{ 0x40081, 0x0, },
+	{ 0x40082, 0x0, },
+	{ 0x40083, 0x0, },
+	{ 0x40084, 0x0, },
+	{ 0x40085, 0x0, },
+	{ 0x400fd, 0x0, },
+	{ 0x400f1, 0x0, },
+	{ 0x10011, 0x0, },
+	{ 0x10012, 0x0, },
+	{ 0x10013, 0x0, },
+	{ 0x10018, 0x0, },
+	{ 0x10002, 0x0, },
+	{ 0x100b2, 0x0, },
+	{ 0x101b4, 0x0, },
+	{ 0x102b4, 0x0, },
+	{ 0x103b4, 0x0, },
+	{ 0x104b4, 0x0, },
+	{ 0x105b4, 0x0, },
+	{ 0x106b4, 0x0, },
+	{ 0x107b4, 0x0, },
+	{ 0x108b4, 0x0, },
+	{ 0x11011, 0x0, },
+	{ 0x11012, 0x0, },
+	{ 0x11013, 0x0, },
+	{ 0x11018, 0x0, },
+	{ 0x11002, 0x0, },
+	{ 0x110b2, 0x0, },
+	{ 0x111b4, 0x0, },
+	{ 0x112b4, 0x0, },
+	{ 0x113b4, 0x0, },
+	{ 0x114b4, 0x0, },
+	{ 0x115b4, 0x0, },
+	{ 0x116b4, 0x0, },
+	{ 0x117b4, 0x0, },
+	{ 0x118b4, 0x0, },
+	{ 0x20089, 0x0, },
+	{ 0xc0080, 0x0, },
+	{ 0x200cb, 0x0, },
+	{ 0x10068, 0x0, },
+	{ 0x10069, 0x0, },
+	{ 0x10168, 0x0, },
+	{ 0x10169, 0x0, },
+	{ 0x10268, 0x0, },
+	{ 0x10269, 0x0, },
+	{ 0x10368, 0x0, },
+	{ 0x10369, 0x0, },
+	{ 0x10468, 0x0, },
+	{ 0x10469, 0x0, },
+	{ 0x10568, 0x0, },
+	{ 0x10569, 0x0, },
+	{ 0x10668, 0x0, },
+	{ 0x10669, 0x0, },
+	{ 0x10768, 0x0, },
+	{ 0x10769, 0x0, },
+	{ 0x10868, 0x0, },
+	{ 0x10869, 0x0, },
+	{ 0x100aa, 0x0, },
+	{ 0x10062, 0x0, },
+	{ 0x10001, 0x0, },
+	{ 0x100a0, 0x0, },
+	{ 0x100a1, 0x0, },
+	{ 0x100a2, 0x0, },
+	{ 0x100a3, 0x0, },
+	{ 0x100a4, 0x0, },
+	{ 0x100a5, 0x0, },
+	{ 0x100a6, 0x0, },
+	{ 0x100a7, 0x0, },
+	{ 0x11068, 0x0, },
+	{ 0x11069, 0x0, },
+	{ 0x11168, 0x0, },
+	{ 0x11169, 0x0, },
+	{ 0x11268, 0x0, },
+	{ 0x11269, 0x0, },
+	{ 0x11368, 0x0, },
+	{ 0x11369, 0x0, },
+	{ 0x11468, 0x0, },
+	{ 0x11469, 0x0, },
+	{ 0x11568, 0x0, },
+	{ 0x11569, 0x0, },
+	{ 0x11668, 0x0, },
+	{ 0x11669, 0x0, },
+	{ 0x11768, 0x0, },
+	{ 0x11769, 0x0, },
+	{ 0x11868, 0x0, },
+	{ 0x11869, 0x0, },
+	{ 0x110aa, 0x0, },
+	{ 0x11062, 0x0, },
+	{ 0x11001, 0x0, },
+	{ 0x110a0, 0x0, },
+	{ 0x110a1, 0x0, },
+	{ 0x110a2, 0x0, },
+	{ 0x110a3, 0x0, },
+	{ 0x110a4, 0x0, },
+	{ 0x110a5, 0x0, },
+	{ 0x110a6, 0x0, },
+	{ 0x110a7, 0x0, },
+	{ 0x80, 0x0, },
+	{ 0x1080, 0x0, },
+	{ 0x2080, 0x0, },
+	{ 0x10020, 0x0, },
+	{ 0x10080, 0x0, },
+	{ 0x10081, 0x0, },
+	{ 0x100d0, 0x0, },
+	{ 0x100d1, 0x0, },
+	{ 0x1008c, 0x0, },
+	{ 0x1008d, 0x0, },
+	{ 0x10180, 0x0, },
+	{ 0x10181, 0x0, },
+	{ 0x101d0, 0x0, },
+	{ 0x101d1, 0x0, },
+	{ 0x1018c, 0x0, },
+	{ 0x1018d, 0x0, },
+	{ 0x100c0, 0x0, },
+	{ 0x100c1, 0x0, },
+	{ 0x101c0, 0x0, },
+	{ 0x101c1, 0x0, },
+	{ 0x102c0, 0x0, },
+	{ 0x102c1, 0x0, },
+	{ 0x103c0, 0x0, },
+	{ 0x103c1, 0x0, },
+	{ 0x104c0, 0x0, },
+	{ 0x104c1, 0x0, },
+	{ 0x105c0, 0x0, },
+	{ 0x105c1, 0x0, },
+	{ 0x106c0, 0x0, },
+	{ 0x106c1, 0x0, },
+	{ 0x107c0, 0x0, },
+	{ 0x107c1, 0x0, },
+	{ 0x108c0, 0x0, },
+	{ 0x108c1, 0x0, },
+	{ 0x100ae, 0x0, },
+	{ 0x100af, 0x0, },
+	{ 0x11020, 0x0, },
+	{ 0x11080, 0x0, },
+	{ 0x11081, 0x0, },
+	{ 0x110d0, 0x0, },
+	{ 0x110d1, 0x0, },
+	{ 0x1108c, 0x0, },
+	{ 0x1108d, 0x0, },
+	{ 0x11180, 0x0, },
+	{ 0x11181, 0x0, },
+	{ 0x111d0, 0x0, },
+	{ 0x111d1, 0x0, },
+	{ 0x1118c, 0x0, },
+	{ 0x1118d, 0x0, },
+	{ 0x110c0, 0x0, },
+	{ 0x110c1, 0x0, },
+	{ 0x111c0, 0x0, },
+	{ 0x111c1, 0x0, },
+	{ 0x112c0, 0x0, },
+	{ 0x112c1, 0x0, },
+	{ 0x113c0, 0x0, },
+	{ 0x113c1, 0x0, },
+	{ 0x114c0, 0x0, },
+	{ 0x114c1, 0x0, },
+	{ 0x115c0, 0x0, },
+	{ 0x115c1, 0x0, },
+	{ 0x116c0, 0x0, },
+	{ 0x116c1, 0x0, },
+	{ 0x117c0, 0x0, },
+	{ 0x117c1, 0x0, },
+	{ 0x118c0, 0x0, },
+	{ 0x118c1, 0x0, },
+	{ 0x110ae, 0x0, },
+	{ 0x110af, 0x0, },
+	{ 0x90201, 0x0, },
+	{ 0x90202, 0x0, },
+	{ 0x90203, 0x0, },
+	{ 0x90205, 0x0, },
+	{ 0x90206, 0x0, },
+	{ 0x90207, 0x0, },
+	{ 0x90208, 0x0, },
+	{ 0x20020, 0x0, },
+	{ 0x20077, 0x0, },
+	{ 0x20072, 0x0, },
+	{ 0x20073, 0x0, },
+	{ 0x400c0, 0x0, },
+	{ 0x10040, 0x0, },
+	{ 0x10140, 0x0, },
+	{ 0x10240, 0x0, },
+	{ 0x10340, 0x0, },
+	{ 0x10440, 0x0, },
+	{ 0x10540, 0x0, },
+	{ 0x10640, 0x0, },
+	{ 0x10740, 0x0, },
+	{ 0x10840, 0x0, },
+	{ 0x11040, 0x0, },
+	{ 0x11140, 0x0, },
+	{ 0x11240, 0x0, },
+	{ 0x11340, 0x0, },
+	{ 0x11440, 0x0, },
+	{ 0x11540, 0x0, },
+	{ 0x11640, 0x0, },
+	{ 0x11740, 0x0, },
+	{ 0x11840, 0x0, },
+};
+
+/* P0 message block parameter for training firmware */
+struct dram_cfg_param ddr_fsp0_cfg[] = {
+	{ 0xd0000, 0x0, },
+	{ 0x54003, 0xe94, },
+	{ 0x54004, 0x4, },
+	{ 0x54006, 0x14, },
+	{ 0x54008, 0x131f, },
+	{ 0x54009, 0xc8, },
+	{ 0x5400b, 0x4, },
+	{ 0x5400d, 0x100, },
+	{ 0x5400f, 0x100, },
+	{ 0x54012, 0x110, },
+	{ 0x54019, 0x36e4, },
+	{ 0x5401a, 0xf3, },
+	{ 0x5401b, 0x1254, },
+	{ 0x5401c, 0x2708, },
+	{ 0x5401e, 0x4, },
+	{ 0x5401f, 0x36e4, },
+	{ 0x54020, 0xf3, },
+	{ 0x54021, 0x1254, },
+	{ 0x54022, 0x2708, },
+	{ 0x54024, 0x4, },
+	{ 0x54032, 0xe400, },
+	{ 0x54033, 0xf336, },
+	{ 0x54034, 0x5400, },
+	{ 0x54035, 0x812, },
+	{ 0x54036, 0x27, },
+	{ 0x54037, 0x400, },
+	{ 0x54038, 0xe400, },
+	{ 0x54039, 0xf336, },
+	{ 0x5403a, 0x5400, },
+	{ 0x5403b, 0x812, },
+	{ 0x5403c, 0x27, },
+	{ 0x5403d, 0x400, },
+	{ 0xd0000, 0x1}
+};
+
+/* P0 2D message block parameter for training firmware */
+struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
+	{ 0xd0000, 0x0, },
+	{ 0x54003, 0xe94, },
+	{ 0x54004, 0x4, },
+	{ 0x54006, 0x14, },
+	{ 0x54008, 0x61, },
+	{ 0x54009, 0xc8, },
+	{ 0x5400b, 0x4, },
+	{ 0x5400d, 0x100, },
+	{ 0x5400f, 0x100, },
+	{ 0x54010, 0x2080, },
+	{ 0x54012, 0x110, },
+	{ 0x54019, 0x36e4, },
+	{ 0x5401a, 0xf3, },
+	{ 0x5401b, 0x1254, },
+	{ 0x5401c, 0x2708, },
+	{ 0x5401e, 0x4, },
+	{ 0x5401f, 0x36e4, },
+	{ 0x54020, 0xf3, },
+	{ 0x54021, 0x1254, },
+	{ 0x54022, 0x2708, },
+	{ 0x54024, 0x4, },
+	{ 0x54032, 0xe400, },
+	{ 0x54033, 0xf336, },
+	{ 0x54034, 0x5400, },
+	{ 0x54035, 0x812, },
+	{ 0x54036, 0x27, },
+	{ 0x54037, 0x400, },
+	{ 0x54038, 0xe400, },
+	{ 0x54039, 0xf336, },
+	{ 0x5403a, 0x5400, },
+	{ 0x5403b, 0x812, },
+	{ 0x5403c, 0x27, },
+	{ 0x5403d, 0x400, },
+	{ 0xd0000, 0x1}
+};
+
+/* DRAM PHY init engine image */
+struct dram_cfg_param ddr_phy_pie[] = {
+	{ 0xd0000, 0x0, },
+	{ 0x90000, 0x10, },
+	{ 0x90001, 0x400, },
+	{ 0x90002, 0x10e, },
+	{ 0x90003, 0x0, },
+	{ 0x90004, 0x0, },
+	{ 0x90005, 0x8, },
+	{ 0x90029, 0xb, },
+	{ 0x9002a, 0x480, },
+	{ 0x9002b, 0x109, },
+	{ 0x9002c, 0x8, },
+	{ 0x9002d, 0x448, },
+	{ 0x9002e, 0x139, },
+	{ 0x9002f, 0x8, },
+	{ 0x90030, 0x478, },
+	{ 0x90031, 0x109, },
+	{ 0x90032, 0x0, },
+	{ 0x90033, 0xe8, },
+	{ 0x90034, 0x109, },
+	{ 0x90035, 0x2, },
+	{ 0x90036, 0x10, },
+	{ 0x90037, 0x139, },
+	{ 0x90038, 0xb, },
+	{ 0x90039, 0x7c0, },
+	{ 0x9003a, 0x139, },
+	{ 0x9003b, 0x44, },
+	{ 0x9003c, 0x633, },
+	{ 0x9003d, 0x159, },
+	{ 0x9003e, 0x14f, },
+	{ 0x9003f, 0x630, },
+	{ 0x90040, 0x159, },
+	{ 0x90041, 0x47, },
+	{ 0x90042, 0x633, },
+	{ 0x90043, 0x149, },
+	{ 0x90044, 0x4f, },
+	{ 0x90045, 0x633, },
+	{ 0x90046, 0x179, },
+	{ 0x90047, 0x8, },
+	{ 0x90048, 0xe0, },
+	{ 0x90049, 0x109, },
+	{ 0x9004a, 0x0, },
+	{ 0x9004b, 0x7c8, },
+	{ 0x9004c, 0x109, },
+	{ 0x9004d, 0x0, },
+	{ 0x9004e, 0x1, },
+	{ 0x9004f, 0x8, },
+	{ 0x90050, 0x30, },
+	{ 0x90051, 0x65a, },
+	{ 0x90052, 0x9, },
+	{ 0x90053, 0x0, },
+	{ 0x90054, 0x45a, },
+	{ 0x90055, 0x9, },
+	{ 0x90056, 0x0, },
+	{ 0x90057, 0x448, },
+	{ 0x90058, 0x109, },
+	{ 0x90059, 0x40, },
+	{ 0x9005a, 0x633, },
+	{ 0x9005b, 0x179, },
+	{ 0x9005c, 0x1, },
+	{ 0x9005d, 0x618, },
+	{ 0x9005e, 0x109, },
+	{ 0x9005f, 0x40c0, },
+	{ 0x90060, 0x633, },
+	{ 0x90061, 0x149, },
+	{ 0x90062, 0x8, },
+	{ 0x90063, 0x4, },
+	{ 0x90064, 0x48, },
+	{ 0x90065, 0x4040, },
+	{ 0x90066, 0x633, },
+	{ 0x90067, 0x149, },
+	{ 0x90068, 0x0, },
+	{ 0x90069, 0x4, },
+	{ 0x9006a, 0x48, },
+	{ 0x9006b, 0x40, },
+	{ 0x9006c, 0x633, },
+	{ 0x9006d, 0x149, },
+	{ 0x9006e, 0x0, },
+	{ 0x9006f, 0x658, },
+	{ 0x90070, 0x109, },
+	{ 0x90071, 0x10, },
+	{ 0x90072, 0x4, },
+	{ 0x90073, 0x18, },
+	{ 0x90074, 0x0, },
+	{ 0x90075, 0x4, },
+	{ 0x90076, 0x78, },
+	{ 0x90077, 0x549, },
+	{ 0x90078, 0x633, },
+	{ 0x90079, 0x159, },
+	{ 0x9007a, 0xd49, },
+	{ 0x9007b, 0x633, },
+	{ 0x9007c, 0x159, },
+	{ 0x9007d, 0x94a, },
+	{ 0x9007e, 0x633, },
+	{ 0x9007f, 0x159, },
+	{ 0x90080, 0x441, },
+	{ 0x90081, 0x633, },
+	{ 0x90082, 0x149, },
+	{ 0x90083, 0x42, },
+	{ 0x90084, 0x633, },
+	{ 0x90085, 0x149, },
+	{ 0x90086, 0x1, },
+	{ 0x90087, 0x633, },
+	{ 0x90088, 0x149, },
+	{ 0x90089, 0x0, },
+	{ 0x9008a, 0xe0, },
+	{ 0x9008b, 0x109, },
+	{ 0x9008c, 0xa, },
+	{ 0x9008d, 0x10, },
+	{ 0x9008e, 0x109, },
+	{ 0x9008f, 0x9, },
+	{ 0x90090, 0x3c0, },
+	{ 0x90091, 0x149, },
+	{ 0x90092, 0x9, },
+	{ 0x90093, 0x3c0, },
+	{ 0x90094, 0x159, },
+	{ 0x90095, 0x18, },
+	{ 0x90096, 0x10, },
+	{ 0x90097, 0x109, },
+	{ 0x90098, 0x0, },
+	{ 0x90099, 0x3c0, },
+	{ 0x9009a, 0x109, },
+	{ 0x9009b, 0x18, },
+	{ 0x9009c, 0x4, },
+	{ 0x9009d, 0x48, },
+	{ 0x9009e, 0x18, },
+	{ 0x9009f, 0x4, },
+	{ 0x900a0, 0x58, },
+	{ 0x900a1, 0xb, },
+	{ 0x900a2, 0x10, },
+	{ 0x900a3, 0x109, },
+	{ 0x900a4, 0x1, },
+	{ 0x900a5, 0x10, },
+	{ 0x900a6, 0x109, },
+	{ 0x900a7, 0x5, },
+	{ 0x900a8, 0x7c0, },
+	{ 0x900a9, 0x109, },
+	{ 0x40000, 0x811, },
+	{ 0x40020, 0x880, },
+	{ 0x40040, 0x0, },
+	{ 0x40060, 0x0, },
+	{ 0x40001, 0x4008, },
+	{ 0x40021, 0x83, },
+	{ 0x40041, 0x4f, },
+	{ 0x40061, 0x0, },
+	{ 0x40002, 0x4040, },
+	{ 0x40022, 0x83, },
+	{ 0x40042, 0x51, },
+	{ 0x40062, 0x0, },
+	{ 0x40003, 0x811, },
+	{ 0x40023, 0x880, },
+	{ 0x40043, 0x0, },
+	{ 0x40063, 0x0, },
+	{ 0x40004, 0x720, },
+	{ 0x40024, 0xf, },
+	{ 0x40044, 0x1740, },
+	{ 0x40064, 0x0, },
+	{ 0x40005, 0x16, },
+	{ 0x40025, 0x83, },
+	{ 0x40045, 0x4b, },
+	{ 0x40065, 0x0, },
+	{ 0x40006, 0x716, },
+	{ 0x40026, 0xf, },
+	{ 0x40046, 0x2001, },
+	{ 0x40066, 0x0, },
+	{ 0x40007, 0x716, },
+	{ 0x40027, 0xf, },
+	{ 0x40047, 0x2800, },
+	{ 0x40067, 0x0, },
+	{ 0x40008, 0x716, },
+	{ 0x40028, 0xf, },
+	{ 0x40048, 0xf00, },
+	{ 0x40068, 0x0, },
+	{ 0x40009, 0x720, },
+	{ 0x40029, 0xf, },
+	{ 0x40049, 0x1400, },
+	{ 0x40069, 0x0, },
+	{ 0x4000a, 0xe08, },
+	{ 0x4002a, 0xc15, },
+	{ 0x4004a, 0x0, },
+	{ 0x4006a, 0x0, },
+	{ 0x4000b, 0x625, },
+	{ 0x4002b, 0x15, },
+	{ 0x4004b, 0x0, },
+	{ 0x4006b, 0x0, },
+	{ 0x4000c, 0x4028, },
+	{ 0x4002c, 0x80, },
+	{ 0x4004c, 0x0, },
+	{ 0x4006c, 0x0, },
+	{ 0x4000d, 0xe08, },
+	{ 0x4002d, 0xc1a, },
+	{ 0x4004d, 0x0, },
+	{ 0x4006d, 0x0, },
+	{ 0x4000e, 0x625, },
+	{ 0x4002e, 0x1a, },
+	{ 0x4004e, 0x0, },
+	{ 0x4006e, 0x0, },
+	{ 0x4000f, 0x4040, },
+	{ 0x4002f, 0x80, },
+	{ 0x4004f, 0x0, },
+	{ 0x4006f, 0x0, },
+	{ 0x40010, 0x2604, },
+	{ 0x40030, 0x15, },
+	{ 0x40050, 0x0, },
+	{ 0x40070, 0x0, },
+	{ 0x40011, 0x708, },
+	{ 0x40031, 0x5, },
+	{ 0x40051, 0x0, },
+	{ 0x40071, 0x2002, },
+	{ 0x40012, 0x8, },
+	{ 0x40032, 0x80, },
+	{ 0x40052, 0x0, },
+	{ 0x40072, 0x0, },
+	{ 0x40013, 0x2604, },
+	{ 0x40033, 0x1a, },
+	{ 0x40053, 0x0, },
+	{ 0x40073, 0x0, },
+	{ 0x40014, 0x708, },
+	{ 0x40034, 0xa, },
+	{ 0x40054, 0x0, },
+	{ 0x40074, 0x2002, },
+	{ 0x40015, 0x4040, },
+	{ 0x40035, 0x80, },
+	{ 0x40055, 0x0, },
+	{ 0x40075, 0x0, },
+	{ 0x40016, 0x60a, },
+	{ 0x40036, 0x15, },
+	{ 0x40056, 0x1200, },
+	{ 0x40076, 0x0, },
+	{ 0x40017, 0x61a, },
+	{ 0x40037, 0x15, },
+	{ 0x40057, 0x1300, },
+	{ 0x40077, 0x0, },
+	{ 0x40018, 0x60a, },
+	{ 0x40038, 0x1a, },
+	{ 0x40058, 0x1200, },
+	{ 0x40078, 0x0, },
+	{ 0x40019, 0x642, },
+	{ 0x40039, 0x1a, },
+	{ 0x40059, 0x1300, },
+	{ 0x40079, 0x0, },
+	{ 0x4001a, 0x4808, },
+	{ 0x4003a, 0x880, },
+	{ 0x4005a, 0x0, },
+	{ 0x4007a, 0x0, },
+	{ 0x900aa, 0x0, },
+	{ 0x900ab, 0x790, },
+	{ 0x900ac, 0x11a, },
+	{ 0x900ad, 0x8, },
+	{ 0x900ae, 0x7aa, },
+	{ 0x900af, 0x2a, },
+	{ 0x900b0, 0x10, },
+	{ 0x900b1, 0x7b2, },
+	{ 0x900b2, 0x2a, },
+	{ 0x900b3, 0x0, },
+	{ 0x900b4, 0x7c8, },
+	{ 0x900b5, 0x109, },
+	{ 0x900b6, 0x10, },
+	{ 0x900b7, 0x10, },
+	{ 0x900b8, 0x109, },
+	{ 0x900b9, 0x10, },
+	{ 0x900ba, 0x2a8, },
+	{ 0x900bb, 0x129, },
+	{ 0x900bc, 0x8, },
+	{ 0x900bd, 0x370, },
+	{ 0x900be, 0x129, },
+	{ 0x900bf, 0xa, },
+	{ 0x900c0, 0x3c8, },
+	{ 0x900c1, 0x1a9, },
+	{ 0x900c2, 0xc, },
+	{ 0x900c3, 0x408, },
+	{ 0x900c4, 0x199, },
+	{ 0x900c5, 0x14, },
+	{ 0x900c6, 0x790, },
+	{ 0x900c7, 0x11a, },
+	{ 0x900c8, 0x8, },
+	{ 0x900c9, 0x4, },
+	{ 0x900ca, 0x18, },
+	{ 0x900cb, 0xe, },
+	{ 0x900cc, 0x408, },
+	{ 0x900cd, 0x199, },
+	{ 0x900ce, 0x8, },
+	{ 0x900cf, 0x8568, },
+	{ 0x900d0, 0x108, },
+	{ 0x900d1, 0x18, },
+	{ 0x900d2, 0x790, },
+	{ 0x900d3, 0x16a, },
+	{ 0x900d4, 0x8, },
+	{ 0x900d5, 0x1d8, },
+	{ 0x900d6, 0x169, },
+	{ 0x900d7, 0x10, },
+	{ 0x900d8, 0x8558, },
+	{ 0x900d9, 0x168, },
+	{ 0x900da, 0x1ff8, },
+	{ 0x900db, 0x85a8, },
+	{ 0x900dc, 0x1e8, },
+	{ 0x900dd, 0x50, },
+	{ 0x900de, 0x798, },
+	{ 0x900df, 0x16a, },
+	{ 0x900e0, 0x60, },
+	{ 0x900e1, 0x7a0, },
+	{ 0x900e2, 0x16a, },
+	{ 0x900e3, 0x8, },
+	{ 0x900e4, 0x8310, },
+	{ 0x900e5, 0x168, },
+	{ 0x900e6, 0x8, },
+	{ 0x900e7, 0xa310, },
+	{ 0x900e8, 0x168, },
+	{ 0x900e9, 0xa, },
+	{ 0x900ea, 0x408, },
+	{ 0x900eb, 0x169, },
+	{ 0x900ec, 0x6e, },
+	{ 0x900ed, 0x0, },
+	{ 0x900ee, 0x68, },
+	{ 0x900ef, 0x0, },
+	{ 0x900f0, 0x408, },
+	{ 0x900f1, 0x169, },
+	{ 0x900f2, 0x0, },
+	{ 0x900f3, 0x8310, },
+	{ 0x900f4, 0x168, },
+	{ 0x900f5, 0x0, },
+	{ 0x900f6, 0xa310, },
+	{ 0x900f7, 0x168, },
+	{ 0x900f8, 0x1ff8, },
+	{ 0x900f9, 0x85a8, },
+	{ 0x900fa, 0x1e8, },
+	{ 0x900fb, 0x68, },
+	{ 0x900fc, 0x798, },
+	{ 0x900fd, 0x16a, },
+	{ 0x900fe, 0x78, },
+	{ 0x900ff, 0x7a0, },
+	{ 0x90100, 0x16a, },
+	{ 0x90101, 0x68, },
+	{ 0x90102, 0x790, },
+	{ 0x90103, 0x16a, },
+	{ 0x90104, 0x8, },
+	{ 0x90105, 0x8b10, },
+	{ 0x90106, 0x168, },
+	{ 0x90107, 0x8, },
+	{ 0x90108, 0xab10, },
+	{ 0x90109, 0x168, },
+	{ 0x9010a, 0xa, },
+	{ 0x9010b, 0x408, },
+	{ 0x9010c, 0x169, },
+	{ 0x9010d, 0x58, },
+	{ 0x9010e, 0x0, },
+	{ 0x9010f, 0x68, },
+	{ 0x90110, 0x0, },
+	{ 0x90111, 0x408, },
+	{ 0x90112, 0x169, },
+	{ 0x90113, 0x0, },
+	{ 0x90114, 0x8b10, },
+	{ 0x90115, 0x168, },
+	{ 0x90116, 0x1, },
+	{ 0x90117, 0xab10, },
+	{ 0x90118, 0x168, },
+	{ 0x90119, 0x0, },
+	{ 0x9011a, 0x1d8, },
+	{ 0x9011b, 0x169, },
+	{ 0x9011c, 0x80, },
+	{ 0x9011d, 0x790, },
+	{ 0x9011e, 0x16a, },
+	{ 0x9011f, 0x18, },
+	{ 0x90120, 0x7aa, },
+	{ 0x90121, 0x6a, },
+	{ 0x90122, 0xa, },
+	{ 0x90123, 0x0, },
+	{ 0x90124, 0x1e9, },
+	{ 0x90125, 0x8, },
+	{ 0x90126, 0x8080, },
+	{ 0x90127, 0x108, },
+	{ 0x90128, 0xf, },
+	{ 0x90129, 0x408, },
+	{ 0x9012a, 0x169, },
+	{ 0x9012b, 0xc, },
+	{ 0x9012c, 0x0, },
+	{ 0x9012d, 0x68, },
+	{ 0x9012e, 0x9, },
+	{ 0x9012f, 0x0, },
+	{ 0x90130, 0x1a9, },
+	{ 0x90131, 0x0, },
+	{ 0x90132, 0x408, },
+	{ 0x90133, 0x169, },
+	{ 0x90134, 0x0, },
+	{ 0x90135, 0x8080, },
+	{ 0x90136, 0x108, },
+	{ 0x90137, 0x8, },
+	{ 0x90138, 0x7aa, },
+	{ 0x90139, 0x6a, },
+	{ 0x9013a, 0x0, },
+	{ 0x9013b, 0x8568, },
+	{ 0x9013c, 0x108, },
+	{ 0x9013d, 0xb7, },
+	{ 0x9013e, 0x790, },
+	{ 0x9013f, 0x16a, },
+	{ 0x90140, 0x1f, },
+	{ 0x90141, 0x0, },
+	{ 0x90142, 0x68, },
+	{ 0x90143, 0x8, },
+	{ 0x90144, 0x8558, },
+	{ 0x90145, 0x168, },
+	{ 0x90146, 0xf, },
+	{ 0x90147, 0x408, },
+	{ 0x90148, 0x169, },
+	{ 0x90149, 0xd, },
+	{ 0x9014a, 0x0, },
+	{ 0x9014b, 0x68, },
+	{ 0x9014c, 0x0, },
+	{ 0x9014d, 0x408, },
+	{ 0x9014e, 0x169, },
+	{ 0x9014f, 0x0, },
+	{ 0x90150, 0x8558, },
+	{ 0x90151, 0x168, },
+	{ 0x90152, 0x8, },
+	{ 0x90153, 0x3c8, },
+	{ 0x90154, 0x1a9, },
+	{ 0x90155, 0x3, },
+	{ 0x90156, 0x370, },
+	{ 0x90157, 0x129, },
+	{ 0x90158, 0x20, },
+	{ 0x90159, 0x2aa, },
+	{ 0x9015a, 0x9, },
+	{ 0x9015b, 0x8, },
+	{ 0x9015c, 0xe8, },
+	{ 0x9015d, 0x109, },
+	{ 0x9015e, 0x0, },
+	{ 0x9015f, 0x8140, },
+	{ 0x90160, 0x10c, },
+	{ 0x90161, 0x10, },
+	{ 0x90162, 0x8138, },
+	{ 0x90163, 0x104, },
+	{ 0x90164, 0x8, },
+	{ 0x90165, 0x448, },
+	{ 0x90166, 0x109, },
+	{ 0x90167, 0xf, },
+	{ 0x90168, 0x7c0, },
+	{ 0x90169, 0x109, },
+	{ 0x9016a, 0x0, },
+	{ 0x9016b, 0xe8, },
+	{ 0x9016c, 0x109, },
+	{ 0x9016d, 0x47, },
+	{ 0x9016e, 0x630, },
+	{ 0x9016f, 0x109, },
+	{ 0x90170, 0x8, },
+	{ 0x90171, 0x618, },
+	{ 0x90172, 0x109, },
+	{ 0x90173, 0x8, },
+	{ 0x90174, 0xe0, },
+	{ 0x90175, 0x109, },
+	{ 0x90176, 0x0, },
+	{ 0x90177, 0x7c8, },
+	{ 0x90178, 0x109, },
+	{ 0x90179, 0x8, },
+	{ 0x9017a, 0x8140, },
+	{ 0x9017b, 0x10c, },
+	{ 0x9017c, 0x0, },
+	{ 0x9017d, 0x478, },
+	{ 0x9017e, 0x109, },
+	{ 0x9017f, 0x0, },
+	{ 0x90180, 0x1, },
+	{ 0x90181, 0x8, },
+	{ 0x90182, 0x8, },
+	{ 0x90183, 0x4, },
+	{ 0x90184, 0x0, },
+	{ 0x90006, 0x8, },
+	{ 0x90007, 0x7c8, },
+	{ 0x90008, 0x109, },
+	{ 0x90009, 0x0, },
+	{ 0x9000a, 0x400, },
+	{ 0x9000b, 0x106, },
+	{ 0xd00e7, 0x400, },
+	{ 0x90017, 0x0, },
+	{ 0x9001f, 0x2b, },
+	{ 0x90026, 0x69, },
+	{ 0x400d0, 0x0, },
+	{ 0x400d1, 0x101, },
+	{ 0x400d2, 0x105, },
+	{ 0x400d3, 0x107, },
+	{ 0x400d4, 0x10f, },
+	{ 0x400d5, 0x202, },
+	{ 0x400d6, 0x20a, },
+	{ 0x400d7, 0x20b, },
+	{ 0x2003a, 0x2, },
+	{ 0x200be, 0x3, },
+	{ 0x2000b, 0x75, },
+	{ 0x2000c, 0xe9, },
+	{ 0x2000d, 0x91c, },
+	{ 0x2000e, 0x2c, },
+	{ 0x9000c, 0x0, },
+	{ 0x9000d, 0x173, },
+	{ 0x9000e, 0x60, },
+	{ 0x9000f, 0x6110, },
+	{ 0x90010, 0x2152, },
+	{ 0x90011, 0xdfbd, },
+	{ 0x90012, 0x2060, },
+	{ 0x90013, 0x6152, },
+	{ 0x20010, 0x5a, },
+	{ 0x20011, 0x3, },
+	{ 0x40080, 0xe0, },
+	{ 0x40081, 0x12, },
+	{ 0x40082, 0xe0, },
+	{ 0x40083, 0x12, },
+	{ 0x40084, 0xe0, },
+	{ 0x40085, 0x12, },
+	{ 0x400fd, 0xf, },
+	{ 0x400f1, 0xe, },
+	{ 0x10011, 0x1, },
+	{ 0x10012, 0x1, },
+	{ 0x10013, 0x180, },
+	{ 0x10018, 0x1, },
+	{ 0x10002, 0x6209, },
+	{ 0x100b2, 0x1, },
+	{ 0x101b4, 0x1, },
+	{ 0x102b4, 0x1, },
+	{ 0x103b4, 0x1, },
+	{ 0x104b4, 0x1, },
+	{ 0x105b4, 0x1, },
+	{ 0x106b4, 0x1, },
+	{ 0x107b4, 0x1, },
+	{ 0x108b4, 0x1, },
+	{ 0x11011, 0x1, },
+	{ 0x11012, 0x1, },
+	{ 0x11013, 0x180, },
+	{ 0x11018, 0x1, },
+	{ 0x11002, 0x6209, },
+	{ 0x110b2, 0x1, },
+	{ 0x111b4, 0x1, },
+	{ 0x112b4, 0x1, },
+	{ 0x113b4, 0x1, },
+	{ 0x114b4, 0x1, },
+	{ 0x115b4, 0x1, },
+	{ 0x116b4, 0x1, },
+	{ 0x117b4, 0x1, },
+	{ 0x118b4, 0x1, },
+	{ 0x20089, 0x1, },
+	{ 0x20088, 0x19, },
+	{ 0xc0080, 0x0, },
+	{ 0xd0000, 0x1, },
+};
+
+struct dram_fsp_msg ddr_dram_fsp_msg[] = {
+	{
+		/* P0 3733mts 1D */
+		.drate = 3733,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp0_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
+	},
+	{
+		/* P0 3733mts 2D */
+		.drate = 3733,
+		.fw_type = FW_2D_IMAGE,
+		.fsp_cfg = ddr_fsp0_2d_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
+	},
+};
+
+/* ddr timing config params */
+struct dram_timing_info dram_timing = {
+	.ddrc_cfg = ddr_ddrc_cfg,
+	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
+	.ddrphy_cfg = ddr_ddrphy_cfg,
+	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
+	.fsp_msg = ddr_dram_fsp_msg,
+	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
+	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
+	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
+	.ddrphy_pie = ddr_phy_pie,
+	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
+	.fsp_table = { 3733, },
+	.fsp_cfg = ddr_dram_fsp_cfg,
+	.fsp_cfg_num = ARRAY_SIZE(ddr_dram_fsp_cfg),
+};
Index: u-boot-tx93-mb7/board/karo/imx93/lpddr4_timing_tx93.c
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/lpddr4_timing_tx93.c
@@ -0,0 +1,1540 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright 2023 NXP
+ *
+ * Code generated with DDR Tool v1.0.0.
+ */
+
+#include <linux/kernel.h>
+#include <asm/arch/ddr.h>
+
+struct dram_cfg_param ddr_ddrc_cfg[] = {
+	/** Initialize DDRC registers **/
+	{ 0x4e300110, 0x44100001, },
+	{ 0x4e300000, 0x8000bf, },
+	{ 0x4e300008, 0x0, },
+	{ 0x4e300080, 0x80000412, },
+	{ 0x4e300084, 0x0, },
+	{ 0x4e300114, 0x1002, },
+	{ 0x4e300260, 0x80, },
+	{ 0x4e300f04, 0x80, },
+	{ 0x4e300800, 0x43b30002, },
+	{ 0x4e300804, 0x1f1f1f1f, },
+	{ 0x4e301000, 0x0, },
+	{ 0x4e301240, 0x0, },
+	{ 0x4e301244, 0x0, },
+	{ 0x4e301248, 0x0, },
+	{ 0x4e30124c, 0x0, },
+	{ 0x4e301250, 0x0, },
+	{ 0x4e301254, 0x0, },
+	{ 0x4e301258, 0x0, },
+	{ 0x4e30125c, 0x0, },
+};
+
+/* dram fsp cfg */
+static struct dram_fsp_cfg ddr_dram_fsp_cfg[] = {
+	{
+		{
+			{ 0x4e300100, 0x24A0321B, },
+			{ 0x4e300104, 0xF8EE001B, },
+			{ 0x4e300108, 0x2F2E3233, },
+			{ 0x4e30010C, 0x0005E18B, },
+			{ 0x4e300124, 0x1C770000, },
+			{ 0x4e300160, 0x00009102, },
+			{ 0x4e30016C, 0x35F00000, },
+			{ 0x4e300170, 0x8B0B0608, },
+			{ 0x4e300250, 0x00000028, },
+			{ 0x4e300254, 0x00000000, },
+			{ 0x4e300258, 0x00000008, },
+			{ 0x4e30025C, 0x00000400, },
+			{ 0x4e300300, 0x224F2213, },
+			{ 0x4e300304, 0x00FE2213, },
+			{ 0x4e300308, 0x0A3C0E3C, },
+		},
+		{
+			{ 0x01, 0xE4, },
+			{ 0x02, 0x36, },
+			{ 0x03, 0x23, },
+			{ 0x0b, 0x44, },
+			{ 0x0c, 0x12, },
+			{ 0x0e, 0x21, },
+			{ 0x16, 0x04, },
+		},
+		0,
+	},
+};
+
+/* PHY Initialize Configuration */
+struct dram_cfg_param ddr_ddrphy_cfg[] = {
+	{ 0x100a0, 0x2, },
+	{ 0x100a1, 0x3, },
+	{ 0x100a2, 0x5, },
+	{ 0x100a3, 0x4, },
+	{ 0x100a4, 0x7, },
+	{ 0x100a5, 0x6, },
+	{ 0x100a6, 0x0, },
+	{ 0x100a7, 0x1, },
+	{ 0x110a0, 0x0, },
+	{ 0x110a1, 0x1, },
+	{ 0x110a2, 0x6, },
+	{ 0x110a3, 0x7, },
+	{ 0x110a4, 0x4, },
+	{ 0x110a5, 0x5, },
+	{ 0x110a6, 0x2, },
+	{ 0x110a7, 0x3, },
+	{ 0x1005f, 0x1ff, },
+	{ 0x1015f, 0x1ff, },
+	{ 0x1105f, 0x1ff, },
+	{ 0x1115f, 0x1ff, },
+	{ 0x55, 0x1ff, },
+	{ 0x1055, 0x1ff, },
+	{ 0x2055, 0x1ff, },
+	{ 0x200c5, 0x19, },
+	{ 0x2002e, 0x2, },
+	{ 0x90204, 0x0, },
+	{ 0x20024, 0x1e3, },
+	{ 0x2003a, 0x2, },
+	{ 0x2007d, 0x212, },
+	{ 0x2007c, 0x61, },
+	{ 0x20056, 0x3, },
+	{ 0x1004d, 0x600, },
+	{ 0x1014d, 0x600, },
+	{ 0x1104d, 0x600, },
+	{ 0x1114d, 0x600, },
+	{ 0x10049, 0xe3f, },
+	{ 0x10149, 0xe3f, },
+	{ 0x11049, 0xe3f, },
+	{ 0x11149, 0xe3f, },
+	{ 0x43, 0x7f, },
+	{ 0x1043, 0x7f, },
+	{ 0x2043, 0x7f, },
+	{ 0x20018, 0x1, },
+	{ 0x20075, 0x4, },
+	{ 0x20050, 0x11, },
+	{ 0x2009b, 0x2, },
+	{ 0x20008, 0x3a5, },
+	{ 0x20088, 0x9, },
+	{ 0x200b2, 0x104, },
+	{ 0x10043, 0x5a1, },
+	{ 0x10143, 0x5a1, },
+	{ 0x11043, 0x5a1, },
+	{ 0x11143, 0x5a1, },
+	{ 0x200fa, 0x2, },
+	{ 0x20019, 0x1, },
+	{ 0x200f0, 0x600, },
+	{ 0x200f1, 0x0, },
+	{ 0x200f2, 0x4444, },
+	{ 0x200f3, 0x8888, },
+	{ 0x200f4, 0x5655, },
+	{ 0x200f5, 0x0, },
+	{ 0x200f6, 0x0, },
+	{ 0x200f7, 0xf000, },
+	{ 0x1004a, 0x500, },
+	{ 0x1104a, 0x500, },
+	{ 0x20025, 0x0, },
+	{ 0x2002d, 0x0, },
+	{ 0x2002c, 0x0, },
+	{ 0x20021, 0x0, },
+	{ 0x200c7, 0x21, },
+	{ 0x1200c7, 0x21, },
+	{ 0x200ca, 0x24, },
+	{ 0x1200ca, 0x24, },
+};
+
+/* ddr phy trained csr */
+struct dram_cfg_param ddr_ddrphy_trained_csr[] = {
+	{ 0x1005f, 0x0, },
+	{ 0x1015f, 0x0, },
+	{ 0x1105f, 0x0, },
+	{ 0x1115f, 0x0, },
+	{ 0x55, 0x0, },
+	{ 0x1055, 0x0, },
+	{ 0x2055, 0x0, },
+	{ 0x200c5, 0x0, },
+	{ 0x2002e, 0x0, },
+	{ 0x90204, 0x0, },
+	{ 0x20024, 0x0, },
+	{ 0x2003a, 0x0, },
+	{ 0x2007d, 0x0, },
+	{ 0x2007c, 0x0, },
+	{ 0x20056, 0x0, },
+	{ 0x1004d, 0x0, },
+	{ 0x1014d, 0x0, },
+	{ 0x1104d, 0x0, },
+	{ 0x1114d, 0x0, },
+	{ 0x10049, 0x0, },
+	{ 0x10149, 0x0, },
+	{ 0x11049, 0x0, },
+	{ 0x11149, 0x0, },
+	{ 0x43, 0x0, },
+	{ 0x1043, 0x0, },
+	{ 0x2043, 0x0, },
+	{ 0x20018, 0x0, },
+	{ 0x20075, 0x0, },
+	{ 0x20050, 0x0, },
+	{ 0x2009b, 0x0, },
+	{ 0x20008, 0x0, },
+	{ 0x20088, 0x0, },
+	{ 0x200b2, 0x0, },
+	{ 0x10043, 0x0, },
+	{ 0x10143, 0x0, },
+	{ 0x11043, 0x0, },
+	{ 0x11143, 0x0, },
+	{ 0x200fa, 0x0, },
+	{ 0x20019, 0x0, },
+	{ 0x200f0, 0x0, },
+	{ 0x200f1, 0x0, },
+	{ 0x200f2, 0x0, },
+	{ 0x200f3, 0x0, },
+	{ 0x200f4, 0x0, },
+	{ 0x200f5, 0x0, },
+	{ 0x200f6, 0x0, },
+	{ 0x200f7, 0x0, },
+	{ 0x1004a, 0x0, },
+	{ 0x1104a, 0x0, },
+	{ 0x20025, 0x0, },
+	{ 0x2002d, 0x0, },
+	{ 0x2002c, 0x0, },
+	{ 0xd0000, 0x0, },
+	{ 0x90000, 0x0, },
+	{ 0x90001, 0x0, },
+	{ 0x90002, 0x0, },
+	{ 0x90003, 0x0, },
+	{ 0x90004, 0x0, },
+	{ 0x90005, 0x0, },
+	{ 0x90029, 0x0, },
+	{ 0x9002a, 0x0, },
+	{ 0x9002b, 0x0, },
+	{ 0x9002c, 0x0, },
+	{ 0x9002d, 0x0, },
+	{ 0x9002e, 0x0, },
+	{ 0x9002f, 0x0, },
+	{ 0x90030, 0x0, },
+	{ 0x90031, 0x0, },
+	{ 0x90032, 0x0, },
+	{ 0x90033, 0x0, },
+	{ 0x90034, 0x0, },
+	{ 0x90035, 0x0, },
+	{ 0x90036, 0x0, },
+	{ 0x90037, 0x0, },
+	{ 0x90038, 0x0, },
+	{ 0x90039, 0x0, },
+	{ 0x9003a, 0x0, },
+	{ 0x9003b, 0x0, },
+	{ 0x9003c, 0x0, },
+	{ 0x9003d, 0x0, },
+	{ 0x9003e, 0x0, },
+	{ 0x9003f, 0x0, },
+	{ 0x90040, 0x0, },
+	{ 0x90041, 0x0, },
+	{ 0x90042, 0x0, },
+	{ 0x90043, 0x0, },
+	{ 0x90044, 0x0, },
+	{ 0x90045, 0x0, },
+	{ 0x90046, 0x0, },
+	{ 0x90047, 0x0, },
+	{ 0x90048, 0x0, },
+	{ 0x90049, 0x0, },
+	{ 0x9004a, 0x0, },
+	{ 0x9004b, 0x0, },
+	{ 0x9004c, 0x0, },
+	{ 0x9004d, 0x0, },
+	{ 0x9004e, 0x0, },
+	{ 0x9004f, 0x0, },
+	{ 0x90050, 0x0, },
+	{ 0x90051, 0x0, },
+	{ 0x90052, 0x0, },
+	{ 0x90053, 0x0, },
+	{ 0x90054, 0x0, },
+	{ 0x90055, 0x0, },
+	{ 0x90056, 0x0, },
+	{ 0x90057, 0x0, },
+	{ 0x90058, 0x0, },
+	{ 0x90059, 0x0, },
+	{ 0x9005a, 0x0, },
+	{ 0x9005b, 0x0, },
+	{ 0x9005c, 0x0, },
+	{ 0x9005d, 0x0, },
+	{ 0x9005e, 0x0, },
+	{ 0x9005f, 0x0, },
+	{ 0x90060, 0x0, },
+	{ 0x90061, 0x0, },
+	{ 0x90062, 0x0, },
+	{ 0x90063, 0x0, },
+	{ 0x90064, 0x0, },
+	{ 0x90065, 0x0, },
+	{ 0x90066, 0x0, },
+	{ 0x90067, 0x0, },
+	{ 0x90068, 0x0, },
+	{ 0x90069, 0x0, },
+	{ 0x9006a, 0x0, },
+	{ 0x9006b, 0x0, },
+	{ 0x9006c, 0x0, },
+	{ 0x9006d, 0x0, },
+	{ 0x9006e, 0x0, },
+	{ 0x9006f, 0x0, },
+	{ 0x90070, 0x0, },
+	{ 0x90071, 0x0, },
+	{ 0x90072, 0x0, },
+	{ 0x90073, 0x0, },
+	{ 0x90074, 0x0, },
+	{ 0x90075, 0x0, },
+	{ 0x90076, 0x0, },
+	{ 0x90077, 0x0, },
+	{ 0x90078, 0x0, },
+	{ 0x90079, 0x0, },
+	{ 0x9007a, 0x0, },
+	{ 0x9007b, 0x0, },
+	{ 0x9007c, 0x0, },
+	{ 0x9007d, 0x0, },
+	{ 0x9007e, 0x0, },
+	{ 0x9007f, 0x0, },
+	{ 0x90080, 0x0, },
+	{ 0x90081, 0x0, },
+	{ 0x90082, 0x0, },
+	{ 0x90083, 0x0, },
+	{ 0x90084, 0x0, },
+	{ 0x90085, 0x0, },
+	{ 0x90086, 0x0, },
+	{ 0x90087, 0x0, },
+	{ 0x90088, 0x0, },
+	{ 0x90089, 0x0, },
+	{ 0x9008a, 0x0, },
+	{ 0x9008b, 0x0, },
+	{ 0x9008c, 0x0, },
+	{ 0x9008d, 0x0, },
+	{ 0x9008e, 0x0, },
+	{ 0x9008f, 0x0, },
+	{ 0x90090, 0x0, },
+	{ 0x90091, 0x0, },
+	{ 0x90092, 0x0, },
+	{ 0x90093, 0x0, },
+	{ 0x90094, 0x0, },
+	{ 0x90095, 0x0, },
+	{ 0x90096, 0x0, },
+	{ 0x90097, 0x0, },
+	{ 0x90098, 0x0, },
+	{ 0x90099, 0x0, },
+	{ 0x9009a, 0x0, },
+	{ 0x9009b, 0x0, },
+	{ 0x9009c, 0x0, },
+	{ 0x9009d, 0x0, },
+	{ 0x9009e, 0x0, },
+	{ 0x9009f, 0x0, },
+	{ 0x900a0, 0x0, },
+	{ 0x900a1, 0x0, },
+	{ 0x900a2, 0x0, },
+	{ 0x900a3, 0x0, },
+	{ 0x900a4, 0x0, },
+	{ 0x900a5, 0x0, },
+	{ 0x900a6, 0x0, },
+	{ 0x900a7, 0x0, },
+	{ 0x900a8, 0x0, },
+	{ 0x900a9, 0x0, },
+	{ 0x40000, 0x0, },
+	{ 0x40020, 0x0, },
+	{ 0x40040, 0x0, },
+	{ 0x40060, 0x0, },
+	{ 0x40001, 0x0, },
+	{ 0x40021, 0x0, },
+	{ 0x40041, 0x0, },
+	{ 0x40061, 0x0, },
+	{ 0x40002, 0x0, },
+	{ 0x40022, 0x0, },
+	{ 0x40042, 0x0, },
+	{ 0x40062, 0x0, },
+	{ 0x40003, 0x0, },
+	{ 0x40023, 0x0, },
+	{ 0x40043, 0x0, },
+	{ 0x40063, 0x0, },
+	{ 0x40004, 0x0, },
+	{ 0x40024, 0x0, },
+	{ 0x40044, 0x0, },
+	{ 0x40064, 0x0, },
+	{ 0x40005, 0x0, },
+	{ 0x40025, 0x0, },
+	{ 0x40045, 0x0, },
+	{ 0x40065, 0x0, },
+	{ 0x40006, 0x0, },
+	{ 0x40026, 0x0, },
+	{ 0x40046, 0x0, },
+	{ 0x40066, 0x0, },
+	{ 0x40007, 0x0, },
+	{ 0x40027, 0x0, },
+	{ 0x40047, 0x0, },
+	{ 0x40067, 0x0, },
+	{ 0x40008, 0x0, },
+	{ 0x40028, 0x0, },
+	{ 0x40048, 0x0, },
+	{ 0x40068, 0x0, },
+	{ 0x40009, 0x0, },
+	{ 0x40029, 0x0, },
+	{ 0x40049, 0x0, },
+	{ 0x40069, 0x0, },
+	{ 0x4000a, 0x0, },
+	{ 0x4002a, 0x0, },
+	{ 0x4004a, 0x0, },
+	{ 0x4006a, 0x0, },
+	{ 0x4000b, 0x0, },
+	{ 0x4002b, 0x0, },
+	{ 0x4004b, 0x0, },
+	{ 0x4006b, 0x0, },
+	{ 0x4000c, 0x0, },
+	{ 0x4002c, 0x0, },
+	{ 0x4004c, 0x0, },
+	{ 0x4006c, 0x0, },
+	{ 0x4000d, 0x0, },
+	{ 0x4002d, 0x0, },
+	{ 0x4004d, 0x0, },
+	{ 0x4006d, 0x0, },
+	{ 0x4000e, 0x0, },
+	{ 0x4002e, 0x0, },
+	{ 0x4004e, 0x0, },
+	{ 0x4006e, 0x0, },
+	{ 0x4000f, 0x0, },
+	{ 0x4002f, 0x0, },
+	{ 0x4004f, 0x0, },
+	{ 0x4006f, 0x0, },
+	{ 0x40010, 0x0, },
+	{ 0x40030, 0x0, },
+	{ 0x40050, 0x0, },
+	{ 0x40070, 0x0, },
+	{ 0x40011, 0x0, },
+	{ 0x40031, 0x0, },
+	{ 0x40051, 0x0, },
+	{ 0x40071, 0x0, },
+	{ 0x40012, 0x0, },
+	{ 0x40032, 0x0, },
+	{ 0x40052, 0x0, },
+	{ 0x40072, 0x0, },
+	{ 0x40013, 0x0, },
+	{ 0x40033, 0x0, },
+	{ 0x40053, 0x0, },
+	{ 0x40073, 0x0, },
+	{ 0x40014, 0x0, },
+	{ 0x40034, 0x0, },
+	{ 0x40054, 0x0, },
+	{ 0x40074, 0x0, },
+	{ 0x40015, 0x0, },
+	{ 0x40035, 0x0, },
+	{ 0x40055, 0x0, },
+	{ 0x40075, 0x0, },
+	{ 0x40016, 0x0, },
+	{ 0x40036, 0x0, },
+	{ 0x40056, 0x0, },
+	{ 0x40076, 0x0, },
+	{ 0x40017, 0x0, },
+	{ 0x40037, 0x0, },
+	{ 0x40057, 0x0, },
+	{ 0x40077, 0x0, },
+	{ 0x40018, 0x0, },
+	{ 0x40038, 0x0, },
+	{ 0x40058, 0x0, },
+	{ 0x40078, 0x0, },
+	{ 0x40019, 0x0, },
+	{ 0x40039, 0x0, },
+	{ 0x40059, 0x0, },
+	{ 0x40079, 0x0, },
+	{ 0x4001a, 0x0, },
+	{ 0x4003a, 0x0, },
+	{ 0x4005a, 0x0, },
+	{ 0x4007a, 0x0, },
+	{ 0x900aa, 0x0, },
+	{ 0x900ab, 0x0, },
+	{ 0x900ac, 0x0, },
+	{ 0x900ad, 0x0, },
+	{ 0x900ae, 0x0, },
+	{ 0x900af, 0x0, },
+	{ 0x900b0, 0x0, },
+	{ 0x900b1, 0x0, },
+	{ 0x900b2, 0x0, },
+	{ 0x900b3, 0x0, },
+	{ 0x900b4, 0x0, },
+	{ 0x900b5, 0x0, },
+	{ 0x900b6, 0x0, },
+	{ 0x900b7, 0x0, },
+	{ 0x900b8, 0x0, },
+	{ 0x900b9, 0x0, },
+	{ 0x900ba, 0x0, },
+	{ 0x900bb, 0x0, },
+	{ 0x900bc, 0x0, },
+	{ 0x900bd, 0x0, },
+	{ 0x900be, 0x0, },
+	{ 0x900bf, 0x0, },
+	{ 0x900c0, 0x0, },
+	{ 0x900c1, 0x0, },
+	{ 0x900c2, 0x0, },
+	{ 0x900c3, 0x0, },
+	{ 0x900c4, 0x0, },
+	{ 0x900c5, 0x0, },
+	{ 0x900c6, 0x0, },
+	{ 0x900c7, 0x0, },
+	{ 0x900c8, 0x0, },
+	{ 0x900c9, 0x0, },
+	{ 0x900ca, 0x0, },
+	{ 0x900cb, 0x0, },
+	{ 0x900cc, 0x0, },
+	{ 0x900cd, 0x0, },
+	{ 0x900ce, 0x0, },
+	{ 0x900cf, 0x0, },
+	{ 0x900d0, 0x0, },
+	{ 0x900d1, 0x0, },
+	{ 0x900d2, 0x0, },
+	{ 0x900d3, 0x0, },
+	{ 0x900d4, 0x0, },
+	{ 0x900d5, 0x0, },
+	{ 0x900d6, 0x0, },
+	{ 0x900d7, 0x0, },
+	{ 0x900d8, 0x0, },
+	{ 0x900d9, 0x0, },
+	{ 0x900da, 0x0, },
+	{ 0x900db, 0x0, },
+	{ 0x900dc, 0x0, },
+	{ 0x900dd, 0x0, },
+	{ 0x900de, 0x0, },
+	{ 0x900df, 0x0, },
+	{ 0x900e0, 0x0, },
+	{ 0x900e1, 0x0, },
+	{ 0x900e2, 0x0, },
+	{ 0x900e3, 0x0, },
+	{ 0x900e4, 0x0, },
+	{ 0x900e5, 0x0, },
+	{ 0x900e6, 0x0, },
+	{ 0x900e7, 0x0, },
+	{ 0x900e8, 0x0, },
+	{ 0x900e9, 0x0, },
+	{ 0x900ea, 0x0, },
+	{ 0x900eb, 0x0, },
+	{ 0x900ec, 0x0, },
+	{ 0x900ed, 0x0, },
+	{ 0x900ee, 0x0, },
+	{ 0x900ef, 0x0, },
+	{ 0x900f0, 0x0, },
+	{ 0x900f1, 0x0, },
+	{ 0x900f2, 0x0, },
+	{ 0x900f3, 0x0, },
+	{ 0x900f4, 0x0, },
+	{ 0x900f5, 0x0, },
+	{ 0x900f6, 0x0, },
+	{ 0x900f7, 0x0, },
+	{ 0x900f8, 0x0, },
+	{ 0x900f9, 0x0, },
+	{ 0x900fa, 0x0, },
+	{ 0x900fb, 0x0, },
+	{ 0x900fc, 0x0, },
+	{ 0x900fd, 0x0, },
+	{ 0x900fe, 0x0, },
+	{ 0x900ff, 0x0, },
+	{ 0x90100, 0x0, },
+	{ 0x90101, 0x0, },
+	{ 0x90102, 0x0, },
+	{ 0x90103, 0x0, },
+	{ 0x90104, 0x0, },
+	{ 0x90105, 0x0, },
+	{ 0x90106, 0x0, },
+	{ 0x90107, 0x0, },
+	{ 0x90108, 0x0, },
+	{ 0x90109, 0x0, },
+	{ 0x9010a, 0x0, },
+	{ 0x9010b, 0x0, },
+	{ 0x9010c, 0x0, },
+	{ 0x9010d, 0x0, },
+	{ 0x9010e, 0x0, },
+	{ 0x9010f, 0x0, },
+	{ 0x90110, 0x0, },
+	{ 0x90111, 0x0, },
+	{ 0x90112, 0x0, },
+	{ 0x90113, 0x0, },
+	{ 0x90114, 0x0, },
+	{ 0x90115, 0x0, },
+	{ 0x90116, 0x0, },
+	{ 0x90117, 0x0, },
+	{ 0x90118, 0x0, },
+	{ 0x90119, 0x0, },
+	{ 0x9011a, 0x0, },
+	{ 0x9011b, 0x0, },
+	{ 0x9011c, 0x0, },
+	{ 0x9011d, 0x0, },
+	{ 0x9011e, 0x0, },
+	{ 0x9011f, 0x0, },
+	{ 0x90120, 0x0, },
+	{ 0x90121, 0x0, },
+	{ 0x90122, 0x0, },
+	{ 0x90123, 0x0, },
+	{ 0x90124, 0x0, },
+	{ 0x90125, 0x0, },
+	{ 0x90126, 0x0, },
+	{ 0x90127, 0x0, },
+	{ 0x90128, 0x0, },
+	{ 0x90129, 0x0, },
+	{ 0x9012a, 0x0, },
+	{ 0x9012b, 0x0, },
+	{ 0x9012c, 0x0, },
+	{ 0x9012d, 0x0, },
+	{ 0x9012e, 0x0, },
+	{ 0x9012f, 0x0, },
+	{ 0x90130, 0x0, },
+	{ 0x90131, 0x0, },
+	{ 0x90132, 0x0, },
+	{ 0x90133, 0x0, },
+	{ 0x90134, 0x0, },
+	{ 0x90135, 0x0, },
+	{ 0x90136, 0x0, },
+	{ 0x90137, 0x0, },
+	{ 0x90138, 0x0, },
+	{ 0x90139, 0x0, },
+	{ 0x9013a, 0x0, },
+	{ 0x9013b, 0x0, },
+	{ 0x9013c, 0x0, },
+	{ 0x9013d, 0x0, },
+	{ 0x9013e, 0x0, },
+	{ 0x9013f, 0x0, },
+	{ 0x90140, 0x0, },
+	{ 0x90141, 0x0, },
+	{ 0x90142, 0x0, },
+	{ 0x90143, 0x0, },
+	{ 0x90144, 0x0, },
+	{ 0x90145, 0x0, },
+	{ 0x90146, 0x0, },
+	{ 0x90147, 0x0, },
+	{ 0x90148, 0x0, },
+	{ 0x90149, 0x0, },
+	{ 0x9014a, 0x0, },
+	{ 0x9014b, 0x0, },
+	{ 0x9014c, 0x0, },
+	{ 0x9014d, 0x0, },
+	{ 0x9014e, 0x0, },
+	{ 0x9014f, 0x0, },
+	{ 0x90150, 0x0, },
+	{ 0x90151, 0x0, },
+	{ 0x90152, 0x0, },
+	{ 0x90153, 0x0, },
+	{ 0x90154, 0x0, },
+	{ 0x90155, 0x0, },
+	{ 0x90156, 0x0, },
+	{ 0x90157, 0x0, },
+	{ 0x90158, 0x0, },
+	{ 0x90159, 0x0, },
+	{ 0x9015a, 0x0, },
+	{ 0x9015b, 0x0, },
+	{ 0x9015c, 0x0, },
+	{ 0x9015d, 0x0, },
+	{ 0x9015e, 0x0, },
+	{ 0x9015f, 0x0, },
+	{ 0x90160, 0x0, },
+	{ 0x90161, 0x0, },
+	{ 0x90162, 0x0, },
+	{ 0x90163, 0x0, },
+	{ 0x90164, 0x0, },
+	{ 0x90165, 0x0, },
+	{ 0x90166, 0x0, },
+	{ 0x90167, 0x0, },
+	{ 0x90168, 0x0, },
+	{ 0x90169, 0x0, },
+	{ 0x9016a, 0x0, },
+	{ 0x9016b, 0x0, },
+	{ 0x9016c, 0x0, },
+	{ 0x9016d, 0x0, },
+	{ 0x9016e, 0x0, },
+	{ 0x9016f, 0x0, },
+	{ 0x90170, 0x0, },
+	{ 0x90171, 0x0, },
+	{ 0x90172, 0x0, },
+	{ 0x90173, 0x0, },
+	{ 0x90174, 0x0, },
+	{ 0x90175, 0x0, },
+	{ 0x90176, 0x0, },
+	{ 0x90177, 0x0, },
+	{ 0x90178, 0x0, },
+	{ 0x90179, 0x0, },
+	{ 0x9017a, 0x0, },
+	{ 0x9017b, 0x0, },
+	{ 0x9017c, 0x0, },
+	{ 0x9017d, 0x0, },
+	{ 0x9017e, 0x0, },
+	{ 0x9017f, 0x0, },
+	{ 0x90180, 0x0, },
+	{ 0x90181, 0x0, },
+	{ 0x90182, 0x0, },
+	{ 0x90183, 0x0, },
+	{ 0x90184, 0x0, },
+	{ 0x90006, 0x0, },
+	{ 0x90007, 0x0, },
+	{ 0x90008, 0x0, },
+	{ 0x90009, 0x0, },
+	{ 0x9000a, 0x0, },
+	{ 0x9000b, 0x0, },
+	{ 0xd00e7, 0x0, },
+	{ 0x90017, 0x0, },
+	{ 0x9001f, 0x0, },
+	{ 0x90026, 0x0, },
+	{ 0x400d0, 0x0, },
+	{ 0x400d1, 0x0, },
+	{ 0x400d2, 0x0, },
+	{ 0x400d3, 0x0, },
+	{ 0x400d4, 0x0, },
+	{ 0x400d5, 0x0, },
+	{ 0x400d6, 0x0, },
+	{ 0x400d7, 0x0, },
+	{ 0x200be, 0x0, },
+	{ 0x2000b, 0x0, },
+	{ 0x2000c, 0x0, },
+	{ 0x2000d, 0x0, },
+	{ 0x2000e, 0x0, },
+	{ 0x9000c, 0x0, },
+	{ 0x9000d, 0x0, },
+	{ 0x9000e, 0x0, },
+	{ 0x9000f, 0x0, },
+	{ 0x90010, 0x0, },
+	{ 0x90011, 0x0, },
+	{ 0x90012, 0x0, },
+	{ 0x90013, 0x0, },
+	{ 0x20010, 0x0, },
+	{ 0x20011, 0x0, },
+	{ 0x40080, 0x0, },
+	{ 0x40081, 0x0, },
+	{ 0x40082, 0x0, },
+	{ 0x40083, 0x0, },
+	{ 0x40084, 0x0, },
+	{ 0x40085, 0x0, },
+	{ 0x400fd, 0x0, },
+	{ 0x400f1, 0x0, },
+	{ 0x10011, 0x0, },
+	{ 0x10012, 0x0, },
+	{ 0x10013, 0x0, },
+	{ 0x10018, 0x0, },
+	{ 0x10002, 0x0, },
+	{ 0x100b2, 0x0, },
+	{ 0x101b4, 0x0, },
+	{ 0x102b4, 0x0, },
+	{ 0x103b4, 0x0, },
+	{ 0x104b4, 0x0, },
+	{ 0x105b4, 0x0, },
+	{ 0x106b4, 0x0, },
+	{ 0x107b4, 0x0, },
+	{ 0x108b4, 0x0, },
+	{ 0x11011, 0x0, },
+	{ 0x11012, 0x0, },
+	{ 0x11013, 0x0, },
+	{ 0x11018, 0x0, },
+	{ 0x11002, 0x0, },
+	{ 0x110b2, 0x0, },
+	{ 0x111b4, 0x0, },
+	{ 0x112b4, 0x0, },
+	{ 0x113b4, 0x0, },
+	{ 0x114b4, 0x0, },
+	{ 0x115b4, 0x0, },
+	{ 0x116b4, 0x0, },
+	{ 0x117b4, 0x0, },
+	{ 0x118b4, 0x0, },
+	{ 0x20089, 0x0, },
+	{ 0xc0080, 0x0, },
+	{ 0x200cb, 0x0, },
+	{ 0x10068, 0x0, },
+	{ 0x10069, 0x0, },
+	{ 0x10168, 0x0, },
+	{ 0x10169, 0x0, },
+	{ 0x10268, 0x0, },
+	{ 0x10269, 0x0, },
+	{ 0x10368, 0x0, },
+	{ 0x10369, 0x0, },
+	{ 0x10468, 0x0, },
+	{ 0x10469, 0x0, },
+	{ 0x10568, 0x0, },
+	{ 0x10569, 0x0, },
+	{ 0x10668, 0x0, },
+	{ 0x10669, 0x0, },
+	{ 0x10768, 0x0, },
+	{ 0x10769, 0x0, },
+	{ 0x10868, 0x0, },
+	{ 0x10869, 0x0, },
+	{ 0x100aa, 0x0, },
+	{ 0x10062, 0x0, },
+	{ 0x10001, 0x0, },
+	{ 0x100a0, 0x0, },
+	{ 0x100a1, 0x0, },
+	{ 0x100a2, 0x0, },
+	{ 0x100a3, 0x0, },
+	{ 0x100a4, 0x0, },
+	{ 0x100a5, 0x0, },
+	{ 0x100a6, 0x0, },
+	{ 0x100a7, 0x0, },
+	{ 0x11068, 0x0, },
+	{ 0x11069, 0x0, },
+	{ 0x11168, 0x0, },
+	{ 0x11169, 0x0, },
+	{ 0x11268, 0x0, },
+	{ 0x11269, 0x0, },
+	{ 0x11368, 0x0, },
+	{ 0x11369, 0x0, },
+	{ 0x11468, 0x0, },
+	{ 0x11469, 0x0, },
+	{ 0x11568, 0x0, },
+	{ 0x11569, 0x0, },
+	{ 0x11668, 0x0, },
+	{ 0x11669, 0x0, },
+	{ 0x11768, 0x0, },
+	{ 0x11769, 0x0, },
+	{ 0x11868, 0x0, },
+	{ 0x11869, 0x0, },
+	{ 0x110aa, 0x0, },
+	{ 0x11062, 0x0, },
+	{ 0x11001, 0x0, },
+	{ 0x110a0, 0x0, },
+	{ 0x110a1, 0x0, },
+	{ 0x110a2, 0x0, },
+	{ 0x110a3, 0x0, },
+	{ 0x110a4, 0x0, },
+	{ 0x110a5, 0x0, },
+	{ 0x110a6, 0x0, },
+	{ 0x110a7, 0x0, },
+	{ 0x80, 0x0, },
+	{ 0x1080, 0x0, },
+	{ 0x2080, 0x0, },
+	{ 0x10020, 0x0, },
+	{ 0x10080, 0x0, },
+	{ 0x10081, 0x0, },
+	{ 0x100d0, 0x0, },
+	{ 0x100d1, 0x0, },
+	{ 0x1008c, 0x0, },
+	{ 0x1008d, 0x0, },
+	{ 0x10180, 0x0, },
+	{ 0x10181, 0x0, },
+	{ 0x101d0, 0x0, },
+	{ 0x101d1, 0x0, },
+	{ 0x1018c, 0x0, },
+	{ 0x1018d, 0x0, },
+	{ 0x100c0, 0x0, },
+	{ 0x100c1, 0x0, },
+	{ 0x101c0, 0x0, },
+	{ 0x101c1, 0x0, },
+	{ 0x102c0, 0x0, },
+	{ 0x102c1, 0x0, },
+	{ 0x103c0, 0x0, },
+	{ 0x103c1, 0x0, },
+	{ 0x104c0, 0x0, },
+	{ 0x104c1, 0x0, },
+	{ 0x105c0, 0x0, },
+	{ 0x105c1, 0x0, },
+	{ 0x106c0, 0x0, },
+	{ 0x106c1, 0x0, },
+	{ 0x107c0, 0x0, },
+	{ 0x107c1, 0x0, },
+	{ 0x108c0, 0x0, },
+	{ 0x108c1, 0x0, },
+	{ 0x100ae, 0x0, },
+	{ 0x100af, 0x0, },
+	{ 0x11020, 0x0, },
+	{ 0x11080, 0x0, },
+	{ 0x11081, 0x0, },
+	{ 0x110d0, 0x0, },
+	{ 0x110d1, 0x0, },
+	{ 0x1108c, 0x0, },
+	{ 0x1108d, 0x0, },
+	{ 0x11180, 0x0, },
+	{ 0x11181, 0x0, },
+	{ 0x111d0, 0x0, },
+	{ 0x111d1, 0x0, },
+	{ 0x1118c, 0x0, },
+	{ 0x1118d, 0x0, },
+	{ 0x110c0, 0x0, },
+	{ 0x110c1, 0x0, },
+	{ 0x111c0, 0x0, },
+	{ 0x111c1, 0x0, },
+	{ 0x112c0, 0x0, },
+	{ 0x112c1, 0x0, },
+	{ 0x113c0, 0x0, },
+	{ 0x113c1, 0x0, },
+	{ 0x114c0, 0x0, },
+	{ 0x114c1, 0x0, },
+	{ 0x115c0, 0x0, },
+	{ 0x115c1, 0x0, },
+	{ 0x116c0, 0x0, },
+	{ 0x116c1, 0x0, },
+	{ 0x117c0, 0x0, },
+	{ 0x117c1, 0x0, },
+	{ 0x118c0, 0x0, },
+	{ 0x118c1, 0x0, },
+	{ 0x110ae, 0x0, },
+	{ 0x110af, 0x0, },
+	{ 0x90201, 0x0, },
+	{ 0x90202, 0x0, },
+	{ 0x90203, 0x0, },
+	{ 0x90205, 0x0, },
+	{ 0x90206, 0x0, },
+	{ 0x90207, 0x0, },
+	{ 0x90208, 0x0, },
+	{ 0x20020, 0x0, },
+	{ 0x20077, 0x0, },
+	{ 0x20072, 0x0, },
+	{ 0x20073, 0x0, },
+	{ 0x400c0, 0x0, },
+	{ 0x10040, 0x0, },
+	{ 0x10140, 0x0, },
+	{ 0x10240, 0x0, },
+	{ 0x10340, 0x0, },
+	{ 0x10440, 0x0, },
+	{ 0x10540, 0x0, },
+	{ 0x10640, 0x0, },
+	{ 0x10740, 0x0, },
+	{ 0x10840, 0x0, },
+	{ 0x11040, 0x0, },
+	{ 0x11140, 0x0, },
+	{ 0x11240, 0x0, },
+	{ 0x11340, 0x0, },
+	{ 0x11440, 0x0, },
+	{ 0x11540, 0x0, },
+	{ 0x11640, 0x0, },
+	{ 0x11740, 0x0, },
+	{ 0x11840, 0x0, },
+};
+
+/* P0 message block parameter for training firmware */
+struct dram_cfg_param ddr_fsp0_cfg[] = {
+	{ 0xd0000, 0x0, },
+	{ 0x54003, 0xe94, },
+	{ 0x54004, 0x4, },
+	{ 0x54006, 0x14, },
+	{ 0x54008, 0x131f, },
+	{ 0x54009, 0xc8, },
+	{ 0x5400b, 0x4, },
+	{ 0x5400d, 0x100, },
+	{ 0x5400f, 0x100, },
+	{ 0x54012, 0x110, },
+	{ 0x54019, 0x36e4, },
+	{ 0x5401a, 0x23, },
+	{ 0x5401b, 0x1244, },
+	{ 0x5401c, 0x2108, },
+	{ 0x5401e, 0x4, },
+	{ 0x5401f, 0x36e4, },
+	{ 0x54020, 0x23, },
+	{ 0x54021, 0x1244, },
+	{ 0x54022, 0x2108, },
+	{ 0x54024, 0x4, },
+	{ 0x54032, 0xe400, },
+	{ 0x54033, 0x2336, },
+	{ 0x54034, 0x4400, },
+	{ 0x54035, 0x812, },
+	{ 0x54036, 0x21, },
+	{ 0x54037, 0x400, },
+	{ 0x54038, 0xe400, },
+	{ 0x54039, 0x2336, },
+	{ 0x5403a, 0x4400, },
+	{ 0x5403b, 0x812, },
+	{ 0x5403c, 0x21, },
+	{ 0x5403d, 0x400, },
+	{ 0xd0000, 0x1}
+};
+
+/* P0 2D message block parameter for training firmware */
+struct dram_cfg_param ddr_fsp0_2d_cfg[] = {
+	{ 0xd0000, 0x0, },
+	{ 0x54003, 0xe94, },
+	{ 0x54004, 0x4, },
+	{ 0x54006, 0x14, },
+	{ 0x54008, 0x61, },
+	{ 0x54009, 0xc8, },
+	{ 0x5400b, 0x4, },
+	{ 0x5400d, 0x100, },
+	{ 0x5400f, 0x100, },
+	{ 0x54010, 0x2080, },
+	{ 0x54012, 0x110, },
+	{ 0x54019, 0x36e4, },
+	{ 0x5401a, 0x23, },
+	{ 0x5401b, 0x1244, },
+	{ 0x5401c, 0x2108, },
+	{ 0x5401e, 0x4, },
+	{ 0x5401f, 0x36e4, },
+	{ 0x54020, 0x23, },
+	{ 0x54021, 0x1244, },
+	{ 0x54022, 0x2108, },
+	{ 0x54024, 0x4, },
+	{ 0x54032, 0xe400, },
+	{ 0x54033, 0x2336, },
+	{ 0x54034, 0x4400, },
+	{ 0x54035, 0x812, },
+	{ 0x54036, 0x21, },
+	{ 0x54037, 0x400, },
+	{ 0x54038, 0xe400, },
+	{ 0x54039, 0x2336, },
+	{ 0x5403a, 0x4400, },
+	{ 0x5403b, 0x812, },
+	{ 0x5403c, 0x21, },
+	{ 0x5403d, 0x400, },
+	{ 0xd0000, 0x1}
+};
+
+/* DRAM PHY init engine image */
+struct dram_cfg_param ddr_phy_pie[] = {
+	{ 0xd0000, 0x0, },
+	{ 0x90000, 0x10, },
+	{ 0x90001, 0x400, },
+	{ 0x90002, 0x10e, },
+	{ 0x90003, 0x0, },
+	{ 0x90004, 0x0, },
+	{ 0x90005, 0x8, },
+	{ 0x90029, 0xb, },
+	{ 0x9002a, 0x480, },
+	{ 0x9002b, 0x109, },
+	{ 0x9002c, 0x8, },
+	{ 0x9002d, 0x448, },
+	{ 0x9002e, 0x139, },
+	{ 0x9002f, 0x8, },
+	{ 0x90030, 0x478, },
+	{ 0x90031, 0x109, },
+	{ 0x90032, 0x0, },
+	{ 0x90033, 0xe8, },
+	{ 0x90034, 0x109, },
+	{ 0x90035, 0x2, },
+	{ 0x90036, 0x10, },
+	{ 0x90037, 0x139, },
+	{ 0x90038, 0xb, },
+	{ 0x90039, 0x7c0, },
+	{ 0x9003a, 0x139, },
+	{ 0x9003b, 0x44, },
+	{ 0x9003c, 0x633, },
+	{ 0x9003d, 0x159, },
+	{ 0x9003e, 0x14f, },
+	{ 0x9003f, 0x630, },
+	{ 0x90040, 0x159, },
+	{ 0x90041, 0x47, },
+	{ 0x90042, 0x633, },
+	{ 0x90043, 0x149, },
+	{ 0x90044, 0x4f, },
+	{ 0x90045, 0x633, },
+	{ 0x90046, 0x179, },
+	{ 0x90047, 0x8, },
+	{ 0x90048, 0xe0, },
+	{ 0x90049, 0x109, },
+	{ 0x9004a, 0x0, },
+	{ 0x9004b, 0x7c8, },
+	{ 0x9004c, 0x109, },
+	{ 0x9004d, 0x0, },
+	{ 0x9004e, 0x1, },
+	{ 0x9004f, 0x8, },
+	{ 0x90050, 0x30, },
+	{ 0x90051, 0x65a, },
+	{ 0x90052, 0x9, },
+	{ 0x90053, 0x0, },
+	{ 0x90054, 0x45a, },
+	{ 0x90055, 0x9, },
+	{ 0x90056, 0x0, },
+	{ 0x90057, 0x448, },
+	{ 0x90058, 0x109, },
+	{ 0x90059, 0x40, },
+	{ 0x9005a, 0x633, },
+	{ 0x9005b, 0x179, },
+	{ 0x9005c, 0x1, },
+	{ 0x9005d, 0x618, },
+	{ 0x9005e, 0x109, },
+	{ 0x9005f, 0x40c0, },
+	{ 0x90060, 0x633, },
+	{ 0x90061, 0x149, },
+	{ 0x90062, 0x8, },
+	{ 0x90063, 0x4, },
+	{ 0x90064, 0x48, },
+	{ 0x90065, 0x4040, },
+	{ 0x90066, 0x633, },
+	{ 0x90067, 0x149, },
+	{ 0x90068, 0x0, },
+	{ 0x90069, 0x4, },
+	{ 0x9006a, 0x48, },
+	{ 0x9006b, 0x40, },
+	{ 0x9006c, 0x633, },
+	{ 0x9006d, 0x149, },
+	{ 0x9006e, 0x0, },
+	{ 0x9006f, 0x658, },
+	{ 0x90070, 0x109, },
+	{ 0x90071, 0x10, },
+	{ 0x90072, 0x4, },
+	{ 0x90073, 0x18, },
+	{ 0x90074, 0x0, },
+	{ 0x90075, 0x4, },
+	{ 0x90076, 0x78, },
+	{ 0x90077, 0x549, },
+	{ 0x90078, 0x633, },
+	{ 0x90079, 0x159, },
+	{ 0x9007a, 0xd49, },
+	{ 0x9007b, 0x633, },
+	{ 0x9007c, 0x159, },
+	{ 0x9007d, 0x94a, },
+	{ 0x9007e, 0x633, },
+	{ 0x9007f, 0x159, },
+	{ 0x90080, 0x441, },
+	{ 0x90081, 0x633, },
+	{ 0x90082, 0x149, },
+	{ 0x90083, 0x42, },
+	{ 0x90084, 0x633, },
+	{ 0x90085, 0x149, },
+	{ 0x90086, 0x1, },
+	{ 0x90087, 0x633, },
+	{ 0x90088, 0x149, },
+	{ 0x90089, 0x0, },
+	{ 0x9008a, 0xe0, },
+	{ 0x9008b, 0x109, },
+	{ 0x9008c, 0xa, },
+	{ 0x9008d, 0x10, },
+	{ 0x9008e, 0x109, },
+	{ 0x9008f, 0x9, },
+	{ 0x90090, 0x3c0, },
+	{ 0x90091, 0x149, },
+	{ 0x90092, 0x9, },
+	{ 0x90093, 0x3c0, },
+	{ 0x90094, 0x159, },
+	{ 0x90095, 0x18, },
+	{ 0x90096, 0x10, },
+	{ 0x90097, 0x109, },
+	{ 0x90098, 0x0, },
+	{ 0x90099, 0x3c0, },
+	{ 0x9009a, 0x109, },
+	{ 0x9009b, 0x18, },
+	{ 0x9009c, 0x4, },
+	{ 0x9009d, 0x48, },
+	{ 0x9009e, 0x18, },
+	{ 0x9009f, 0x4, },
+	{ 0x900a0, 0x58, },
+	{ 0x900a1, 0xb, },
+	{ 0x900a2, 0x10, },
+	{ 0x900a3, 0x109, },
+	{ 0x900a4, 0x1, },
+	{ 0x900a5, 0x10, },
+	{ 0x900a6, 0x109, },
+	{ 0x900a7, 0x5, },
+	{ 0x900a8, 0x7c0, },
+	{ 0x900a9, 0x109, },
+	{ 0x40000, 0x811, },
+	{ 0x40020, 0x880, },
+	{ 0x40040, 0x0, },
+	{ 0x40060, 0x0, },
+	{ 0x40001, 0x4008, },
+	{ 0x40021, 0x83, },
+	{ 0x40041, 0x4f, },
+	{ 0x40061, 0x0, },
+	{ 0x40002, 0x4040, },
+	{ 0x40022, 0x83, },
+	{ 0x40042, 0x51, },
+	{ 0x40062, 0x0, },
+	{ 0x40003, 0x811, },
+	{ 0x40023, 0x880, },
+	{ 0x40043, 0x0, },
+	{ 0x40063, 0x0, },
+	{ 0x40004, 0x720, },
+	{ 0x40024, 0xf, },
+	{ 0x40044, 0x1740, },
+	{ 0x40064, 0x0, },
+	{ 0x40005, 0x16, },
+	{ 0x40025, 0x83, },
+	{ 0x40045, 0x4b, },
+	{ 0x40065, 0x0, },
+	{ 0x40006, 0x716, },
+	{ 0x40026, 0xf, },
+	{ 0x40046, 0x2001, },
+	{ 0x40066, 0x0, },
+	{ 0x40007, 0x716, },
+	{ 0x40027, 0xf, },
+	{ 0x40047, 0x2800, },
+	{ 0x40067, 0x0, },
+	{ 0x40008, 0x716, },
+	{ 0x40028, 0xf, },
+	{ 0x40048, 0xf00, },
+	{ 0x40068, 0x0, },
+	{ 0x40009, 0x720, },
+	{ 0x40029, 0xf, },
+	{ 0x40049, 0x1400, },
+	{ 0x40069, 0x0, },
+	{ 0x4000a, 0xe08, },
+	{ 0x4002a, 0xc15, },
+	{ 0x4004a, 0x0, },
+	{ 0x4006a, 0x0, },
+	{ 0x4000b, 0x625, },
+	{ 0x4002b, 0x15, },
+	{ 0x4004b, 0x0, },
+	{ 0x4006b, 0x0, },
+	{ 0x4000c, 0x4028, },
+	{ 0x4002c, 0x80, },
+	{ 0x4004c, 0x0, },
+	{ 0x4006c, 0x0, },
+	{ 0x4000d, 0xe08, },
+	{ 0x4002d, 0xc1a, },
+	{ 0x4004d, 0x0, },
+	{ 0x4006d, 0x0, },
+	{ 0x4000e, 0x625, },
+	{ 0x4002e, 0x1a, },
+	{ 0x4004e, 0x0, },
+	{ 0x4006e, 0x0, },
+	{ 0x4000f, 0x4040, },
+	{ 0x4002f, 0x80, },
+	{ 0x4004f, 0x0, },
+	{ 0x4006f, 0x0, },
+	{ 0x40010, 0x2604, },
+	{ 0x40030, 0x15, },
+	{ 0x40050, 0x0, },
+	{ 0x40070, 0x0, },
+	{ 0x40011, 0x708, },
+	{ 0x40031, 0x5, },
+	{ 0x40051, 0x0, },
+	{ 0x40071, 0x2002, },
+	{ 0x40012, 0x8, },
+	{ 0x40032, 0x80, },
+	{ 0x40052, 0x0, },
+	{ 0x40072, 0x0, },
+	{ 0x40013, 0x2604, },
+	{ 0x40033, 0x1a, },
+	{ 0x40053, 0x0, },
+	{ 0x40073, 0x0, },
+	{ 0x40014, 0x708, },
+	{ 0x40034, 0xa, },
+	{ 0x40054, 0x0, },
+	{ 0x40074, 0x2002, },
+	{ 0x40015, 0x4040, },
+	{ 0x40035, 0x80, },
+	{ 0x40055, 0x0, },
+	{ 0x40075, 0x0, },
+	{ 0x40016, 0x60a, },
+	{ 0x40036, 0x15, },
+	{ 0x40056, 0x1200, },
+	{ 0x40076, 0x0, },
+	{ 0x40017, 0x61a, },
+	{ 0x40037, 0x15, },
+	{ 0x40057, 0x1300, },
+	{ 0x40077, 0x0, },
+	{ 0x40018, 0x60a, },
+	{ 0x40038, 0x1a, },
+	{ 0x40058, 0x1200, },
+	{ 0x40078, 0x0, },
+	{ 0x40019, 0x642, },
+	{ 0x40039, 0x1a, },
+	{ 0x40059, 0x1300, },
+	{ 0x40079, 0x0, },
+	{ 0x4001a, 0x4808, },
+	{ 0x4003a, 0x880, },
+	{ 0x4005a, 0x0, },
+	{ 0x4007a, 0x0, },
+	{ 0x900aa, 0x0, },
+	{ 0x900ab, 0x790, },
+	{ 0x900ac, 0x11a, },
+	{ 0x900ad, 0x8, },
+	{ 0x900ae, 0x7aa, },
+	{ 0x900af, 0x2a, },
+	{ 0x900b0, 0x10, },
+	{ 0x900b1, 0x7b2, },
+	{ 0x900b2, 0x2a, },
+	{ 0x900b3, 0x0, },
+	{ 0x900b4, 0x7c8, },
+	{ 0x900b5, 0x109, },
+	{ 0x900b6, 0x10, },
+	{ 0x900b7, 0x10, },
+	{ 0x900b8, 0x109, },
+	{ 0x900b9, 0x10, },
+	{ 0x900ba, 0x2a8, },
+	{ 0x900bb, 0x129, },
+	{ 0x900bc, 0x8, },
+	{ 0x900bd, 0x370, },
+	{ 0x900be, 0x129, },
+	{ 0x900bf, 0xa, },
+	{ 0x900c0, 0x3c8, },
+	{ 0x900c1, 0x1a9, },
+	{ 0x900c2, 0xc, },
+	{ 0x900c3, 0x408, },
+	{ 0x900c4, 0x199, },
+	{ 0x900c5, 0x14, },
+	{ 0x900c6, 0x790, },
+	{ 0x900c7, 0x11a, },
+	{ 0x900c8, 0x8, },
+	{ 0x900c9, 0x4, },
+	{ 0x900ca, 0x18, },
+	{ 0x900cb, 0xe, },
+	{ 0x900cc, 0x408, },
+	{ 0x900cd, 0x199, },
+	{ 0x900ce, 0x8, },
+	{ 0x900cf, 0x8568, },
+	{ 0x900d0, 0x108, },
+	{ 0x900d1, 0x18, },
+	{ 0x900d2, 0x790, },
+	{ 0x900d3, 0x16a, },
+	{ 0x900d4, 0x8, },
+	{ 0x900d5, 0x1d8, },
+	{ 0x900d6, 0x169, },
+	{ 0x900d7, 0x10, },
+	{ 0x900d8, 0x8558, },
+	{ 0x900d9, 0x168, },
+	{ 0x900da, 0x1ff8, },
+	{ 0x900db, 0x85a8, },
+	{ 0x900dc, 0x1e8, },
+	{ 0x900dd, 0x50, },
+	{ 0x900de, 0x798, },
+	{ 0x900df, 0x16a, },
+	{ 0x900e0, 0x60, },
+	{ 0x900e1, 0x7a0, },
+	{ 0x900e2, 0x16a, },
+	{ 0x900e3, 0x8, },
+	{ 0x900e4, 0x8310, },
+	{ 0x900e5, 0x168, },
+	{ 0x900e6, 0x8, },
+	{ 0x900e7, 0xa310, },
+	{ 0x900e8, 0x168, },
+	{ 0x900e9, 0xa, },
+	{ 0x900ea, 0x408, },
+	{ 0x900eb, 0x169, },
+	{ 0x900ec, 0x6e, },
+	{ 0x900ed, 0x0, },
+	{ 0x900ee, 0x68, },
+	{ 0x900ef, 0x0, },
+	{ 0x900f0, 0x408, },
+	{ 0x900f1, 0x169, },
+	{ 0x900f2, 0x0, },
+	{ 0x900f3, 0x8310, },
+	{ 0x900f4, 0x168, },
+	{ 0x900f5, 0x0, },
+	{ 0x900f6, 0xa310, },
+	{ 0x900f7, 0x168, },
+	{ 0x900f8, 0x1ff8, },
+	{ 0x900f9, 0x85a8, },
+	{ 0x900fa, 0x1e8, },
+	{ 0x900fb, 0x68, },
+	{ 0x900fc, 0x798, },
+	{ 0x900fd, 0x16a, },
+	{ 0x900fe, 0x78, },
+	{ 0x900ff, 0x7a0, },
+	{ 0x90100, 0x16a, },
+	{ 0x90101, 0x68, },
+	{ 0x90102, 0x790, },
+	{ 0x90103, 0x16a, },
+	{ 0x90104, 0x8, },
+	{ 0x90105, 0x8b10, },
+	{ 0x90106, 0x168, },
+	{ 0x90107, 0x8, },
+	{ 0x90108, 0xab10, },
+	{ 0x90109, 0x168, },
+	{ 0x9010a, 0xa, },
+	{ 0x9010b, 0x408, },
+	{ 0x9010c, 0x169, },
+	{ 0x9010d, 0x58, },
+	{ 0x9010e, 0x0, },
+	{ 0x9010f, 0x68, },
+	{ 0x90110, 0x0, },
+	{ 0x90111, 0x408, },
+	{ 0x90112, 0x169, },
+	{ 0x90113, 0x0, },
+	{ 0x90114, 0x8b10, },
+	{ 0x90115, 0x168, },
+	{ 0x90116, 0x1, },
+	{ 0x90117, 0xab10, },
+	{ 0x90118, 0x168, },
+	{ 0x90119, 0x0, },
+	{ 0x9011a, 0x1d8, },
+	{ 0x9011b, 0x169, },
+	{ 0x9011c, 0x80, },
+	{ 0x9011d, 0x790, },
+	{ 0x9011e, 0x16a, },
+	{ 0x9011f, 0x18, },
+	{ 0x90120, 0x7aa, },
+	{ 0x90121, 0x6a, },
+	{ 0x90122, 0xa, },
+	{ 0x90123, 0x0, },
+	{ 0x90124, 0x1e9, },
+	{ 0x90125, 0x8, },
+	{ 0x90126, 0x8080, },
+	{ 0x90127, 0x108, },
+	{ 0x90128, 0xf, },
+	{ 0x90129, 0x408, },
+	{ 0x9012a, 0x169, },
+	{ 0x9012b, 0xc, },
+	{ 0x9012c, 0x0, },
+	{ 0x9012d, 0x68, },
+	{ 0x9012e, 0x9, },
+	{ 0x9012f, 0x0, },
+	{ 0x90130, 0x1a9, },
+	{ 0x90131, 0x0, },
+	{ 0x90132, 0x408, },
+	{ 0x90133, 0x169, },
+	{ 0x90134, 0x0, },
+	{ 0x90135, 0x8080, },
+	{ 0x90136, 0x108, },
+	{ 0x90137, 0x8, },
+	{ 0x90138, 0x7aa, },
+	{ 0x90139, 0x6a, },
+	{ 0x9013a, 0x0, },
+	{ 0x9013b, 0x8568, },
+	{ 0x9013c, 0x108, },
+	{ 0x9013d, 0xb7, },
+	{ 0x9013e, 0x790, },
+	{ 0x9013f, 0x16a, },
+	{ 0x90140, 0x1f, },
+	{ 0x90141, 0x0, },
+	{ 0x90142, 0x68, },
+	{ 0x90143, 0x8, },
+	{ 0x90144, 0x8558, },
+	{ 0x90145, 0x168, },
+	{ 0x90146, 0xf, },
+	{ 0x90147, 0x408, },
+	{ 0x90148, 0x169, },
+	{ 0x90149, 0xd, },
+	{ 0x9014a, 0x0, },
+	{ 0x9014b, 0x68, },
+	{ 0x9014c, 0x0, },
+	{ 0x9014d, 0x408, },
+	{ 0x9014e, 0x169, },
+	{ 0x9014f, 0x0, },
+	{ 0x90150, 0x8558, },
+	{ 0x90151, 0x168, },
+	{ 0x90152, 0x8, },
+	{ 0x90153, 0x3c8, },
+	{ 0x90154, 0x1a9, },
+	{ 0x90155, 0x3, },
+	{ 0x90156, 0x370, },
+	{ 0x90157, 0x129, },
+	{ 0x90158, 0x20, },
+	{ 0x90159, 0x2aa, },
+	{ 0x9015a, 0x9, },
+	{ 0x9015b, 0x8, },
+	{ 0x9015c, 0xe8, },
+	{ 0x9015d, 0x109, },
+	{ 0x9015e, 0x0, },
+	{ 0x9015f, 0x8140, },
+	{ 0x90160, 0x10c, },
+	{ 0x90161, 0x10, },
+	{ 0x90162, 0x8138, },
+	{ 0x90163, 0x104, },
+	{ 0x90164, 0x8, },
+	{ 0x90165, 0x448, },
+	{ 0x90166, 0x109, },
+	{ 0x90167, 0xf, },
+	{ 0x90168, 0x7c0, },
+	{ 0x90169, 0x109, },
+	{ 0x9016a, 0x0, },
+	{ 0x9016b, 0xe8, },
+	{ 0x9016c, 0x109, },
+	{ 0x9016d, 0x47, },
+	{ 0x9016e, 0x630, },
+	{ 0x9016f, 0x109, },
+	{ 0x90170, 0x8, },
+	{ 0x90171, 0x618, },
+	{ 0x90172, 0x109, },
+	{ 0x90173, 0x8, },
+	{ 0x90174, 0xe0, },
+	{ 0x90175, 0x109, },
+	{ 0x90176, 0x0, },
+	{ 0x90177, 0x7c8, },
+	{ 0x90178, 0x109, },
+	{ 0x90179, 0x8, },
+	{ 0x9017a, 0x8140, },
+	{ 0x9017b, 0x10c, },
+	{ 0x9017c, 0x0, },
+	{ 0x9017d, 0x478, },
+	{ 0x9017e, 0x109, },
+	{ 0x9017f, 0x0, },
+	{ 0x90180, 0x1, },
+	{ 0x90181, 0x8, },
+	{ 0x90182, 0x8, },
+	{ 0x90183, 0x4, },
+	{ 0x90184, 0x0, },
+	{ 0x90006, 0x8, },
+	{ 0x90007, 0x7c8, },
+	{ 0x90008, 0x109, },
+	{ 0x90009, 0x0, },
+	{ 0x9000a, 0x400, },
+	{ 0x9000b, 0x106, },
+	{ 0xd00e7, 0x400, },
+	{ 0x90017, 0x0, },
+	{ 0x9001f, 0x2b, },
+	{ 0x90026, 0x69, },
+	{ 0x400d0, 0x0, },
+	{ 0x400d1, 0x101, },
+	{ 0x400d2, 0x105, },
+	{ 0x400d3, 0x107, },
+	{ 0x400d4, 0x10f, },
+	{ 0x400d5, 0x202, },
+	{ 0x400d6, 0x20a, },
+	{ 0x400d7, 0x20b, },
+	{ 0x2003a, 0x2, },
+	{ 0x200be, 0x3, },
+	{ 0x2000b, 0x75, },
+	{ 0x2000c, 0xe9, },
+	{ 0x2000d, 0x91c, },
+	{ 0x2000e, 0x2c, },
+	{ 0x9000c, 0x0, },
+	{ 0x9000d, 0x173, },
+	{ 0x9000e, 0x60, },
+	{ 0x9000f, 0x6110, },
+	{ 0x90010, 0x2152, },
+	{ 0x90011, 0xdfbd, },
+	{ 0x90012, 0x2060, },
+	{ 0x90013, 0x6152, },
+	{ 0x20010, 0x5a, },
+	{ 0x20011, 0x3, },
+	{ 0x40080, 0xe0, },
+	{ 0x40081, 0x12, },
+	{ 0x40082, 0xe0, },
+	{ 0x40083, 0x12, },
+	{ 0x40084, 0xe0, },
+	{ 0x40085, 0x12, },
+	{ 0x400fd, 0xf, },
+	{ 0x400f1, 0xe, },
+	{ 0x10011, 0x1, },
+	{ 0x10012, 0x1, },
+	{ 0x10013, 0x180, },
+	{ 0x10018, 0x1, },
+	{ 0x10002, 0x6209, },
+	{ 0x100b2, 0x1, },
+	{ 0x101b4, 0x1, },
+	{ 0x102b4, 0x1, },
+	{ 0x103b4, 0x1, },
+	{ 0x104b4, 0x1, },
+	{ 0x105b4, 0x1, },
+	{ 0x106b4, 0x1, },
+	{ 0x107b4, 0x1, },
+	{ 0x108b4, 0x1, },
+	{ 0x11011, 0x1, },
+	{ 0x11012, 0x1, },
+	{ 0x11013, 0x180, },
+	{ 0x11018, 0x1, },
+	{ 0x11002, 0x6209, },
+	{ 0x110b2, 0x1, },
+	{ 0x111b4, 0x1, },
+	{ 0x112b4, 0x1, },
+	{ 0x113b4, 0x1, },
+	{ 0x114b4, 0x1, },
+	{ 0x115b4, 0x1, },
+	{ 0x116b4, 0x1, },
+	{ 0x117b4, 0x1, },
+	{ 0x118b4, 0x1, },
+	{ 0x20089, 0x1, },
+	{ 0x20088, 0x19, },
+	{ 0xc0080, 0x0, },
+	{ 0xd0000, 0x1, },
+};
+
+struct dram_fsp_msg ddr_dram_fsp_msg[] = {
+	{
+		/* P0 3733mts 1D */
+		.drate = 3733,
+		.fw_type = FW_1D_IMAGE,
+		.fsp_cfg = ddr_fsp0_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_cfg),
+	},
+	{
+		/* P0 3733mts 2D */
+		.drate = 3733,
+		.fw_type = FW_2D_IMAGE,
+		.fsp_cfg = ddr_fsp0_2d_cfg,
+		.fsp_cfg_num = ARRAY_SIZE(ddr_fsp0_2d_cfg),
+	},
+};
+
+/* ddr timing config params */
+struct dram_timing_info dram_timing = {
+	.ddrc_cfg = ddr_ddrc_cfg,
+	.ddrc_cfg_num = ARRAY_SIZE(ddr_ddrc_cfg),
+	.ddrphy_cfg = ddr_ddrphy_cfg,
+	.ddrphy_cfg_num = ARRAY_SIZE(ddr_ddrphy_cfg),
+	.fsp_msg = ddr_dram_fsp_msg,
+	.fsp_msg_num = ARRAY_SIZE(ddr_dram_fsp_msg),
+	.ddrphy_trained_csr = ddr_ddrphy_trained_csr,
+	.ddrphy_trained_csr_num = ARRAY_SIZE(ddr_ddrphy_trained_csr),
+	.ddrphy_pie = ddr_phy_pie,
+	.ddrphy_pie_num = ARRAY_SIZE(ddr_phy_pie),
+	.fsp_table = { 3733, },
+	.fsp_cfg = ddr_dram_fsp_cfg,
+	.fsp_cfg_num = ARRAY_SIZE(ddr_dram_fsp_cfg),
+};
Index: u-boot-tx93-mb7/board/karo/imx93/qs93-5210-qsbase2.env
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/qs93-5210-qsbase2.env
@@ -0,0 +1,34 @@
+append_bootargs=quiet
+autoload=no
+baseboard=qsbase2
+boot_mode=mmc
+bootargs_mmc=run default_bootargs; setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs} rootwait ${append_bootargs}
+bootargs_nfs=run default_bootargs; setenv bootargs ${bootargs} root=/dev/nfs nfsroot=${nfs_server}:${nfsroot},nolock,v3 ip=dhcp ${append_bootargs}
+bootcmd=run bootcmd_${boot_mode} bootm_cmd
+bootcmd_mmc=run loadkernel bootargs_mmc
+bootcmd_nfs=run loadkernel bootargs_nfs
+bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}
+console=ttyLP0,115200 earlycon
+debug_overlays=yes
+default_bootargs=setenv bootargs console=${console} panic=-1 ro
+dyndbg=dyndbg=\\"-p\\"
+emmc_boot_ack=1
+emmc_boot_part=1
+emmc_dev=0
+fastboot_dev=mmc
+fdtaddr=83000000
+fdtsave=save mmc ${mmcdev} ${fdt_addr} /${fdt_file} ${fdt_size}
+fdt_addr=83000000
+fdt_file=imx93-qs93-5210.dtb
+fdt_high=a3000000
+initrd_addr=-
+initrd_high=a3800000
+linux_image=Image
+loadaddr=80400000
+loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
+loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${linux_image}
+mmcdev=0
+mmcpart=1
+soc_prefix=imx93
+soc_family=imx93
+otg_mode=peripheral
Index: u-boot-tx93-mb7/board/karo/imx93/qs93-5210-qsbase93.env
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/qs93-5210-qsbase93.env
@@ -0,0 +1,32 @@
+append_bootargs=quiet
+autoload=no
+baseboard=qsbase93
+boot_mode=mmc
+bootargs_mmc=run default_bootargs; setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs} rootwait ${append_bootargs}
+bootargs_nfs=run default_bootargs; setenv bootargs ${bootargs} root=/dev/nfs nfsroot=${nfs_server}:${nfsroot},nolock,v3 ip=dhcp ${append_bootargs}
+bootcmd=run bootcmd_${boot_mode} bootm_cmd
+bootcmd_mmc=run loadkernel bootargs_mmc
+bootcmd_nfs=run loadkernel bootargs_nfs
+bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}
+console=ttyLP0,115200 earlycon
+debug_overlays=yes
+default_bootargs=setenv bootargs console=${console} panic=-1 ro
+dyndbg=dyndbg=\\"-p\\"
+emmc_boot_ack=1
+emmc_boot_part=1
+emmc_dev=0
+fastboot_dev=mmc
+fdtaddr=83000000
+fdtsave=save mmc ${mmcdev} ${fdt_addr} /${fdt_file} ${fdt_size}
+fdt_addr=83000000
+fdt_file=imx93-qs93-5210.dtb
+fdt_high=a3000000
+initrd_addr=-
+initrd_high=a3800000
+linux_image=Image
+loadaddr=80400000
+loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
+loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${linux_image}
+mmcdev=0
+mmcpart=1
+otg_mode=peripheral
Index: u-boot-tx93-mb7/board/karo/imx93/qs93-5210.env
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/qs93-5210.env
@@ -0,0 +1,34 @@
+append_bootargs=quiet
+autoload=no
+baseboard=
+boot_mode=mmc
+bootargs_mmc=run default_bootargs; setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs} rootwait ${append_bootargs}
+bootargs_nfs=run default_bootargs; setenv bootargs ${bootargs} root=/dev/nfs nfsroot=${nfs_server}:${nfsroot},nolock,v3 ip=dhcp ${append_bootargs}
+bootcmd=run bootcmd_${boot_mode} bootm_cmd
+bootcmd_mmc=run loadkernel bootargs_mmc
+bootcmd_nfs=run loadkernel bootargs_nfs
+bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}
+console=ttyLP0,115200 earlycon
+debug_overlays=yes
+default_bootargs=setenv bootargs console=${console} panic=-1 ro
+dyndbg=dyndbg=\\"-p\\"
+emmc_boot_ack=1
+emmc_boot_part=1
+emmc_dev=0
+fastboot_dev=mmc
+fdtaddr=83000000
+fdtsave=save mmc ${mmcdev} ${fdt_addr} /${fdt_file} ${fdt_size}
+fdt_addr=83000000
+fdt_file=imx93-qs93-5210.dtb
+fdt_high=a3000000
+initrd_addr=-
+initrd_high=a3800000
+linux_image=Image
+loadaddr=80400000
+loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
+loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${linux_image}
+mmcdev=0
+mmcpart=1
+soc_prefix=imx93
+soc_family=imx93
+otg_mode=peripheral
Index: u-boot-tx93-mb7/board/karo/imx93/spl.c
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/spl.c
@@ -0,0 +1,240 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ * based on: board/freescale/imx93_evk/spl.c
+ *           Copyright 2022 NXP
+ */
+
+#undef DEBUG
+#define DEBUG
+
+#include <common.h>
+#include <command.h>
+#include <cpu_func.h>
+#include <hang.h>
+#include <image.h>
+#include <init.h>
+#include <log.h>
+#include <spl.h>
+#include <asm/global_data.h>
+#include <asm/io.h>
+#include <asm/arch/imx93_pins.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/mach-imx/boot_mode.h>
+#include <asm/mach-imx/mxc_i2c.h>
+#include <asm/arch-mx7ulp/gpio.h>
+#include <asm/mach-imx/syscounter.h>
+#include <asm/mach-imx/s400_api.h>
+#include <dm/uclass.h>
+#include <dm/device.h>
+#include <dm/uclass-internal.h>
+#include <dm/device-internal.h>
+#include <linux/delay.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/ccm_regs.h>
+#include <asm/arch/ddr.h>
+#include <power/pmic.h>
+#include <power/pca9450.h>
+#include <asm/arch/trdc.h>
+
+#include <hexdump.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+void __noreturn jump_to_image_no_args(struct spl_image_info *spl_image)
+{
+	typedef void __noreturn (*image_entry_noargs_t)(void);
+	u32 __maybe_unused offset;
+	const void *fdt_addr = gd->fdt_blob;
+
+	image_entry_noargs_t image_entry =
+		(image_entry_noargs_t)(unsigned long)spl_image->entry_point;
+
+	debug("image entry point: 0x%p\n", image_entry);
+debug("fdtaddr=%p flags=%08x\n", fdt_addr, spl_image->flags);
+debug("BL31: %08lx..%08lx\n",
+      spl_image->entry_point, spl_image->entry_point + spl_image->size - 1);
+
+#if CONFIG_IS_ENABLED(IMX_HAB)
+	/*
+	 * HAB looks for the CSF at the end of the authenticated
+	 * data, therefore we need to subtract the size of the
+	 * CSF from the actual filesize
+	 */
+	offset = spl_image->size - CONFIG_CSF_SIZE;
+	if (!imx_hab_authenticate_image(spl_image->load_addr,
+					offset + IVT_SIZE +
+					CSF_PAD_SIZE, offset)) {
+		asm("\tmov x1, %0\n"
+		    :: "r"(fdt_addr) : "x0", "x1", "x2", "x3");
+		image_entry();
+	} else {
+		panic("spl: ERROR: failed to authenticate bootloader image\n");
+	}
+#endif
+	asm("\tmov x1, %0\n"
+	    :: "r"(fdt_addr) : "x0", "x1", "x2", "x3");
+	image_entry();
+}
+
+int spl_board_boot_device(enum boot_device boot_dev_spl)
+{
+	return BOOT_DEVICE_BOOTROM;
+}
+
+void spl_board_init(void)
+{
+	puts("Normal Boot\n");
+}
+
+void spl_dram_init(void)
+{
+	int loops = 0;
+	int max_loops = 5;
+
+	while (ddr_init(&dram_timing)) {
+		if (loops == 0)
+			printf("Retrying...\n");
+		if (loops < max_loops)
+			loops++;
+		else
+			panic("DDR Training FAILED\n");
+	}
+	if (loops)
+		printf("DDR Training OK after %u loops\n", loops);
+}
+
+static inline void __pmic_reg_write(struct udevice *dev, unsigned int reg,
+				    u8 val, const char *fn, int ln)
+{
+	int ret;
+
+	ret = pmic_reg_read(dev, reg);
+	if (ret < 0) {
+		printf("%s@%d: Failed to read pmic reg %02x: %d\n", fn, ln, reg, ret);
+		return;
+	}
+
+	if (ret == val) {
+		debug("%s@%d: Leaving pmic reg %02x at %02x\n", fn, ln, reg, ret);
+		return;
+	}
+	debug("%s@%d: Changing pmic reg %02x from %02x to %02x\n", fn, ln, reg, ret, val);
+
+	ret = pmic_reg_write(dev, reg, val);
+	if (ret == 0)
+		debug("%s@%d: wrote %02x to pmic reg %02x\n", fn, ln, val, reg);
+	else
+		printf("%s@%d: failed to write %02x to pmic reg %02x: %d\n", fn, ln,
+		       val, reg, ret);
+}
+
+#define pmic_reg_write(d, r, v)	__pmic_reg_write(d, r, v, __func__, __LINE__)
+
+#if CONFIG_IS_ENABLED(DM_PMIC_PCA9450)
+int power_init_board(void)
+{
+	struct udevice *dev;
+	int ret;
+
+	ret = pmic_get("pmic@25", &dev);
+	if (ret == -ENODEV) {
+		puts("No pca9450@25\n");
+		return 0;
+	}
+	if (ret != 0)
+		return ret;
+
+	if (IS_ENABLED(CONFIG_IMX9_LOW_DRIVE_MODE)) {
+		/* 0.75v for Low drive mode */
+		pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS0, 0x0c);
+		pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS1, 0x0c);
+		pmic_reg_write(dev, PCA9450_BUCK3OUT_DVS0, 0x0c);
+		pmic_reg_write(dev, PCA9450_BUCK3OUT_DVS1, 0x0c);
+	} else {
+		/* 0.9v for Overdrive mode */
+		pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS0, 0x18);
+		pmic_reg_write(dev, PCA9450_BUCK1OUT_DVS1, 0x18);
+		pmic_reg_write(dev, PCA9450_BUCK3OUT_DVS0, 0x18);
+		pmic_reg_write(dev, PCA9450_BUCK3OUT_DVS1, 0x18);
+	}
+	pmic_reg_write(dev, PCA9450_BUCK4OUT, 0x6c);
+	pmic_reg_write(dev, PCA9450_BUCK5OUT, 0x30);
+	pmic_reg_write(dev, PCA9450_BUCK6OUT, 0x14);
+
+	/* BUCKxOUT_DVS0/1 control BUCK123 output */
+	pmic_reg_write(dev, PCA9450_BUCK123_DVS, 0x29);
+
+	/* enable DVS control through PMIC_STBY_REQ */
+	pmic_reg_write(dev, PCA9450_BUCK1CTRL, 0x59);
+	pmic_reg_write(dev, PCA9450_BUCK3CTRL, 0x59);
+	/* disable BUCK2 and activate discharge resistor */
+	pmic_reg_write(dev, PCA9450_BUCK2CTRL, 0x48);
+	pmic_reg_write(dev, PCA9450_BUCK4CTRL, 0x09);
+	pmic_reg_write(dev, PCA9450_BUCK5CTRL, 0x09);
+	pmic_reg_write(dev, PCA9450_BUCK6CTRL, 0x09);
+
+	pmic_reg_write(dev, PCA9450_LDO_AD_CTRL, 0xf8);
+	pmic_reg_write(dev, PCA9450_LDO1CTRL, 0xc2);
+	pmic_reg_write(dev, PCA9450_LDO2CTRL, 0x00);
+	pmic_reg_write(dev, PCA9450_LDO3CTRL, 0x0a);
+	pmic_reg_write(dev, PCA9450_LDO4CTRL, 0x40);
+	pmic_reg_write(dev, PCA9450_LDO5CTRL_L, 0x0f);
+	pmic_reg_write(dev, PCA9450_LDO5CTRL_H, 0x00);
+
+	/* disable I2C Level Translator */
+	pmic_reg_write(dev, PCA9450_CONFIG2, 0x0);
+
+	/* set WDOG_B_CFG to cold reset */
+	pmic_reg_write(dev, PCA9450_RESET_CTRL, 0xA1);
+	return 0;
+}
+#endif
+
+void board_init_f(ulong dummy)
+{
+	int ret;
+
+	/* Clear the BSS. */
+	memset(__bss_start, 0, __bss_end - __bss_start);
+
+	timer_init();
+
+	arch_cpu_init();
+
+	board_early_init_f();
+
+	spl_early_init();
+
+	preloader_console_init();
+
+	ret = arch_cpu_init_dm();
+	if (ret) {
+		printf("Fail to init Sentinel API\n");
+	} else {
+		printf("SOC: 0x%x\n", gd->arch.soc_rev);
+		printf("LC: 0x%x\n", gd->arch.lifecycle);
+	}
+
+	power_init_board();
+
+	if (!IS_ENABLED(CONFIG_IMX9_LOW_DRIVE_MODE))
+		set_arm_core_max_clk();
+
+	/* Init power of mix */
+	soc_power_init();
+
+	/* Setup TRDC for DDR access */
+	trdc_init();
+
+	/* DDR initialization */
+	spl_dram_init();
+
+	/* Put M33 into CPUWAIT for following kick */
+	ret = m33_prepare();
+	if (!ret)
+		printf("M33 prepare ok\n");
+
+	board_init_r(NULL, 0);
+}
Index: u-boot-tx93-mb7/board/karo/imx93/tx93-5210-lvds-mb.env
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/tx93-5210-lvds-mb.env
@@ -0,0 +1,31 @@
+append_bootargs=quiet
+autoload=no
+baseboard=lvds-mb
+boot_mode=mmc
+bootargs_mmc=run default_bootargs; setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs} rootwait ${append_bootargs}
+bootargs_nfs=run default_bootargs; setenv bootargs ${bootargs} root=/dev/nfs nfsroot=${nfs_server}:${nfsroot},nolock,v3 ip=dhcp ${append_bootargs}
+bootcmd=run bootcmd_${boot_mode} bootm_cmd
+bootcmd_mmc=run loadkernel bootargs_mmc
+bootcmd_nfs=run loadkernel bootargs_nfs
+bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}
+console=ttyLP0,115200 earlycon
+default_bootargs=setenv bootargs console=${console} panic=-1 ro
+dyndbg=dyndbg=\\"-p\\"
+emmc_boot_ack=1
+emmc_boot_part=1
+emmc_dev=0
+fastboot_dev=mmc
+fdtaddr=83000000
+fdtsave=save mmc ${mmcdev} ${fdt_addr} /${fdt_file} ${fdt_size}
+fdt_addr=83000000
+fdt_file=imx93-tx93-5210.dtb
+fdt_high=a3000000
+initrd_addr=-
+initrd_high=a3800000
+linux_image=Image
+loadaddr=80400000
+loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
+loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${linux_image}
+mmcdev=0
+mmcpart=1
+otg_mode=peripheral
Index: u-boot-tx93-mb7/board/karo/imx93/tx93-5210-mb7.env
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/tx93-5210-mb7.env
@@ -0,0 +1,31 @@
+append_bootargs=quiet
+autoload=no
+baseboard=mb7
+boot_mode=mmc
+bootargs_mmc=run default_bootargs; setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs} rootwait ${append_bootargs}
+bootargs_nfs=run default_bootargs; setenv bootargs ${bootargs} root=/dev/nfs nfsroot=${nfs_server}:${nfsroot},nolock,v3 ip=dhcp ${append_bootargs}
+bootcmd=run bootcmd_${boot_mode} bootm_cmd
+bootcmd_mmc=run loadkernel bootargs_mmc
+bootcmd_nfs=run loadkernel bootargs_nfs
+bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}
+console=ttyLP0,115200 earlycon
+default_bootargs=setenv bootargs console=${console} panic=-1 ro
+dyndbg=dyndbg=\\"-p\\"
+emmc_boot_ack=1
+emmc_boot_part=1
+emmc_dev=0
+fastboot_dev=mmc
+fdtaddr=83000000
+fdtsave=save mmc ${mmcdev} ${fdt_addr} /${fdt_file} ${fdt_size}
+fdt_addr=83000000
+fdt_file=imx93-tx93-5210.dtb
+fdt_high=a3000000
+initrd_addr=-
+initrd_high=a3800000
+linux_image=Image
+loadaddr=80400000
+loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
+loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${linux_image}
+mmcdev=0
+mmcpart=1
+otg_mode=peripheral
Index: u-boot-tx93-mb7/board/karo/imx93/tx93-5210.env
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/tx93-5210.env
@@ -0,0 +1,31 @@
+append_bootargs=quiet
+autoload=no
+baseboard=
+boot_mode=mmc
+bootargs_mmc=run default_bootargs; setenv bootargs ${bootargs} root=PARTUUID=${uuid_rootfs} rootwait ${append_bootargs}
+bootargs_nfs=run default_bootargs; setenv bootargs ${bootargs} root=/dev/nfs nfsroot=${nfs_server}:${nfsroot},nolock,v3 ip=dhcp ${append_bootargs}
+bootcmd=run bootcmd_${boot_mode} bootm_cmd
+bootcmd_mmc=run loadkernel bootargs_mmc
+bootcmd_nfs=run loadkernel bootargs_nfs
+bootm_cmd=booti ${loadaddr} ${initrd_addr} ${fdt_addr}
+console=ttyLP0,115200 earlycon
+default_bootargs=setenv bootargs console=${console} panic=-1 ro
+dyndbg=dyndbg=\\"-p\\"
+emmc_boot_ack=1
+emmc_boot_part=1
+emmc_dev=0
+fastboot_dev=mmc
+fdtaddr=83000000
+fdtsave=save mmc ${mmcdev} ${fdt_addr} /${fdt_file} ${fdt_size}
+fdt_addr=83000000
+fdt_file=imx93-tx93-5210.dtb
+fdt_high=a3000000
+initrd_addr=-
+initrd_high=a3800000
+linux_image=Image
+loadaddr=80400000
+loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}
+loadkernel=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${linux_image}
+mmcdev=0
+mmcpart=1
+otg_mode=peripheral
Index: u-boot-tx93-mb7/board/karo/imx93/tx93.c
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/board/karo/imx93/tx93.c
@@ -0,0 +1,149 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#include <common.h>
+#include <dwc3-uboot.h>
+#include <env.h>
+#include <env_internal.h>
+#include <fb_fsl.h>
+#include <init.h>
+#include <miiphy.h>
+#include <netdev.h>
+#include <usb.h>
+#include <asm/global_data.h>
+#include <asm/arch-imx9/ccm_regs.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/arch-imx9/imx93_pins.h>
+#include <asm/arch/clock.h>
+#include <power/pmic.h>
+#include <dm/device.h>
+#include <dm/device_compat.h>
+#include <dm/uclass.h>
+
+#include "../common/karo.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define UART_PAD_CTRL	(PAD_CTL_DSE(6) | PAD_CTL_FSEL2)
+#define WDOG_PAD_CTRL	(PAD_CTL_DSE(6) | PAD_CTL_ODE | PAD_CTL_PUE | PAD_CTL_PE)
+
+static const iomux_v3_cfg_t uart_pads[] = {
+	MX93_PAD_UART1_RXD__LPUART1_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX93_PAD_UART1_TXD__LPUART1_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
+};
+
+int board_early_init_f(void)
+{
+	imx_iomux_v3_setup_multiple_pads(uart_pads, ARRAY_SIZE(uart_pads));
+
+	init_uart_clk(LPUART1_CLK_ROOT);
+
+	return 0;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+
+static void karo_set_ethaddr(int index)
+{
+	unsigned char env_mac[ETH_ALEN];
+	unsigned char fuse_mac[ETH_ALEN];
+
+	imx_get_mac_from_fuse(index, fuse_mac);
+	if (eth_env_get_enetaddr_by_index("eth", index, env_mac)) {
+		printf("MAC addr: %pM\n", env_mac);
+		if (is_valid_ethaddr(fuse_mac) && memcmp(env_mac, fuse_mac, sizeof(env_mac)))
+			printf("MAC from env differs from fuse settings: %pM\n", fuse_mac);
+	} else {
+		if (is_valid_ethaddr(fuse_mac)) {
+			printf("Using MAC addr from fuse\n");
+			printf("MAC addr: %pM\n", fuse_mac);
+			eth_env_set_enetaddr_by_index("eth", index, fuse_mac);
+		} else {
+			printf("No MAC addr found for eth%d\n", index);
+		}
+	}
+}
+
+int board_interface_eth_init(struct udevice *dev, phy_interface_t interface)
+{
+	int ret;
+	int mode;
+	struct blk_ctrl_wakeupmix_regs *bctrl =
+		(struct blk_ctrl_wakeupmix_regs *)BLK_CTRL_WAKEUPMIX_BASE_ADDR;
+	int index;
+
+	dev_dbg(dev, "%s@%d: interface='%s'\n", __func__, __LINE__,
+		phy_string_for_interface(interface));
+	ret = dev_read_alias_seq(dev, &index);
+	if (ret < 0) {
+		printf("Failed to get alias id for '%s': %d\n", dev->name, ret);
+	} else {
+		printf("dev '%s' alias ID=%d\n", dev->name, index);
+		karo_set_ethaddr(index);
+	}
+
+	if (!device_is_compatible(dev, "fsl,imx-eqos"))
+		return 0;
+
+	switch (interface) {
+	case PHY_INTERFACE_MODE_RMII:
+		/* set INTF as RMII */
+		mode = BCTRL_GPR_ENET_QOS_INTF_SEL_RMII;
+		set_clk_eqos(ENET_25MHZ);
+		break;
+	case PHY_INTERFACE_MODE_RGMII:
+	case PHY_INTERFACE_MODE_RGMII_ID:
+	case PHY_INTERFACE_MODE_RGMII_RXID:
+	case PHY_INTERFACE_MODE_RGMII_TXID:
+		/* set INTF as RGMII, enable RGMII TXC clock */
+		mode = BCTRL_GPR_ENET_QOS_INTF_SEL_RGMII;
+		break;
+	default:
+		dev_err(dev, "Invalid phy interface mode: '%s'\n",
+			phy_string_for_interface(interface));
+		return -EINVAL;
+	}
+	clrsetbits_le32(&bctrl->eqos_gpr,
+			BCTRL_GPR_ENET_QOS_INTF_MODE_MASK,
+			mode | BCTRL_GPR_ENET_QOS_CLK_GEN_EN);
+	return 0;
+}
+
+int board_init(void)
+{
+	debug("%s@%d\n", __func__, __LINE__);
+	return 0;
+}
+
+int board_late_init(void)
+{
+	int ret;
+	const char *fdt_file;
+
+	karo_env_cleanup();
+
+	ctrlc();
+	if (had_ctrlc()) {
+		env_set("safeboot", "1");
+		printf("<CTRL-C> detected; safeboot enabled\n");
+		clear_ctrlc();
+		return 0;
+	}
+	if (IS_ENABLED(CONFIG_KARO_UBOOT_MFG))
+		return 0;
+
+	fdt_file = env_get("fdt_file");
+	ret = karo_load_fdt(fdt_file ?: CONFIG_DEFAULT_FDT_FILE);
+	if (ret)
+		printf("Failed to load fdt file: '%s': %d\n",
+		       fdt_file ?: CONFIG_DEFAULT_FDT_FILE, ret);
+	return 0;
+}
Index: u-boot-tx93-mb7/configs/qs93-5210_defconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/configs/qs93-5210_defconfig
@@ -0,0 +1,151 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX9=y
+CONFIG_SYS_TEXT_BASE=0x80200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x18000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x80000000
+CONFIG_SYS_MEMTEST_END=0x90000000
+CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_OFFSET=0x1ff000
+CONFIG_IMX_CONFIG=""
+CONFIG_DM_GPIO=y
+CONFIG_DEFAULT_DEVICE_TREE="imx93-qs93-5210"
+CONFIG_SPL_TEXT_BASE=0x2049A000
+CONFIG_TARGET_TX93=y
+CONFIG_KARO_QS93_5210=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x88000000
+CONFIG_SPL_LOAD_IMX_CONTAINER=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_SYS_LOAD_ADDR=0x80400000
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_TIMESTAMP=y
+CONFIG_FIT_VERBOSE=y
+# CONFIG_LEGACY_IMAGE_FORMAT is not set
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_DEFAULT_FDT_FILE="imx93-qs93-5210.dtb"
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x1040
+CONFIG_SPL_I2C=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="QS93 U-Boot > "
+CONFIG_CMD_ERASEENV=y
+# CONFIG_CMD_CRC32 is not set
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_SNTP=y
+CONFIG_CMD_BMP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_CLS=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_HASH=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_DOS_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SPL_PARTITION_UUIDS=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_USE_DEFAULT_ENV_FILE=y
+CONFIG_DEFAULT_ENV_FILE="board/$(VENDOR)/$(BOARD)/qs93-5210.env"
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX93=y
+CONFIG_CLK_IMX93=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0x82800000
+CONFIG_FASTBOOT_BUF_SIZE=0x20000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_UUU_SUPPORT=y
+CONFIG_IMX_RGPIO2P=y
+CONFIG_DM_PCA953X=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+CONFIG_PHY_SMSC=y
+CONFIG_DM_ETH_PHY=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_IMX=y
+CONFIG_RGMII=y
+CONFIG_MIPI_DPHY_HELPERS=y
+CONFIG_PHY_IMX93_MIPI_DPHY=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX93=y
+CONFIG_POWER_DOMAIN=y
+CONFIG_IMX93_BLK_CTRL=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+# CONFIG_REQUIRE_SERIAL_CONSOLE is not set
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_USB=y
+# CONFIG_SPL_DM_USB is not set
+# CONFIG_DM_USB_GADGET is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1fc9
+CONFIG_USB_GADGET_PRODUCT_NUM=0x0152
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_VBUS_DRAW=500
+CONFIG_USB_PORT_AUTO=y
+CONFIG_DM_VIDEO=y
+CONFIG_VIDEO_LOGO=y
+CONFIG_VIDEO_IMX_LCDIFV3=y
+CONFIG_VIDEO_IMX93_PARALLEL_DISPLAY_FORMAT=y
+CONFIG_SPLASH_SCREEN=y
+CONFIG_SPLASH_SCREEN_ALIGN=y
+CONFIG_BMP_16BPP=y
+CONFIG_BMP_24BPP=y
+CONFIG_BMP_32BPP=y
+CONFIG_ULP_WATCHDOG=y
+# CONFIG_SPL_USE_TINY_PRINTF is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SPL_SHA1 is not set
+CONFIG_HEXDUMP=y
+CONFIG_SPL_HEXDUMP=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
Index: u-boot-tx93-mb7/configs/tx93-5210_defconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/configs/tx93-5210_defconfig
@@ -0,0 +1,147 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX9=y
+CONFIG_SYS_TEXT_BASE=0x80200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x18000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x80000000
+CONFIG_SYS_MEMTEST_END=0x90000000
+CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_OFFSET=0x1ff000
+CONFIG_IMX_CONFIG=""
+CONFIG_DM_GPIO=y
+CONFIG_DEFAULT_DEVICE_TREE="imx93-tx93-5210"
+CONFIG_SPL_TEXT_BASE=0x2049A000
+CONFIG_TARGET_TX93=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x88000000
+CONFIG_SPL_LOAD_IMX_CONTAINER=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_SYS_LOAD_ADDR=0x80400000
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_TIMESTAMP=y
+CONFIG_FIT_VERBOSE=y
+# CONFIG_LEGACY_IMAGE_FORMAT is not set
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_DEFAULT_FDT_FILE="imx93-tx93-5210.dtb"
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x1040
+CONFIG_SPL_I2C=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="TX93 U-Boot > "
+CONFIG_CMD_ERASEENV=y
+# CONFIG_CMD_CRC32 is not set
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_SNTP=y
+CONFIG_CMD_BMP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_CLS=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_HASH=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_DOS_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SPL_PARTITION_UUIDS=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_USE_DEFAULT_ENV_FILE=y
+CONFIG_DEFAULT_ENV_FILE="board/$(VENDOR)/$(BOARD)/tx93-5210.env"
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX93=y
+CONFIG_CLK_IMX93=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0x82800000
+CONFIG_FASTBOOT_BUF_SIZE=0x20000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_UUU_SUPPORT=y
+CONFIG_IMX_RGPIO2P=y
+CONFIG_DM_PCA953X=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PHY_SMSC=y
+CONFIG_DM_ETH_PHY=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_IMX=y
+CONFIG_RGMII=y
+CONFIG_MIPI_DPHY_HELPERS=y
+CONFIG_PHY_IMX93_MIPI_DPHY=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX93=y
+CONFIG_POWER_DOMAIN=y
+CONFIG_IMX93_BLK_CTRL=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+# CONFIG_REQUIRE_SERIAL_CONSOLE is not set
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_USB=y
+# CONFIG_SPL_DM_USB is not set
+# CONFIG_DM_USB_GADGET is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1fc9
+CONFIG_USB_GADGET_PRODUCT_NUM=0x0152
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_VBUS_DRAW=500
+CONFIG_USB_PORT_AUTO=y
+CONFIG_DM_VIDEO=y
+CONFIG_VIDEO_LOGO=y
+CONFIG_VIDEO_IMX_LCDIFV3=y
+CONFIG_SPLASH_SCREEN=y
+CONFIG_SPLASH_SCREEN_ALIGN=y
+CONFIG_BMP_16BPP=y
+CONFIG_BMP_24BPP=y
+CONFIG_BMP_32BPP=y
+CONFIG_ULP_WATCHDOG=y
+# CONFIG_SPL_USE_TINY_PRINTF is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SPL_SHA1 is not set
+CONFIG_HEXDUMP=y
+CONFIG_SPL_HEXDUMP=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
Index: u-boot-tx93-mb7/configs/tx93-5210_mfg_defconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/configs/tx93-5210_mfg_defconfig
@@ -0,0 +1,143 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX9=y
+CONFIG_SYS_TEXT_BASE=0x80200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x18000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x80000000
+CONFIG_SYS_MEMTEST_END=0x90000000
+CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_OFFSET=0x1ff000
+CONFIG_IMX_CONFIG=""
+CONFIG_DM_GPIO=y
+CONFIG_DEFAULT_DEVICE_TREE="imx93-tx93-5210"
+CONFIG_SPL_TEXT_BASE=0x2049A000
+CONFIG_TARGET_TX93=y
+CONFIG_KARO_UBOOT_MFG=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x88000000
+CONFIG_SPL_LOAD_IMX_CONTAINER=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_SYS_LOAD_ADDR=0x80400000
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_TIMESTAMP=y
+CONFIG_FIT_VERBOSE=y
+# CONFIG_LEGACY_IMAGE_FORMAT is not set
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTDELAY=0
+CONFIG_DEFAULT_FDT_FILE="imx93-tx93-5210.dtb"
+# CONFIG_SYS_CONSOLE_IS_IN_ENV is not set
+# CONFIG_SYS_DEVICE_NULLDEV is not set
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x1040
+CONFIG_SPL_I2C=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="TX93 U-Boot > "
+CONFIG_CMD_ERASEENV=y
+# CONFIG_CMD_CRC32 is not set
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_SNTP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_HASH=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_DOS_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SPL_PARTITION_UUIDS=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_USE_DEFAULT_ENV_FILE=y
+CONFIG_DEFAULT_ENV_FILE="board/$(VENDOR)/$(BOARD)/tx93-5210.env"
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX93=y
+CONFIG_CLK_IMX93=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0x82800000
+CONFIG_FASTBOOT_BUF_SIZE=0x20000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_UUU_SUPPORT=y
+CONFIG_IMX_RGPIO2P=y
+CONFIG_DM_PCA953X=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PHY_SMSC=y
+CONFIG_DM_ETH_PHY=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_IMX=y
+CONFIG_RGMII=y
+CONFIG_MIPI_DPHY_HELPERS=y
+CONFIG_PHY_IMX93_MIPI_DPHY=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX93=y
+CONFIG_POWER_DOMAIN=y
+CONFIG_IMX93_BLK_CTRL=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+# CONFIG_REQUIRE_SERIAL_CONSOLE is not set
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_USB=y
+# CONFIG_SPL_DM_USB is not set
+# CONFIG_DM_USB_GADGET is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1fc9
+CONFIG_USB_GADGET_PRODUCT_NUM=0x0152
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_VBUS_DRAW=500
+CONFIG_SDP_LOADADDR=0x82800000
+CONFIG_USB_FUNCTION_SDP=y
+CONFIG_USB_PORT_AUTO=y
+CONFIG_ULP_WATCHDOG=y
+# CONFIG_SPL_USE_TINY_PRINTF is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SPL_SHA1 is not set
+CONFIG_HEXDUMP=y
+CONFIG_SPL_HEXDUMP=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
Index: u-boot-tx93-mb7/configs/tx93-5210_noenv_defconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/configs/tx93-5210_noenv_defconfig
@@ -0,0 +1,141 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX9=y
+CONFIG_SYS_TEXT_BASE=0x80200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x18000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x80000000
+CONFIG_SYS_MEMTEST_END=0x90000000
+CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_OFFSET=0x1ff000
+CONFIG_IMX_CONFIG=""
+CONFIG_DM_GPIO=y
+CONFIG_DEFAULT_DEVICE_TREE="imx93-tx93-5210"
+CONFIG_SPL_TEXT_BASE=0x2049A000
+CONFIG_TARGET_TX93=y
+CONFIG_KARO_UBOOT_NOENV=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x88000000
+CONFIG_SPL_LOAD_IMX_CONTAINER=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_SYS_LOAD_ADDR=0x80400000
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_TIMESTAMP=y
+CONFIG_FIT_VERBOSE=y
+# CONFIG_LEGACY_IMAGE_FORMAT is not set
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTDELAY=-1
+CONFIG_DEFAULT_FDT_FILE="imx93-tx93-5210.dtb"
+# CONFIG_SYS_CONSOLE_IS_IN_ENV is not set
+# CONFIG_SYS_DEVICE_NULLDEV is not set
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x1040
+CONFIG_SPL_I2C=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="TX93 U-Boot > "
+CONFIG_CMD_ERASEENV=y
+# CONFIG_CMD_CRC32 is not set
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_SNTP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_HASH=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_DOS_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SPL_PARTITION_UUIDS=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_USE_DEFAULT_ENV_FILE=y
+CONFIG_DEFAULT_ENV_FILE="board/$(VENDOR)/$(BOARD)/tx93-5210.env"
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX93=y
+CONFIG_CLK_IMX93=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0x82800000
+CONFIG_FASTBOOT_BUF_SIZE=0x20000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_UUU_SUPPORT=y
+CONFIG_IMX_RGPIO2P=y
+CONFIG_DM_PCA953X=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PHY_SMSC=y
+CONFIG_DM_ETH_PHY=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_IMX=y
+CONFIG_RGMII=y
+CONFIG_MIPI_DPHY_HELPERS=y
+CONFIG_PHY_IMX93_MIPI_DPHY=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX93=y
+CONFIG_POWER_DOMAIN=y
+CONFIG_IMX93_BLK_CTRL=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+# CONFIG_REQUIRE_SERIAL_CONSOLE is not set
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_USB=y
+# CONFIG_SPL_DM_USB is not set
+# CONFIG_DM_USB_GADGET is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1fc9
+CONFIG_USB_GADGET_PRODUCT_NUM=0x0152
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_VBUS_DRAW=500
+CONFIG_USB_PORT_AUTO=y
+CONFIG_ULP_WATCHDOG=y
+# CONFIG_SPL_USE_TINY_PRINTF is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SPL_SHA1 is not set
+CONFIG_HEXDUMP=y
+CONFIG_SPL_HEXDUMP=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
Index: u-boot-tx93-mb7/env/Kconfig
===================================================================
--- u-boot-tx93-mb7.orig/env/Kconfig
+++ u-boot-tx93-mb7/env/Kconfig
@@ -45,6 +45,12 @@ config ENV_IS_NOWHERE
 	  stored. U-Boot will therefore always start up with a default
 	  environment.
 
+config UBOOT_IGNORE_ENV
+       bool
+       help
+	 Ignore non-volatile environment settings and use default
+	 environment only.
+
 config ENV_IS_IN_EEPROM
 	bool "Environment in EEPROM"
 	depends on !CHAIN_OF_TRUST
Index: u-boot-tx93-mb7/include/configs/tx93.h
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/include/configs/tx93.h
@@ -0,0 +1,67 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#ifndef __KARO_TX93_H
+#define __KARO_TX93_H
+
+#include <linux/sizes.h>
+#include <asm/arch/imx-regs.h>
+
+//#define __pfx(p, v)			(p##v)
+//#define _pfx(p, v)			__pfx(p, v)
+
+#define CONFIG_SYS_BOOTM_LEN		SZ_64M
+#define CONFIG_SPL_MAX_SIZE		(148 * 1024)
+#define CONFIG_SYS_MONITOR_LEN		SZ_512K
+#define CONFIG_SYS_UBOOT_BASE	\
+	(QSPI0_AMBA_BASE + CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR * 512)
+
+#define CONFIG_FDTADDR			0x83000000
+
+#ifdef CONFIG_SPL_BUILD
+#define CONFIG_SPL_STACK		0x20519dd0
+#define CONFIG_SPL_BSS_START_ADDR	0x2051a000
+#define CONFIG_SPL_BSS_MAX_SIZE		SZ_8K	/* 8 KB */
+#define CONFIG_SYS_SPL_MALLOC_START	0x83200000 /* Need disable simple malloc where still uses m+alloc_f area */
+#define CONFIG_SYS_SPL_MALLOC_SIZE	SZ_512K	/* 512 KB */
+
+/* For RAW image gives a error info not panic */
+#define CONFIG_SPL_ABORT_ON_RAW_IMAGE
+
+#endif
+
+/* Link Definitions */
+
+#define CONFIG_SYS_INIT_RAM_ADDR	0x80000000
+#define CONFIG_SYS_INIT_RAM_SIZE	0x200000
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+#define CONFIG_SYS_SDRAM_BASE		0x80000000
+#define PHYS_SDRAM			0x80000000
+#define PHYS_SDRAM_SIZE			SZ_1G
+
+/* Monitor Command Prompt */
+#define CONFIG_SYS_CBSIZE		2048
+#define CONFIG_SYS_MAXARGS		64
+#define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
+#define CONFIG_SYS_PBSIZE		(CONFIG_SYS_CBSIZE + \
+					sizeof(CONFIG_SYS_PROMPT) + 16)
+
+#define CONFIG_SYS_FSL_USDHC_NUM	2
+
+/* Using ULP WDOG for reset */
+#define WDOG_BASE_ADDR			WDG3_BASE_ADDR
+
+#define CONFIG_SYS_I2C_SPEED		100000
+
+/* USB configs */
+#define CONFIG_USB_MAX_CONTROLLER_COUNT	2
+
+#define CONFIG_ETHPRIME		"eth0"
+
+#endif /* __KARO_TX93_H */
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-lvds-mb-u-boot.dtsi
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-lvds-mb-u-boot.dtsi
@@ -0,0 +1,6 @@
+// SPDX-License-Identifier: (GPL-2.0 or MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#include "imx93-tx93-5210-u-boot.dtsi"
Index: u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-lvds-mb.dts
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/arch/arm/dts/imx93-tx93-5210-lvds-mb.dts
@@ -0,0 +1,10 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2023 Lothar Wa√ümann <LW@KARO-electronics.de>
+ */
+
+#include "imx93-tx93-5210.dts"
+
+/{
+	model = "Ka-Ro electronics GmbH TX93-5210 (NXP i.MX93) module on MIPI-LVDS-MB baseboard";
+};
Index: u-boot-tx93-mb7/configs/qs93-5210_mfg_defconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/configs/qs93-5210_mfg_defconfig
@@ -0,0 +1,146 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX9=y
+CONFIG_SYS_TEXT_BASE=0x80200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x18000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x80000000
+CONFIG_SYS_MEMTEST_END=0x90000000
+CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_OFFSET=0x1ff000
+CONFIG_IMX_CONFIG=""
+CONFIG_DM_GPIO=y
+CONFIG_DEFAULT_DEVICE_TREE="imx93-qs93-5210"
+CONFIG_SPL_TEXT_BASE=0x2049A000
+CONFIG_TARGET_TX93=y
+CONFIG_KARO_QS93_5210=y
+CONFIG_KARO_UBOOT_MFG=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x88000000
+CONFIG_SPL_LOAD_IMX_CONTAINER=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_SYS_LOAD_ADDR=0x80400000
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_TIMESTAMP=y
+CONFIG_FIT_VERBOSE=y
+# CONFIG_LEGACY_IMAGE_FORMAT is not set
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTDELAY=0
+CONFIG_DEFAULT_FDT_FILE="imx93-qs93-5210.dtb"
+# CONFIG_SYS_CONSOLE_IS_IN_ENV is not set
+# CONFIG_SYS_DEVICE_NULLDEV is not set
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x1040
+CONFIG_SPL_I2C=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="QS93 U-Boot > "
+CONFIG_CMD_ERASEENV=y
+# CONFIG_CMD_CRC32 is not set
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_SNTP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_HASH=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_DOS_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SPL_PARTITION_UUIDS=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_USE_DEFAULT_ENV_FILE=y
+CONFIG_DEFAULT_ENV_FILE="board/$(VENDOR)/$(BOARD)/qs93-5210.env"
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX93=y
+CONFIG_CLK_IMX93=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0x82800000
+CONFIG_FASTBOOT_BUF_SIZE=0x20000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_UUU_SUPPORT=y
+CONFIG_IMX_RGPIO2P=y
+CONFIG_DM_PCA953X=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+CONFIG_PHY_SMSC=y
+CONFIG_DM_ETH_PHY=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_IMX=y
+CONFIG_RGMII=y
+CONFIG_MIPI_DPHY_HELPERS=y
+CONFIG_PHY_IMX93_MIPI_DPHY=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX93=y
+CONFIG_POWER_DOMAIN=y
+CONFIG_IMX93_BLK_CTRL=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+# CONFIG_REQUIRE_SERIAL_CONSOLE is not set
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_USB=y
+# CONFIG_SPL_DM_USB is not set
+# CONFIG_DM_USB_GADGET is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1fc9
+CONFIG_USB_GADGET_PRODUCT_NUM=0x0152
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_VBUS_DRAW=500
+CONFIG_SDP_LOADADDR=0x82800000
+CONFIG_USB_FUNCTION_SDP=y
+CONFIG_USB_PORT_AUTO=y
+CONFIG_ULP_WATCHDOG=y
+# CONFIG_SPL_USE_TINY_PRINTF is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SPL_SHA1 is not set
+CONFIG_HEXDUMP=y
+CONFIG_SPL_HEXDUMP=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
Index: u-boot-tx93-mb7/configs/qs93-5210_noenv_defconfig
===================================================================
--- /dev/null
+++ u-boot-tx93-mb7/configs/qs93-5210_noenv_defconfig
@@ -0,0 +1,144 @@
+CONFIG_ARM=y
+CONFIG_ARCH_IMX9=y
+CONFIG_SYS_TEXT_BASE=0x80200000
+CONFIG_SYS_MALLOC_LEN=0x2000000
+CONFIG_SYS_MALLOC_F_LEN=0x18000
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_NR_DRAM_BANKS=2
+CONFIG_SYS_MEMTEST_START=0x80000000
+CONFIG_SYS_MEMTEST_END=0x90000000
+CONFIG_ENV_SIZE=0x1000
+CONFIG_ENV_OFFSET=0x1ff000
+CONFIG_IMX_CONFIG=""
+CONFIG_DM_GPIO=y
+CONFIG_DEFAULT_DEVICE_TREE="imx93-qs93-5210"
+CONFIG_SPL_TEXT_BASE=0x2049A000
+CONFIG_TARGET_TX93=y
+CONFIG_KARO_QS93_5210=y
+CONFIG_KARO_UBOOT_NOENV=y
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL=y
+CONFIG_SPL_IMX_ROMAPI_LOADADDR=0x88000000
+CONFIG_SPL_LOAD_IMX_CONTAINER=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_SYS_LOAD_ADDR=0x80400000
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_FIT=y
+CONFIG_TIMESTAMP=y
+CONFIG_FIT_VERBOSE=y
+# CONFIG_LEGACY_IMAGE_FORMAT is not set
+CONFIG_OF_BOARD_SETUP=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTDELAY=-1
+CONFIG_DEFAULT_FDT_FILE="imx93-qs93-5210.dtb"
+# CONFIG_SYS_CONSOLE_IS_IN_ENV is not set
+# CONFIG_SYS_DEVICE_NULLDEV is not set
+CONFIG_ARCH_MISC_INIT=y
+CONFIG_BOARD_EARLY_INIT_F=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+# CONFIG_SPL_LEGACY_IMAGE_SUPPORT is not set
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR=y
+CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR=0x1040
+CONFIG_SPL_I2C=y
+CONFIG_SPL_WATCHDOG=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="QS93 U-Boot > "
+CONFIG_CMD_ERASEENV=y
+# CONFIG_CMD_CRC32 is not set
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_FUSE=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_POWEROFF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_SNTP=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_TIMER=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_HASH=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+# CONFIG_DOS_PARTITION is not set
+# CONFIG_SPL_EFI_PARTITION is not set
+CONFIG_SPL_PARTITION_UUIDS=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_SYS_MMC_ENV_PART=1
+CONFIG_USE_DEFAULT_ENV_FILE=y
+CONFIG_DEFAULT_ENV_FILE="board/$(VENDOR)/$(BOARD)/qs93-5210.env"
+CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG=y
+CONFIG_SPL_DM=y
+CONFIG_SYSCON=y
+CONFIG_SPL_CLK_IMX93=y
+CONFIG_CLK_IMX93=y
+CONFIG_USB_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_BUF_ADDR=0x82800000
+CONFIG_FASTBOOT_BUF_SIZE=0x20000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_UUU_SUPPORT=y
+CONFIG_IMX_RGPIO2P=y
+CONFIG_DM_PCA953X=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_IMX_LPI2C=y
+CONFIG_SUPPORT_EMMC_BOOT=y
+CONFIG_MMC_IO_VOLTAGE=y
+CONFIG_MMC_UHS_SUPPORT=y
+CONFIG_FSL_USDHC=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+CONFIG_PHY_SMSC=y
+CONFIG_DM_ETH_PHY=y
+CONFIG_DWC_ETH_QOS=y
+CONFIG_DWC_ETH_QOS_IMX=y
+CONFIG_RGMII=y
+CONFIG_MIPI_DPHY_HELPERS=y
+CONFIG_PHY_IMX93_MIPI_DPHY=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_IMX93=y
+CONFIG_POWER_DOMAIN=y
+CONFIG_IMX93_BLK_CTRL=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+# CONFIG_REQUIRE_SERIAL_CONSOLE is not set
+CONFIG_DM_SERIAL=y
+CONFIG_FSL_LPUART=y
+CONFIG_DM_THERMAL=y
+CONFIG_IMX_TMU=y
+CONFIG_USB=y
+# CONFIG_SPL_DM_USB is not set
+# CONFIG_DM_USB_GADGET is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_MANUFACTURER="FSL"
+CONFIG_USB_GADGET_VENDOR_NUM=0x1fc9
+CONFIG_USB_GADGET_PRODUCT_NUM=0x0152
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_VBUS_DRAW=500
+CONFIG_USB_PORT_AUTO=y
+CONFIG_ULP_WATCHDOG=y
+# CONFIG_SPL_USE_TINY_PRINTF is not set
+# CONFIG_SHA256 is not set
+# CONFIG_SPL_SHA1 is not set
+CONFIG_HEXDUMP=y
+CONFIG_SPL_HEXDUMP=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
